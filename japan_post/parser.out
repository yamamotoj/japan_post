Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> choiki
Rule 1     choiki -> node_list
Rule 2     node -> node L_PAREN node_list R_PAREN
Rule 3     node -> node L_PAREN node_list EXCLUDE R_PAREN
Rule 4     node -> node L_PAREN node_list R_PAREN EXCLUDE
Rule 5     node_list -> node COMMA node_list
Rule 6     node_list -> node
Rule 7     node -> node WAVE_DASH
Rule 8     node_list -> bullet_list COMMA node_list
Rule 9     node_list -> bullet_list
Rule 10    node -> node bullet_list
Rule 11    node -> node L_PAREN bullet_list R_PAREN
Rule 12    bullet_list -> node BULLET bullet_list
Rule 13    bullet_list -> node
Rule 14    node -> node THEN num_node
Rule 15    range_node -> node WAVE_DASH node
Rule 16    node -> node node
Rule 17    num_node -> num_node HYPHEN num_node
Rule 18    string_node -> string_node HYPHEN num_node
Rule 19    node -> range_node
Rule 20    node -> num_node
Rule 21    node -> string_node
Rule 22    node -> suffix_node
Rule 23    node -> node DIRECTION
Rule 24    num_node -> PREFIX NUMBER
Rule 25    num_node -> PREFIX NUMBER SUFFIX
Rule 26    num_node -> PREFIX NUMBER SUFFIX COMPARATIVE_SUFFIX
Rule 27    num_node -> NUMBER SUFFIX
Rule 28    num_node -> NUMBER SUFFIX COMPARATIVE_SUFFIX
Rule 29    num_node -> NUMBER
Rule 30    num_node -> NUMBER COMPARATIVE_SUFFIX
Rule 31    num_node -> PREFIX NUMBER COMPARATIVE_SUFFIX
Rule 32    string_node -> ID NUMBER
Rule 33    string_node -> ID NUMBER SUFFIX
Rule 34    string_node -> ID
Rule 35    string_node -> string_node DOT ID
Rule 36    string_node -> FLOOR BULLET FLOOR
Rule 37    suffix_node -> SUFFIX

Terminals, with rules where they appear

BULLET               : 12 36
COMMA                : 5 8
COMPARATIVE_SUFFIX   : 26 28 30 31
DIRECTION            : 23
DOT                  : 35
EXCLUDE              : 3 4
FLOOR                : 36 36
HYPHEN               : 17 18
ID                   : 32 33 34 35
L_PAREN              : 2 3 4 11
NUMBER               : 24 25 26 27 28 29 30 31 32 33
PREFIX               : 24 25 26 31
R_PAREN              : 2 3 4 11
SUFFIX               : 25 26 27 28 33 37
THEN                 : 14
WAVE_DASH            : 7 15
error                : 

Nonterminals, with rules where they appear

bullet_list          : 8 9 10 11 12
choiki               : 0
node                 : 2 3 4 5 6 7 10 11 12 13 14 15 15 16 16 23
node_list            : 1 2 3 4 5 8
num_node             : 14 17 17 18 20
range_node           : 19
string_node          : 18 21 35
suffix_node          : 22

Parsing method: LALR

state 0

    (0) S' -> . choiki
    (1) choiki -> . node_list
    (5) node_list -> . node COMMA node_list
    (6) node_list -> . node
    (8) node_list -> . bullet_list COMMA node_list
    (9) node_list -> . bullet_list
    (2) node -> . node L_PAREN node_list R_PAREN
    (3) node -> . node L_PAREN node_list EXCLUDE R_PAREN
    (4) node -> . node L_PAREN node_list R_PAREN EXCLUDE
    (7) node -> . node WAVE_DASH
    (10) node -> . node bullet_list
    (11) node -> . node L_PAREN bullet_list R_PAREN
    (14) node -> . node THEN num_node
    (16) node -> . node node
    (19) node -> . range_node
    (20) node -> . num_node
    (21) node -> . string_node
    (22) node -> . suffix_node
    (23) node -> . node DIRECTION
    (12) bullet_list -> . node BULLET bullet_list
    (13) bullet_list -> . node
    (15) range_node -> . node WAVE_DASH node
    (17) num_node -> . num_node HYPHEN num_node
    (24) num_node -> . PREFIX NUMBER
    (25) num_node -> . PREFIX NUMBER SUFFIX
    (26) num_node -> . PREFIX NUMBER SUFFIX COMPARATIVE_SUFFIX
    (27) num_node -> . NUMBER SUFFIX
    (28) num_node -> . NUMBER SUFFIX COMPARATIVE_SUFFIX
    (29) num_node -> . NUMBER
    (30) num_node -> . NUMBER COMPARATIVE_SUFFIX
    (31) num_node -> . PREFIX NUMBER COMPARATIVE_SUFFIX
    (18) string_node -> . string_node HYPHEN num_node
    (32) string_node -> . ID NUMBER
    (33) string_node -> . ID NUMBER SUFFIX
    (34) string_node -> . ID
    (35) string_node -> . string_node DOT ID
    (36) string_node -> . FLOOR BULLET FLOOR
    (37) suffix_node -> . SUFFIX

    PREFIX          shift and go to state 9
    NUMBER          shift and go to state 10
    ID              shift and go to state 12
    FLOOR           shift and go to state 13
    SUFFIX          shift and go to state 11

    choiki                         shift and go to state 1
    node_list                      shift and go to state 2
    node                           shift and go to state 3
    bullet_list                    shift and go to state 4
    num_node                       shift and go to state 5
    range_node                     shift and go to state 6
    string_node                    shift and go to state 7
    suffix_node                    shift and go to state 8

state 1

    (0) S' -> choiki .



state 2

    (1) choiki -> node_list .

    $end            reduce using rule 1 (choiki -> node_list .)


state 3

    (5) node_list -> node . COMMA node_list
    (6) node_list -> node .
    (2) node -> node . L_PAREN node_list R_PAREN
    (3) node -> node . L_PAREN node_list EXCLUDE R_PAREN
    (4) node -> node . L_PAREN node_list R_PAREN EXCLUDE
    (7) node -> node . WAVE_DASH
    (10) node -> node . bullet_list
    (11) node -> node . L_PAREN bullet_list R_PAREN
    (14) node -> node . THEN num_node
    (16) node -> node . node
    (23) node -> node . DIRECTION
    (12) bullet_list -> node . BULLET bullet_list
    (13) bullet_list -> node .
    (15) range_node -> node . WAVE_DASH node
    (12) bullet_list -> . node BULLET bullet_list
    (13) bullet_list -> . node
    (2) node -> . node L_PAREN node_list R_PAREN
    (3) node -> . node L_PAREN node_list EXCLUDE R_PAREN
    (4) node -> . node L_PAREN node_list R_PAREN EXCLUDE
    (7) node -> . node WAVE_DASH
    (10) node -> . node bullet_list
    (11) node -> . node L_PAREN bullet_list R_PAREN
    (14) node -> . node THEN num_node
    (16) node -> . node node
    (19) node -> . range_node
    (20) node -> . num_node
    (21) node -> . string_node
    (22) node -> . suffix_node
    (23) node -> . node DIRECTION
    (15) range_node -> . node WAVE_DASH node
    (17) num_node -> . num_node HYPHEN num_node
    (24) num_node -> . PREFIX NUMBER
    (25) num_node -> . PREFIX NUMBER SUFFIX
    (26) num_node -> . PREFIX NUMBER SUFFIX COMPARATIVE_SUFFIX
    (27) num_node -> . NUMBER SUFFIX
    (28) num_node -> . NUMBER SUFFIX COMPARATIVE_SUFFIX
    (29) num_node -> . NUMBER
    (30) num_node -> . NUMBER COMPARATIVE_SUFFIX
    (31) num_node -> . PREFIX NUMBER COMPARATIVE_SUFFIX
    (18) string_node -> . string_node HYPHEN num_node
    (32) string_node -> . ID NUMBER
    (33) string_node -> . ID NUMBER SUFFIX
    (34) string_node -> . ID
    (35) string_node -> . string_node DOT ID
    (36) string_node -> . FLOOR BULLET FLOOR
    (37) suffix_node -> . SUFFIX

  ! shift/reduce conflict for COMMA resolved as shift
  ! reduce/reduce conflict for $end resolved using rule 6 (node_list -> node .)
  ! reduce/reduce conflict for R_PAREN resolved using rule 6 (node_list -> node .)
  ! reduce/reduce conflict for EXCLUDE resolved using rule 6 (node_list -> node .)
    COMMA           shift and go to state 15
    $end            reduce using rule 6 (node_list -> node .)
    R_PAREN         reduce using rule 6 (node_list -> node .)
    EXCLUDE         reduce using rule 6 (node_list -> node .)
    L_PAREN         shift and go to state 16
    WAVE_DASH       shift and go to state 17
    THEN            shift and go to state 19
    DIRECTION       shift and go to state 20
    BULLET          shift and go to state 21
    PREFIX          shift and go to state 9
    NUMBER          shift and go to state 10
    ID              shift and go to state 12
    FLOOR           shift and go to state 13
    SUFFIX          shift and go to state 11

  ! COMMA           [ reduce using rule 13 (bullet_list -> node .) ]
  ! $end            [ reduce using rule 13 (bullet_list -> node .) ]
  ! R_PAREN         [ reduce using rule 13 (bullet_list -> node .) ]
  ! EXCLUDE         [ reduce using rule 13 (bullet_list -> node .) ]

    node                           shift and go to state 14
    bullet_list                    shift and go to state 18
    num_node                       shift and go to state 5
    range_node                     shift and go to state 6
    string_node                    shift and go to state 7
    suffix_node                    shift and go to state 8

state 4

    (8) node_list -> bullet_list . COMMA node_list
    (9) node_list -> bullet_list .

    COMMA           shift and go to state 22
    $end            reduce using rule 9 (node_list -> bullet_list .)
    R_PAREN         reduce using rule 9 (node_list -> bullet_list .)
    EXCLUDE         reduce using rule 9 (node_list -> bullet_list .)


state 5

    (20) node -> num_node .
    (17) num_node -> num_node . HYPHEN num_node

    COMMA           reduce using rule 20 (node -> num_node .)
    L_PAREN         reduce using rule 20 (node -> num_node .)
    WAVE_DASH       reduce using rule 20 (node -> num_node .)
    THEN            reduce using rule 20 (node -> num_node .)
    DIRECTION       reduce using rule 20 (node -> num_node .)
    BULLET          reduce using rule 20 (node -> num_node .)
    PREFIX          reduce using rule 20 (node -> num_node .)
    NUMBER          reduce using rule 20 (node -> num_node .)
    ID              reduce using rule 20 (node -> num_node .)
    FLOOR           reduce using rule 20 (node -> num_node .)
    SUFFIX          reduce using rule 20 (node -> num_node .)
    $end            reduce using rule 20 (node -> num_node .)
    R_PAREN         reduce using rule 20 (node -> num_node .)
    EXCLUDE         reduce using rule 20 (node -> num_node .)
    HYPHEN          shift and go to state 23


state 6

    (19) node -> range_node .

    COMMA           reduce using rule 19 (node -> range_node .)
    L_PAREN         reduce using rule 19 (node -> range_node .)
    WAVE_DASH       reduce using rule 19 (node -> range_node .)
    THEN            reduce using rule 19 (node -> range_node .)
    DIRECTION       reduce using rule 19 (node -> range_node .)
    BULLET          reduce using rule 19 (node -> range_node .)
    PREFIX          reduce using rule 19 (node -> range_node .)
    NUMBER          reduce using rule 19 (node -> range_node .)
    ID              reduce using rule 19 (node -> range_node .)
    FLOOR           reduce using rule 19 (node -> range_node .)
    SUFFIX          reduce using rule 19 (node -> range_node .)
    $end            reduce using rule 19 (node -> range_node .)
    R_PAREN         reduce using rule 19 (node -> range_node .)
    EXCLUDE         reduce using rule 19 (node -> range_node .)


state 7

    (21) node -> string_node .
    (18) string_node -> string_node . HYPHEN num_node
    (35) string_node -> string_node . DOT ID

    COMMA           reduce using rule 21 (node -> string_node .)
    L_PAREN         reduce using rule 21 (node -> string_node .)
    WAVE_DASH       reduce using rule 21 (node -> string_node .)
    THEN            reduce using rule 21 (node -> string_node .)
    DIRECTION       reduce using rule 21 (node -> string_node .)
    BULLET          reduce using rule 21 (node -> string_node .)
    PREFIX          reduce using rule 21 (node -> string_node .)
    NUMBER          reduce using rule 21 (node -> string_node .)
    ID              reduce using rule 21 (node -> string_node .)
    FLOOR           reduce using rule 21 (node -> string_node .)
    SUFFIX          reduce using rule 21 (node -> string_node .)
    $end            reduce using rule 21 (node -> string_node .)
    R_PAREN         reduce using rule 21 (node -> string_node .)
    EXCLUDE         reduce using rule 21 (node -> string_node .)
    HYPHEN          shift and go to state 24
    DOT             shift and go to state 25


state 8

    (22) node -> suffix_node .

    COMMA           reduce using rule 22 (node -> suffix_node .)
    L_PAREN         reduce using rule 22 (node -> suffix_node .)
    WAVE_DASH       reduce using rule 22 (node -> suffix_node .)
    THEN            reduce using rule 22 (node -> suffix_node .)
    DIRECTION       reduce using rule 22 (node -> suffix_node .)
    BULLET          reduce using rule 22 (node -> suffix_node .)
    PREFIX          reduce using rule 22 (node -> suffix_node .)
    NUMBER          reduce using rule 22 (node -> suffix_node .)
    ID              reduce using rule 22 (node -> suffix_node .)
    FLOOR           reduce using rule 22 (node -> suffix_node .)
    SUFFIX          reduce using rule 22 (node -> suffix_node .)
    $end            reduce using rule 22 (node -> suffix_node .)
    R_PAREN         reduce using rule 22 (node -> suffix_node .)
    EXCLUDE         reduce using rule 22 (node -> suffix_node .)


state 9

    (24) num_node -> PREFIX . NUMBER
    (25) num_node -> PREFIX . NUMBER SUFFIX
    (26) num_node -> PREFIX . NUMBER SUFFIX COMPARATIVE_SUFFIX
    (31) num_node -> PREFIX . NUMBER COMPARATIVE_SUFFIX

    NUMBER          shift and go to state 26


state 10

    (27) num_node -> NUMBER . SUFFIX
    (28) num_node -> NUMBER . SUFFIX COMPARATIVE_SUFFIX
    (29) num_node -> NUMBER .
    (30) num_node -> NUMBER . COMPARATIVE_SUFFIX

  ! shift/reduce conflict for SUFFIX resolved as shift
    SUFFIX          shift and go to state 27
    HYPHEN          reduce using rule 29 (num_node -> NUMBER .)
    COMMA           reduce using rule 29 (num_node -> NUMBER .)
    L_PAREN         reduce using rule 29 (num_node -> NUMBER .)
    WAVE_DASH       reduce using rule 29 (num_node -> NUMBER .)
    THEN            reduce using rule 29 (num_node -> NUMBER .)
    DIRECTION       reduce using rule 29 (num_node -> NUMBER .)
    BULLET          reduce using rule 29 (num_node -> NUMBER .)
    PREFIX          reduce using rule 29 (num_node -> NUMBER .)
    NUMBER          reduce using rule 29 (num_node -> NUMBER .)
    ID              reduce using rule 29 (num_node -> NUMBER .)
    FLOOR           reduce using rule 29 (num_node -> NUMBER .)
    $end            reduce using rule 29 (num_node -> NUMBER .)
    R_PAREN         reduce using rule 29 (num_node -> NUMBER .)
    EXCLUDE         reduce using rule 29 (num_node -> NUMBER .)
    DOT             reduce using rule 29 (num_node -> NUMBER .)
    COMPARATIVE_SUFFIX shift and go to state 28

  ! SUFFIX          [ reduce using rule 29 (num_node -> NUMBER .) ]


state 11

    (37) suffix_node -> SUFFIX .

    COMMA           reduce using rule 37 (suffix_node -> SUFFIX .)
    L_PAREN         reduce using rule 37 (suffix_node -> SUFFIX .)
    WAVE_DASH       reduce using rule 37 (suffix_node -> SUFFIX .)
    THEN            reduce using rule 37 (suffix_node -> SUFFIX .)
    DIRECTION       reduce using rule 37 (suffix_node -> SUFFIX .)
    BULLET          reduce using rule 37 (suffix_node -> SUFFIX .)
    PREFIX          reduce using rule 37 (suffix_node -> SUFFIX .)
    NUMBER          reduce using rule 37 (suffix_node -> SUFFIX .)
    ID              reduce using rule 37 (suffix_node -> SUFFIX .)
    FLOOR           reduce using rule 37 (suffix_node -> SUFFIX .)
    SUFFIX          reduce using rule 37 (suffix_node -> SUFFIX .)
    $end            reduce using rule 37 (suffix_node -> SUFFIX .)
    R_PAREN         reduce using rule 37 (suffix_node -> SUFFIX .)
    EXCLUDE         reduce using rule 37 (suffix_node -> SUFFIX .)


state 12

    (32) string_node -> ID . NUMBER
    (33) string_node -> ID . NUMBER SUFFIX
    (34) string_node -> ID .

  ! shift/reduce conflict for NUMBER resolved as shift
    NUMBER          shift and go to state 29
    HYPHEN          reduce using rule 34 (string_node -> ID .)
    DOT             reduce using rule 34 (string_node -> ID .)
    COMMA           reduce using rule 34 (string_node -> ID .)
    L_PAREN         reduce using rule 34 (string_node -> ID .)
    WAVE_DASH       reduce using rule 34 (string_node -> ID .)
    THEN            reduce using rule 34 (string_node -> ID .)
    DIRECTION       reduce using rule 34 (string_node -> ID .)
    BULLET          reduce using rule 34 (string_node -> ID .)
    PREFIX          reduce using rule 34 (string_node -> ID .)
    ID              reduce using rule 34 (string_node -> ID .)
    FLOOR           reduce using rule 34 (string_node -> ID .)
    SUFFIX          reduce using rule 34 (string_node -> ID .)
    $end            reduce using rule 34 (string_node -> ID .)
    R_PAREN         reduce using rule 34 (string_node -> ID .)
    EXCLUDE         reduce using rule 34 (string_node -> ID .)

  ! NUMBER          [ reduce using rule 34 (string_node -> ID .) ]


state 13

    (36) string_node -> FLOOR . BULLET FLOOR

    BULLET          shift and go to state 30


state 14

    (16) node -> node node .
    (12) bullet_list -> node . BULLET bullet_list
    (13) bullet_list -> node .
    (2) node -> node . L_PAREN node_list R_PAREN
    (3) node -> node . L_PAREN node_list EXCLUDE R_PAREN
    (4) node -> node . L_PAREN node_list R_PAREN EXCLUDE
    (7) node -> node . WAVE_DASH
    (10) node -> node . bullet_list
    (11) node -> node . L_PAREN bullet_list R_PAREN
    (14) node -> node . THEN num_node
    (16) node -> node . node
    (23) node -> node . DIRECTION
    (15) range_node -> node . WAVE_DASH node
    (12) bullet_list -> . node BULLET bullet_list
    (13) bullet_list -> . node
    (2) node -> . node L_PAREN node_list R_PAREN
    (3) node -> . node L_PAREN node_list EXCLUDE R_PAREN
    (4) node -> . node L_PAREN node_list R_PAREN EXCLUDE
    (7) node -> . node WAVE_DASH
    (10) node -> . node bullet_list
    (11) node -> . node L_PAREN bullet_list R_PAREN
    (14) node -> . node THEN num_node
    (16) node -> . node node
    (19) node -> . range_node
    (20) node -> . num_node
    (21) node -> . string_node
    (22) node -> . suffix_node
    (23) node -> . node DIRECTION
    (15) range_node -> . node WAVE_DASH node
    (17) num_node -> . num_node HYPHEN num_node
    (24) num_node -> . PREFIX NUMBER
    (25) num_node -> . PREFIX NUMBER SUFFIX
    (26) num_node -> . PREFIX NUMBER SUFFIX COMPARATIVE_SUFFIX
    (27) num_node -> . NUMBER SUFFIX
    (28) num_node -> . NUMBER SUFFIX COMPARATIVE_SUFFIX
    (29) num_node -> . NUMBER
    (30) num_node -> . NUMBER COMPARATIVE_SUFFIX
    (31) num_node -> . PREFIX NUMBER COMPARATIVE_SUFFIX
    (18) string_node -> . string_node HYPHEN num_node
    (32) string_node -> . ID NUMBER
    (33) string_node -> . ID NUMBER SUFFIX
    (34) string_node -> . ID
    (35) string_node -> . string_node DOT ID
    (36) string_node -> . FLOOR BULLET FLOOR
    (37) suffix_node -> . SUFFIX

  ! shift/reduce conflict for BULLET resolved as shift
  ! reduce/reduce conflict for COMMA resolved using rule 13 (bullet_list -> node .)
  ! reduce/reduce conflict for L_PAREN resolved using rule 13 (bullet_list -> node .)
  ! reduce/reduce conflict for WAVE_DASH resolved using rule 13 (bullet_list -> node .)
  ! reduce/reduce conflict for THEN resolved using rule 13 (bullet_list -> node .)
  ! reduce/reduce conflict for DIRECTION resolved using rule 13 (bullet_list -> node .)
  ! shift/reduce conflict for BULLET resolved as shift
  ! reduce/reduce conflict for PREFIX resolved using rule 13 (bullet_list -> node .)
  ! reduce/reduce conflict for NUMBER resolved using rule 13 (bullet_list -> node .)
  ! reduce/reduce conflict for ID resolved using rule 13 (bullet_list -> node .)
  ! reduce/reduce conflict for FLOOR resolved using rule 13 (bullet_list -> node .)
  ! reduce/reduce conflict for SUFFIX resolved using rule 13 (bullet_list -> node .)
  ! reduce/reduce conflict for $end resolved using rule 13 (bullet_list -> node .)
  ! reduce/reduce conflict for R_PAREN resolved using rule 13 (bullet_list -> node .)
  ! reduce/reduce conflict for EXCLUDE resolved using rule 13 (bullet_list -> node .)
  ! shift/reduce conflict for L_PAREN resolved as shift
  ! shift/reduce conflict for WAVE_DASH resolved as shift
  ! shift/reduce conflict for THEN resolved as shift
  ! shift/reduce conflict for DIRECTION resolved as shift
  ! shift/reduce conflict for PREFIX resolved as shift
  ! shift/reduce conflict for NUMBER resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for FLOOR resolved as shift
  ! shift/reduce conflict for SUFFIX resolved as shift
    BULLET          shift and go to state 21
    COMMA           reduce using rule 13 (bullet_list -> node .)
    $end            reduce using rule 13 (bullet_list -> node .)
    R_PAREN         reduce using rule 13 (bullet_list -> node .)
    EXCLUDE         reduce using rule 13 (bullet_list -> node .)
    L_PAREN         shift and go to state 16
    WAVE_DASH       shift and go to state 17
    THEN            shift and go to state 19
    DIRECTION       shift and go to state 20
    PREFIX          shift and go to state 9
    NUMBER          shift and go to state 10
    ID              shift and go to state 12
    FLOOR           shift and go to state 13
    SUFFIX          shift and go to state 11

  ! COMMA           [ reduce using rule 16 (node -> node node .) ]
  ! L_PAREN         [ reduce using rule 16 (node -> node node .) ]
  ! WAVE_DASH       [ reduce using rule 16 (node -> node node .) ]
  ! THEN            [ reduce using rule 16 (node -> node node .) ]
  ! DIRECTION       [ reduce using rule 16 (node -> node node .) ]
  ! BULLET          [ reduce using rule 16 (node -> node node .) ]
  ! PREFIX          [ reduce using rule 16 (node -> node node .) ]
  ! NUMBER          [ reduce using rule 16 (node -> node node .) ]
  ! ID              [ reduce using rule 16 (node -> node node .) ]
  ! FLOOR           [ reduce using rule 16 (node -> node node .) ]
  ! SUFFIX          [ reduce using rule 16 (node -> node node .) ]
  ! $end            [ reduce using rule 16 (node -> node node .) ]
  ! R_PAREN         [ reduce using rule 16 (node -> node node .) ]
  ! EXCLUDE         [ reduce using rule 16 (node -> node node .) ]
  ! L_PAREN         [ reduce using rule 13 (bullet_list -> node .) ]
  ! WAVE_DASH       [ reduce using rule 13 (bullet_list -> node .) ]
  ! THEN            [ reduce using rule 13 (bullet_list -> node .) ]
  ! DIRECTION       [ reduce using rule 13 (bullet_list -> node .) ]
  ! BULLET          [ reduce using rule 13 (bullet_list -> node .) ]
  ! PREFIX          [ reduce using rule 13 (bullet_list -> node .) ]
  ! NUMBER          [ reduce using rule 13 (bullet_list -> node .) ]
  ! ID              [ reduce using rule 13 (bullet_list -> node .) ]
  ! FLOOR           [ reduce using rule 13 (bullet_list -> node .) ]
  ! SUFFIX          [ reduce using rule 13 (bullet_list -> node .) ]

    node                           shift and go to state 14
    bullet_list                    shift and go to state 18
    num_node                       shift and go to state 5
    range_node                     shift and go to state 6
    string_node                    shift and go to state 7
    suffix_node                    shift and go to state 8

state 15

    (5) node_list -> node COMMA . node_list
    (5) node_list -> . node COMMA node_list
    (6) node_list -> . node
    (8) node_list -> . bullet_list COMMA node_list
    (9) node_list -> . bullet_list
    (2) node -> . node L_PAREN node_list R_PAREN
    (3) node -> . node L_PAREN node_list EXCLUDE R_PAREN
    (4) node -> . node L_PAREN node_list R_PAREN EXCLUDE
    (7) node -> . node WAVE_DASH
    (10) node -> . node bullet_list
    (11) node -> . node L_PAREN bullet_list R_PAREN
    (14) node -> . node THEN num_node
    (16) node -> . node node
    (19) node -> . range_node
    (20) node -> . num_node
    (21) node -> . string_node
    (22) node -> . suffix_node
    (23) node -> . node DIRECTION
    (12) bullet_list -> . node BULLET bullet_list
    (13) bullet_list -> . node
    (15) range_node -> . node WAVE_DASH node
    (17) num_node -> . num_node HYPHEN num_node
    (24) num_node -> . PREFIX NUMBER
    (25) num_node -> . PREFIX NUMBER SUFFIX
    (26) num_node -> . PREFIX NUMBER SUFFIX COMPARATIVE_SUFFIX
    (27) num_node -> . NUMBER SUFFIX
    (28) num_node -> . NUMBER SUFFIX COMPARATIVE_SUFFIX
    (29) num_node -> . NUMBER
    (30) num_node -> . NUMBER COMPARATIVE_SUFFIX
    (31) num_node -> . PREFIX NUMBER COMPARATIVE_SUFFIX
    (18) string_node -> . string_node HYPHEN num_node
    (32) string_node -> . ID NUMBER
    (33) string_node -> . ID NUMBER SUFFIX
    (34) string_node -> . ID
    (35) string_node -> . string_node DOT ID
    (36) string_node -> . FLOOR BULLET FLOOR
    (37) suffix_node -> . SUFFIX

    PREFIX          shift and go to state 9
    NUMBER          shift and go to state 10
    ID              shift and go to state 12
    FLOOR           shift and go to state 13
    SUFFIX          shift and go to state 11

    node                           shift and go to state 3
    node_list                      shift and go to state 31
    bullet_list                    shift and go to state 4
    num_node                       shift and go to state 5
    range_node                     shift and go to state 6
    string_node                    shift and go to state 7
    suffix_node                    shift and go to state 8

state 16

    (2) node -> node L_PAREN . node_list R_PAREN
    (3) node -> node L_PAREN . node_list EXCLUDE R_PAREN
    (4) node -> node L_PAREN . node_list R_PAREN EXCLUDE
    (11) node -> node L_PAREN . bullet_list R_PAREN
    (5) node_list -> . node COMMA node_list
    (6) node_list -> . node
    (8) node_list -> . bullet_list COMMA node_list
    (9) node_list -> . bullet_list
    (12) bullet_list -> . node BULLET bullet_list
    (13) bullet_list -> . node
    (2) node -> . node L_PAREN node_list R_PAREN
    (3) node -> . node L_PAREN node_list EXCLUDE R_PAREN
    (4) node -> . node L_PAREN node_list R_PAREN EXCLUDE
    (7) node -> . node WAVE_DASH
    (10) node -> . node bullet_list
    (11) node -> . node L_PAREN bullet_list R_PAREN
    (14) node -> . node THEN num_node
    (16) node -> . node node
    (19) node -> . range_node
    (20) node -> . num_node
    (21) node -> . string_node
    (22) node -> . suffix_node
    (23) node -> . node DIRECTION
    (15) range_node -> . node WAVE_DASH node
    (17) num_node -> . num_node HYPHEN num_node
    (24) num_node -> . PREFIX NUMBER
    (25) num_node -> . PREFIX NUMBER SUFFIX
    (26) num_node -> . PREFIX NUMBER SUFFIX COMPARATIVE_SUFFIX
    (27) num_node -> . NUMBER SUFFIX
    (28) num_node -> . NUMBER SUFFIX COMPARATIVE_SUFFIX
    (29) num_node -> . NUMBER
    (30) num_node -> . NUMBER COMPARATIVE_SUFFIX
    (31) num_node -> . PREFIX NUMBER COMPARATIVE_SUFFIX
    (18) string_node -> . string_node HYPHEN num_node
    (32) string_node -> . ID NUMBER
    (33) string_node -> . ID NUMBER SUFFIX
    (34) string_node -> . ID
    (35) string_node -> . string_node DOT ID
    (36) string_node -> . FLOOR BULLET FLOOR
    (37) suffix_node -> . SUFFIX

    PREFIX          shift and go to state 9
    NUMBER          shift and go to state 10
    ID              shift and go to state 12
    FLOOR           shift and go to state 13
    SUFFIX          shift and go to state 11

    node                           shift and go to state 32
    node_list                      shift and go to state 33
    bullet_list                    shift and go to state 34
    num_node                       shift and go to state 5
    range_node                     shift and go to state 6
    string_node                    shift and go to state 7
    suffix_node                    shift and go to state 8

state 17

    (7) node -> node WAVE_DASH .
    (15) range_node -> node WAVE_DASH . node
    (2) node -> . node L_PAREN node_list R_PAREN
    (3) node -> . node L_PAREN node_list EXCLUDE R_PAREN
    (4) node -> . node L_PAREN node_list R_PAREN EXCLUDE
    (7) node -> . node WAVE_DASH
    (10) node -> . node bullet_list
    (11) node -> . node L_PAREN bullet_list R_PAREN
    (14) node -> . node THEN num_node
    (16) node -> . node node
    (19) node -> . range_node
    (20) node -> . num_node
    (21) node -> . string_node
    (22) node -> . suffix_node
    (23) node -> . node DIRECTION
    (15) range_node -> . node WAVE_DASH node
    (17) num_node -> . num_node HYPHEN num_node
    (24) num_node -> . PREFIX NUMBER
    (25) num_node -> . PREFIX NUMBER SUFFIX
    (26) num_node -> . PREFIX NUMBER SUFFIX COMPARATIVE_SUFFIX
    (27) num_node -> . NUMBER SUFFIX
    (28) num_node -> . NUMBER SUFFIX COMPARATIVE_SUFFIX
    (29) num_node -> . NUMBER
    (30) num_node -> . NUMBER COMPARATIVE_SUFFIX
    (31) num_node -> . PREFIX NUMBER COMPARATIVE_SUFFIX
    (18) string_node -> . string_node HYPHEN num_node
    (32) string_node -> . ID NUMBER
    (33) string_node -> . ID NUMBER SUFFIX
    (34) string_node -> . ID
    (35) string_node -> . string_node DOT ID
    (36) string_node -> . FLOOR BULLET FLOOR
    (37) suffix_node -> . SUFFIX

  ! shift/reduce conflict for PREFIX resolved as shift
  ! shift/reduce conflict for NUMBER resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for FLOOR resolved as shift
  ! shift/reduce conflict for SUFFIX resolved as shift
    COMMA           reduce using rule 7 (node -> node WAVE_DASH .)
    L_PAREN         reduce using rule 7 (node -> node WAVE_DASH .)
    WAVE_DASH       reduce using rule 7 (node -> node WAVE_DASH .)
    THEN            reduce using rule 7 (node -> node WAVE_DASH .)
    DIRECTION       reduce using rule 7 (node -> node WAVE_DASH .)
    BULLET          reduce using rule 7 (node -> node WAVE_DASH .)
    $end            reduce using rule 7 (node -> node WAVE_DASH .)
    R_PAREN         reduce using rule 7 (node -> node WAVE_DASH .)
    EXCLUDE         reduce using rule 7 (node -> node WAVE_DASH .)
    PREFIX          shift and go to state 9
    NUMBER          shift and go to state 10
    ID              shift and go to state 12
    FLOOR           shift and go to state 13
    SUFFIX          shift and go to state 11

  ! PREFIX          [ reduce using rule 7 (node -> node WAVE_DASH .) ]
  ! NUMBER          [ reduce using rule 7 (node -> node WAVE_DASH .) ]
  ! ID              [ reduce using rule 7 (node -> node WAVE_DASH .) ]
  ! FLOOR           [ reduce using rule 7 (node -> node WAVE_DASH .) ]
  ! SUFFIX          [ reduce using rule 7 (node -> node WAVE_DASH .) ]

    node                           shift and go to state 35
    num_node                       shift and go to state 5
    range_node                     shift and go to state 6
    string_node                    shift and go to state 7
    suffix_node                    shift and go to state 8

state 18

    (10) node -> node bullet_list .

    COMMA           reduce using rule 10 (node -> node bullet_list .)
    L_PAREN         reduce using rule 10 (node -> node bullet_list .)
    WAVE_DASH       reduce using rule 10 (node -> node bullet_list .)
    THEN            reduce using rule 10 (node -> node bullet_list .)
    DIRECTION       reduce using rule 10 (node -> node bullet_list .)
    BULLET          reduce using rule 10 (node -> node bullet_list .)
    PREFIX          reduce using rule 10 (node -> node bullet_list .)
    NUMBER          reduce using rule 10 (node -> node bullet_list .)
    ID              reduce using rule 10 (node -> node bullet_list .)
    FLOOR           reduce using rule 10 (node -> node bullet_list .)
    SUFFIX          reduce using rule 10 (node -> node bullet_list .)
    $end            reduce using rule 10 (node -> node bullet_list .)
    R_PAREN         reduce using rule 10 (node -> node bullet_list .)
    EXCLUDE         reduce using rule 10 (node -> node bullet_list .)


state 19

    (14) node -> node THEN . num_node
    (17) num_node -> . num_node HYPHEN num_node
    (24) num_node -> . PREFIX NUMBER
    (25) num_node -> . PREFIX NUMBER SUFFIX
    (26) num_node -> . PREFIX NUMBER SUFFIX COMPARATIVE_SUFFIX
    (27) num_node -> . NUMBER SUFFIX
    (28) num_node -> . NUMBER SUFFIX COMPARATIVE_SUFFIX
    (29) num_node -> . NUMBER
    (30) num_node -> . NUMBER COMPARATIVE_SUFFIX
    (31) num_node -> . PREFIX NUMBER COMPARATIVE_SUFFIX

    PREFIX          shift and go to state 9
    NUMBER          shift and go to state 10

    num_node                       shift and go to state 36

state 20

    (23) node -> node DIRECTION .

    COMMA           reduce using rule 23 (node -> node DIRECTION .)
    L_PAREN         reduce using rule 23 (node -> node DIRECTION .)
    WAVE_DASH       reduce using rule 23 (node -> node DIRECTION .)
    THEN            reduce using rule 23 (node -> node DIRECTION .)
    DIRECTION       reduce using rule 23 (node -> node DIRECTION .)
    BULLET          reduce using rule 23 (node -> node DIRECTION .)
    PREFIX          reduce using rule 23 (node -> node DIRECTION .)
    NUMBER          reduce using rule 23 (node -> node DIRECTION .)
    ID              reduce using rule 23 (node -> node DIRECTION .)
    FLOOR           reduce using rule 23 (node -> node DIRECTION .)
    SUFFIX          reduce using rule 23 (node -> node DIRECTION .)
    $end            reduce using rule 23 (node -> node DIRECTION .)
    R_PAREN         reduce using rule 23 (node -> node DIRECTION .)
    EXCLUDE         reduce using rule 23 (node -> node DIRECTION .)


state 21

    (12) bullet_list -> node BULLET . bullet_list
    (12) bullet_list -> . node BULLET bullet_list
    (13) bullet_list -> . node
    (2) node -> . node L_PAREN node_list R_PAREN
    (3) node -> . node L_PAREN node_list EXCLUDE R_PAREN
    (4) node -> . node L_PAREN node_list R_PAREN EXCLUDE
    (7) node -> . node WAVE_DASH
    (10) node -> . node bullet_list
    (11) node -> . node L_PAREN bullet_list R_PAREN
    (14) node -> . node THEN num_node
    (16) node -> . node node
    (19) node -> . range_node
    (20) node -> . num_node
    (21) node -> . string_node
    (22) node -> . suffix_node
    (23) node -> . node DIRECTION
    (15) range_node -> . node WAVE_DASH node
    (17) num_node -> . num_node HYPHEN num_node
    (24) num_node -> . PREFIX NUMBER
    (25) num_node -> . PREFIX NUMBER SUFFIX
    (26) num_node -> . PREFIX NUMBER SUFFIX COMPARATIVE_SUFFIX
    (27) num_node -> . NUMBER SUFFIX
    (28) num_node -> . NUMBER SUFFIX COMPARATIVE_SUFFIX
    (29) num_node -> . NUMBER
    (30) num_node -> . NUMBER COMPARATIVE_SUFFIX
    (31) num_node -> . PREFIX NUMBER COMPARATIVE_SUFFIX
    (18) string_node -> . string_node HYPHEN num_node
    (32) string_node -> . ID NUMBER
    (33) string_node -> . ID NUMBER SUFFIX
    (34) string_node -> . ID
    (35) string_node -> . string_node DOT ID
    (36) string_node -> . FLOOR BULLET FLOOR
    (37) suffix_node -> . SUFFIX

    PREFIX          shift and go to state 9
    NUMBER          shift and go to state 10
    ID              shift and go to state 12
    FLOOR           shift and go to state 13
    SUFFIX          shift and go to state 11

    node                           shift and go to state 37
    bullet_list                    shift and go to state 38
    num_node                       shift and go to state 5
    range_node                     shift and go to state 6
    string_node                    shift and go to state 7
    suffix_node                    shift and go to state 8

state 22

    (8) node_list -> bullet_list COMMA . node_list
    (5) node_list -> . node COMMA node_list
    (6) node_list -> . node
    (8) node_list -> . bullet_list COMMA node_list
    (9) node_list -> . bullet_list
    (2) node -> . node L_PAREN node_list R_PAREN
    (3) node -> . node L_PAREN node_list EXCLUDE R_PAREN
    (4) node -> . node L_PAREN node_list R_PAREN EXCLUDE
    (7) node -> . node WAVE_DASH
    (10) node -> . node bullet_list
    (11) node -> . node L_PAREN bullet_list R_PAREN
    (14) node -> . node THEN num_node
    (16) node -> . node node
    (19) node -> . range_node
    (20) node -> . num_node
    (21) node -> . string_node
    (22) node -> . suffix_node
    (23) node -> . node DIRECTION
    (12) bullet_list -> . node BULLET bullet_list
    (13) bullet_list -> . node
    (15) range_node -> . node WAVE_DASH node
    (17) num_node -> . num_node HYPHEN num_node
    (24) num_node -> . PREFIX NUMBER
    (25) num_node -> . PREFIX NUMBER SUFFIX
    (26) num_node -> . PREFIX NUMBER SUFFIX COMPARATIVE_SUFFIX
    (27) num_node -> . NUMBER SUFFIX
    (28) num_node -> . NUMBER SUFFIX COMPARATIVE_SUFFIX
    (29) num_node -> . NUMBER
    (30) num_node -> . NUMBER COMPARATIVE_SUFFIX
    (31) num_node -> . PREFIX NUMBER COMPARATIVE_SUFFIX
    (18) string_node -> . string_node HYPHEN num_node
    (32) string_node -> . ID NUMBER
    (33) string_node -> . ID NUMBER SUFFIX
    (34) string_node -> . ID
    (35) string_node -> . string_node DOT ID
    (36) string_node -> . FLOOR BULLET FLOOR
    (37) suffix_node -> . SUFFIX

    PREFIX          shift and go to state 9
    NUMBER          shift and go to state 10
    ID              shift and go to state 12
    FLOOR           shift and go to state 13
    SUFFIX          shift and go to state 11

    bullet_list                    shift and go to state 4
    node_list                      shift and go to state 39
    node                           shift and go to state 3
    num_node                       shift and go to state 5
    range_node                     shift and go to state 6
    string_node                    shift and go to state 7
    suffix_node                    shift and go to state 8

state 23

    (17) num_node -> num_node HYPHEN . num_node
    (17) num_node -> . num_node HYPHEN num_node
    (24) num_node -> . PREFIX NUMBER
    (25) num_node -> . PREFIX NUMBER SUFFIX
    (26) num_node -> . PREFIX NUMBER SUFFIX COMPARATIVE_SUFFIX
    (27) num_node -> . NUMBER SUFFIX
    (28) num_node -> . NUMBER SUFFIX COMPARATIVE_SUFFIX
    (29) num_node -> . NUMBER
    (30) num_node -> . NUMBER COMPARATIVE_SUFFIX
    (31) num_node -> . PREFIX NUMBER COMPARATIVE_SUFFIX

    PREFIX          shift and go to state 9
    NUMBER          shift and go to state 10

    num_node                       shift and go to state 40

state 24

    (18) string_node -> string_node HYPHEN . num_node
    (17) num_node -> . num_node HYPHEN num_node
    (24) num_node -> . PREFIX NUMBER
    (25) num_node -> . PREFIX NUMBER SUFFIX
    (26) num_node -> . PREFIX NUMBER SUFFIX COMPARATIVE_SUFFIX
    (27) num_node -> . NUMBER SUFFIX
    (28) num_node -> . NUMBER SUFFIX COMPARATIVE_SUFFIX
    (29) num_node -> . NUMBER
    (30) num_node -> . NUMBER COMPARATIVE_SUFFIX
    (31) num_node -> . PREFIX NUMBER COMPARATIVE_SUFFIX

    PREFIX          shift and go to state 9
    NUMBER          shift and go to state 10

    num_node                       shift and go to state 41

state 25

    (35) string_node -> string_node DOT . ID

    ID              shift and go to state 42


state 26

    (24) num_node -> PREFIX NUMBER .
    (25) num_node -> PREFIX NUMBER . SUFFIX
    (26) num_node -> PREFIX NUMBER . SUFFIX COMPARATIVE_SUFFIX
    (31) num_node -> PREFIX NUMBER . COMPARATIVE_SUFFIX

  ! shift/reduce conflict for SUFFIX resolved as shift
    HYPHEN          reduce using rule 24 (num_node -> PREFIX NUMBER .)
    COMMA           reduce using rule 24 (num_node -> PREFIX NUMBER .)
    L_PAREN         reduce using rule 24 (num_node -> PREFIX NUMBER .)
    WAVE_DASH       reduce using rule 24 (num_node -> PREFIX NUMBER .)
    THEN            reduce using rule 24 (num_node -> PREFIX NUMBER .)
    DIRECTION       reduce using rule 24 (num_node -> PREFIX NUMBER .)
    BULLET          reduce using rule 24 (num_node -> PREFIX NUMBER .)
    PREFIX          reduce using rule 24 (num_node -> PREFIX NUMBER .)
    NUMBER          reduce using rule 24 (num_node -> PREFIX NUMBER .)
    ID              reduce using rule 24 (num_node -> PREFIX NUMBER .)
    FLOOR           reduce using rule 24 (num_node -> PREFIX NUMBER .)
    $end            reduce using rule 24 (num_node -> PREFIX NUMBER .)
    R_PAREN         reduce using rule 24 (num_node -> PREFIX NUMBER .)
    EXCLUDE         reduce using rule 24 (num_node -> PREFIX NUMBER .)
    DOT             reduce using rule 24 (num_node -> PREFIX NUMBER .)
    SUFFIX          shift and go to state 43
    COMPARATIVE_SUFFIX shift and go to state 44

  ! SUFFIX          [ reduce using rule 24 (num_node -> PREFIX NUMBER .) ]


state 27

    (27) num_node -> NUMBER SUFFIX .
    (28) num_node -> NUMBER SUFFIX . COMPARATIVE_SUFFIX

    HYPHEN          reduce using rule 27 (num_node -> NUMBER SUFFIX .)
    COMMA           reduce using rule 27 (num_node -> NUMBER SUFFIX .)
    L_PAREN         reduce using rule 27 (num_node -> NUMBER SUFFIX .)
    WAVE_DASH       reduce using rule 27 (num_node -> NUMBER SUFFIX .)
    THEN            reduce using rule 27 (num_node -> NUMBER SUFFIX .)
    DIRECTION       reduce using rule 27 (num_node -> NUMBER SUFFIX .)
    BULLET          reduce using rule 27 (num_node -> NUMBER SUFFIX .)
    PREFIX          reduce using rule 27 (num_node -> NUMBER SUFFIX .)
    NUMBER          reduce using rule 27 (num_node -> NUMBER SUFFIX .)
    ID              reduce using rule 27 (num_node -> NUMBER SUFFIX .)
    FLOOR           reduce using rule 27 (num_node -> NUMBER SUFFIX .)
    SUFFIX          reduce using rule 27 (num_node -> NUMBER SUFFIX .)
    $end            reduce using rule 27 (num_node -> NUMBER SUFFIX .)
    R_PAREN         reduce using rule 27 (num_node -> NUMBER SUFFIX .)
    EXCLUDE         reduce using rule 27 (num_node -> NUMBER SUFFIX .)
    DOT             reduce using rule 27 (num_node -> NUMBER SUFFIX .)
    COMPARATIVE_SUFFIX shift and go to state 45


state 28

    (30) num_node -> NUMBER COMPARATIVE_SUFFIX .

    HYPHEN          reduce using rule 30 (num_node -> NUMBER COMPARATIVE_SUFFIX .)
    COMMA           reduce using rule 30 (num_node -> NUMBER COMPARATIVE_SUFFIX .)
    L_PAREN         reduce using rule 30 (num_node -> NUMBER COMPARATIVE_SUFFIX .)
    WAVE_DASH       reduce using rule 30 (num_node -> NUMBER COMPARATIVE_SUFFIX .)
    THEN            reduce using rule 30 (num_node -> NUMBER COMPARATIVE_SUFFIX .)
    DIRECTION       reduce using rule 30 (num_node -> NUMBER COMPARATIVE_SUFFIX .)
    BULLET          reduce using rule 30 (num_node -> NUMBER COMPARATIVE_SUFFIX .)
    PREFIX          reduce using rule 30 (num_node -> NUMBER COMPARATIVE_SUFFIX .)
    NUMBER          reduce using rule 30 (num_node -> NUMBER COMPARATIVE_SUFFIX .)
    ID              reduce using rule 30 (num_node -> NUMBER COMPARATIVE_SUFFIX .)
    FLOOR           reduce using rule 30 (num_node -> NUMBER COMPARATIVE_SUFFIX .)
    SUFFIX          reduce using rule 30 (num_node -> NUMBER COMPARATIVE_SUFFIX .)
    $end            reduce using rule 30 (num_node -> NUMBER COMPARATIVE_SUFFIX .)
    R_PAREN         reduce using rule 30 (num_node -> NUMBER COMPARATIVE_SUFFIX .)
    EXCLUDE         reduce using rule 30 (num_node -> NUMBER COMPARATIVE_SUFFIX .)
    DOT             reduce using rule 30 (num_node -> NUMBER COMPARATIVE_SUFFIX .)


state 29

    (32) string_node -> ID NUMBER .
    (33) string_node -> ID NUMBER . SUFFIX

  ! shift/reduce conflict for SUFFIX resolved as shift
    HYPHEN          reduce using rule 32 (string_node -> ID NUMBER .)
    DOT             reduce using rule 32 (string_node -> ID NUMBER .)
    COMMA           reduce using rule 32 (string_node -> ID NUMBER .)
    L_PAREN         reduce using rule 32 (string_node -> ID NUMBER .)
    WAVE_DASH       reduce using rule 32 (string_node -> ID NUMBER .)
    THEN            reduce using rule 32 (string_node -> ID NUMBER .)
    DIRECTION       reduce using rule 32 (string_node -> ID NUMBER .)
    BULLET          reduce using rule 32 (string_node -> ID NUMBER .)
    PREFIX          reduce using rule 32 (string_node -> ID NUMBER .)
    NUMBER          reduce using rule 32 (string_node -> ID NUMBER .)
    ID              reduce using rule 32 (string_node -> ID NUMBER .)
    FLOOR           reduce using rule 32 (string_node -> ID NUMBER .)
    $end            reduce using rule 32 (string_node -> ID NUMBER .)
    R_PAREN         reduce using rule 32 (string_node -> ID NUMBER .)
    EXCLUDE         reduce using rule 32 (string_node -> ID NUMBER .)
    SUFFIX          shift and go to state 46

  ! SUFFIX          [ reduce using rule 32 (string_node -> ID NUMBER .) ]


state 30

    (36) string_node -> FLOOR BULLET . FLOOR

    FLOOR           shift and go to state 47


state 31

    (5) node_list -> node COMMA node_list .

    $end            reduce using rule 5 (node_list -> node COMMA node_list .)
    R_PAREN         reduce using rule 5 (node_list -> node COMMA node_list .)
    EXCLUDE         reduce using rule 5 (node_list -> node COMMA node_list .)


state 32

    (5) node_list -> node . COMMA node_list
    (6) node_list -> node .
    (12) bullet_list -> node . BULLET bullet_list
    (13) bullet_list -> node .
    (2) node -> node . L_PAREN node_list R_PAREN
    (3) node -> node . L_PAREN node_list EXCLUDE R_PAREN
    (4) node -> node . L_PAREN node_list R_PAREN EXCLUDE
    (7) node -> node . WAVE_DASH
    (10) node -> node . bullet_list
    (11) node -> node . L_PAREN bullet_list R_PAREN
    (14) node -> node . THEN num_node
    (16) node -> node . node
    (23) node -> node . DIRECTION
    (15) range_node -> node . WAVE_DASH node
    (12) bullet_list -> . node BULLET bullet_list
    (13) bullet_list -> . node
    (2) node -> . node L_PAREN node_list R_PAREN
    (3) node -> . node L_PAREN node_list EXCLUDE R_PAREN
    (4) node -> . node L_PAREN node_list R_PAREN EXCLUDE
    (7) node -> . node WAVE_DASH
    (10) node -> . node bullet_list
    (11) node -> . node L_PAREN bullet_list R_PAREN
    (14) node -> . node THEN num_node
    (16) node -> . node node
    (19) node -> . range_node
    (20) node -> . num_node
    (21) node -> . string_node
    (22) node -> . suffix_node
    (23) node -> . node DIRECTION
    (15) range_node -> . node WAVE_DASH node
    (17) num_node -> . num_node HYPHEN num_node
    (24) num_node -> . PREFIX NUMBER
    (25) num_node -> . PREFIX NUMBER SUFFIX
    (26) num_node -> . PREFIX NUMBER SUFFIX COMPARATIVE_SUFFIX
    (27) num_node -> . NUMBER SUFFIX
    (28) num_node -> . NUMBER SUFFIX COMPARATIVE_SUFFIX
    (29) num_node -> . NUMBER
    (30) num_node -> . NUMBER COMPARATIVE_SUFFIX
    (31) num_node -> . PREFIX NUMBER COMPARATIVE_SUFFIX
    (18) string_node -> . string_node HYPHEN num_node
    (32) string_node -> . ID NUMBER
    (33) string_node -> . ID NUMBER SUFFIX
    (34) string_node -> . ID
    (35) string_node -> . string_node DOT ID
    (36) string_node -> . FLOOR BULLET FLOOR
    (37) suffix_node -> . SUFFIX

  ! reduce/reduce conflict for R_PAREN resolved using rule 6 (node_list -> node .)
  ! shift/reduce conflict for COMMA resolved as shift
  ! reduce/reduce conflict for EXCLUDE resolved using rule 6 (node_list -> node .)
    COMMA           shift and go to state 15
    R_PAREN         reduce using rule 6 (node_list -> node .)
    EXCLUDE         reduce using rule 6 (node_list -> node .)
    BULLET          shift and go to state 21
    L_PAREN         shift and go to state 16
    WAVE_DASH       shift and go to state 17
    THEN            shift and go to state 19
    DIRECTION       shift and go to state 20
    PREFIX          shift and go to state 9
    NUMBER          shift and go to state 10
    ID              shift and go to state 12
    FLOOR           shift and go to state 13
    SUFFIX          shift and go to state 11

  ! R_PAREN         [ reduce using rule 13 (bullet_list -> node .) ]
  ! COMMA           [ reduce using rule 13 (bullet_list -> node .) ]
  ! EXCLUDE         [ reduce using rule 13 (bullet_list -> node .) ]

    node                           shift and go to state 14
    bullet_list                    shift and go to state 18
    num_node                       shift and go to state 5
    range_node                     shift and go to state 6
    string_node                    shift and go to state 7
    suffix_node                    shift and go to state 8

state 33

    (2) node -> node L_PAREN node_list . R_PAREN
    (3) node -> node L_PAREN node_list . EXCLUDE R_PAREN
    (4) node -> node L_PAREN node_list . R_PAREN EXCLUDE

    R_PAREN         shift and go to state 48
    EXCLUDE         shift and go to state 49


state 34

    (11) node -> node L_PAREN bullet_list . R_PAREN
    (8) node_list -> bullet_list . COMMA node_list
    (9) node_list -> bullet_list .

  ! shift/reduce conflict for R_PAREN resolved as shift
    R_PAREN         shift and go to state 50
    COMMA           shift and go to state 22
    EXCLUDE         reduce using rule 9 (node_list -> bullet_list .)

  ! R_PAREN         [ reduce using rule 9 (node_list -> bullet_list .) ]


state 35

    (15) range_node -> node WAVE_DASH node .
    (2) node -> node . L_PAREN node_list R_PAREN
    (3) node -> node . L_PAREN node_list EXCLUDE R_PAREN
    (4) node -> node . L_PAREN node_list R_PAREN EXCLUDE
    (7) node -> node . WAVE_DASH
    (10) node -> node . bullet_list
    (11) node -> node . L_PAREN bullet_list R_PAREN
    (14) node -> node . THEN num_node
    (16) node -> node . node
    (23) node -> node . DIRECTION
    (15) range_node -> node . WAVE_DASH node
    (12) bullet_list -> . node BULLET bullet_list
    (13) bullet_list -> . node
    (2) node -> . node L_PAREN node_list R_PAREN
    (3) node -> . node L_PAREN node_list EXCLUDE R_PAREN
    (4) node -> . node L_PAREN node_list R_PAREN EXCLUDE
    (7) node -> . node WAVE_DASH
    (10) node -> . node bullet_list
    (11) node -> . node L_PAREN bullet_list R_PAREN
    (14) node -> . node THEN num_node
    (16) node -> . node node
    (19) node -> . range_node
    (20) node -> . num_node
    (21) node -> . string_node
    (22) node -> . suffix_node
    (23) node -> . node DIRECTION
    (15) range_node -> . node WAVE_DASH node
    (17) num_node -> . num_node HYPHEN num_node
    (24) num_node -> . PREFIX NUMBER
    (25) num_node -> . PREFIX NUMBER SUFFIX
    (26) num_node -> . PREFIX NUMBER SUFFIX COMPARATIVE_SUFFIX
    (27) num_node -> . NUMBER SUFFIX
    (28) num_node -> . NUMBER SUFFIX COMPARATIVE_SUFFIX
    (29) num_node -> . NUMBER
    (30) num_node -> . NUMBER COMPARATIVE_SUFFIX
    (31) num_node -> . PREFIX NUMBER COMPARATIVE_SUFFIX
    (18) string_node -> . string_node HYPHEN num_node
    (32) string_node -> . ID NUMBER
    (33) string_node -> . ID NUMBER SUFFIX
    (34) string_node -> . ID
    (35) string_node -> . string_node DOT ID
    (36) string_node -> . FLOOR BULLET FLOOR
    (37) suffix_node -> . SUFFIX

  ! shift/reduce conflict for L_PAREN resolved as shift
  ! shift/reduce conflict for WAVE_DASH resolved as shift
  ! shift/reduce conflict for THEN resolved as shift
  ! shift/reduce conflict for DIRECTION resolved as shift
  ! shift/reduce conflict for PREFIX resolved as shift
  ! shift/reduce conflict for NUMBER resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for FLOOR resolved as shift
  ! shift/reduce conflict for SUFFIX resolved as shift
    COMMA           reduce using rule 15 (range_node -> node WAVE_DASH node .)
    BULLET          reduce using rule 15 (range_node -> node WAVE_DASH node .)
    $end            reduce using rule 15 (range_node -> node WAVE_DASH node .)
    R_PAREN         reduce using rule 15 (range_node -> node WAVE_DASH node .)
    EXCLUDE         reduce using rule 15 (range_node -> node WAVE_DASH node .)
    L_PAREN         shift and go to state 16
    WAVE_DASH       shift and go to state 17
    THEN            shift and go to state 19
    DIRECTION       shift and go to state 20
    PREFIX          shift and go to state 9
    NUMBER          shift and go to state 10
    ID              shift and go to state 12
    FLOOR           shift and go to state 13
    SUFFIX          shift and go to state 11

  ! L_PAREN         [ reduce using rule 15 (range_node -> node WAVE_DASH node .) ]
  ! WAVE_DASH       [ reduce using rule 15 (range_node -> node WAVE_DASH node .) ]
  ! THEN            [ reduce using rule 15 (range_node -> node WAVE_DASH node .) ]
  ! DIRECTION       [ reduce using rule 15 (range_node -> node WAVE_DASH node .) ]
  ! PREFIX          [ reduce using rule 15 (range_node -> node WAVE_DASH node .) ]
  ! NUMBER          [ reduce using rule 15 (range_node -> node WAVE_DASH node .) ]
  ! ID              [ reduce using rule 15 (range_node -> node WAVE_DASH node .) ]
  ! FLOOR           [ reduce using rule 15 (range_node -> node WAVE_DASH node .) ]
  ! SUFFIX          [ reduce using rule 15 (range_node -> node WAVE_DASH node .) ]

    node                           shift and go to state 14
    bullet_list                    shift and go to state 18
    num_node                       shift and go to state 5
    range_node                     shift and go to state 6
    string_node                    shift and go to state 7
    suffix_node                    shift and go to state 8

state 36

    (14) node -> node THEN num_node .
    (17) num_node -> num_node . HYPHEN num_node

    COMMA           reduce using rule 14 (node -> node THEN num_node .)
    L_PAREN         reduce using rule 14 (node -> node THEN num_node .)
    WAVE_DASH       reduce using rule 14 (node -> node THEN num_node .)
    THEN            reduce using rule 14 (node -> node THEN num_node .)
    DIRECTION       reduce using rule 14 (node -> node THEN num_node .)
    BULLET          reduce using rule 14 (node -> node THEN num_node .)
    PREFIX          reduce using rule 14 (node -> node THEN num_node .)
    NUMBER          reduce using rule 14 (node -> node THEN num_node .)
    ID              reduce using rule 14 (node -> node THEN num_node .)
    FLOOR           reduce using rule 14 (node -> node THEN num_node .)
    SUFFIX          reduce using rule 14 (node -> node THEN num_node .)
    $end            reduce using rule 14 (node -> node THEN num_node .)
    R_PAREN         reduce using rule 14 (node -> node THEN num_node .)
    EXCLUDE         reduce using rule 14 (node -> node THEN num_node .)
    HYPHEN          shift and go to state 23


state 37

    (12) bullet_list -> node . BULLET bullet_list
    (13) bullet_list -> node .
    (2) node -> node . L_PAREN node_list R_PAREN
    (3) node -> node . L_PAREN node_list EXCLUDE R_PAREN
    (4) node -> node . L_PAREN node_list R_PAREN EXCLUDE
    (7) node -> node . WAVE_DASH
    (10) node -> node . bullet_list
    (11) node -> node . L_PAREN bullet_list R_PAREN
    (14) node -> node . THEN num_node
    (16) node -> node . node
    (23) node -> node . DIRECTION
    (15) range_node -> node . WAVE_DASH node
    (12) bullet_list -> . node BULLET bullet_list
    (13) bullet_list -> . node
    (2) node -> . node L_PAREN node_list R_PAREN
    (3) node -> . node L_PAREN node_list EXCLUDE R_PAREN
    (4) node -> . node L_PAREN node_list R_PAREN EXCLUDE
    (7) node -> . node WAVE_DASH
    (10) node -> . node bullet_list
    (11) node -> . node L_PAREN bullet_list R_PAREN
    (14) node -> . node THEN num_node
    (16) node -> . node node
    (19) node -> . range_node
    (20) node -> . num_node
    (21) node -> . string_node
    (22) node -> . suffix_node
    (23) node -> . node DIRECTION
    (15) range_node -> . node WAVE_DASH node
    (17) num_node -> . num_node HYPHEN num_node
    (24) num_node -> . PREFIX NUMBER
    (25) num_node -> . PREFIX NUMBER SUFFIX
    (26) num_node -> . PREFIX NUMBER SUFFIX COMPARATIVE_SUFFIX
    (27) num_node -> . NUMBER SUFFIX
    (28) num_node -> . NUMBER SUFFIX COMPARATIVE_SUFFIX
    (29) num_node -> . NUMBER
    (30) num_node -> . NUMBER COMPARATIVE_SUFFIX
    (31) num_node -> . PREFIX NUMBER COMPARATIVE_SUFFIX
    (18) string_node -> . string_node HYPHEN num_node
    (32) string_node -> . ID NUMBER
    (33) string_node -> . ID NUMBER SUFFIX
    (34) string_node -> . ID
    (35) string_node -> . string_node DOT ID
    (36) string_node -> . FLOOR BULLET FLOOR
    (37) suffix_node -> . SUFFIX

  ! shift/reduce conflict for BULLET resolved as shift
  ! shift/reduce conflict for L_PAREN resolved as shift
  ! shift/reduce conflict for WAVE_DASH resolved as shift
  ! shift/reduce conflict for THEN resolved as shift
  ! shift/reduce conflict for DIRECTION resolved as shift
  ! shift/reduce conflict for PREFIX resolved as shift
  ! shift/reduce conflict for NUMBER resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for FLOOR resolved as shift
  ! shift/reduce conflict for SUFFIX resolved as shift
    BULLET          shift and go to state 21
    COMMA           reduce using rule 13 (bullet_list -> node .)
    $end            reduce using rule 13 (bullet_list -> node .)
    R_PAREN         reduce using rule 13 (bullet_list -> node .)
    EXCLUDE         reduce using rule 13 (bullet_list -> node .)
    L_PAREN         shift and go to state 16
    WAVE_DASH       shift and go to state 17
    THEN            shift and go to state 19
    DIRECTION       shift and go to state 20
    PREFIX          shift and go to state 9
    NUMBER          shift and go to state 10
    ID              shift and go to state 12
    FLOOR           shift and go to state 13
    SUFFIX          shift and go to state 11

  ! L_PAREN         [ reduce using rule 13 (bullet_list -> node .) ]
  ! WAVE_DASH       [ reduce using rule 13 (bullet_list -> node .) ]
  ! THEN            [ reduce using rule 13 (bullet_list -> node .) ]
  ! DIRECTION       [ reduce using rule 13 (bullet_list -> node .) ]
  ! BULLET          [ reduce using rule 13 (bullet_list -> node .) ]
  ! PREFIX          [ reduce using rule 13 (bullet_list -> node .) ]
  ! NUMBER          [ reduce using rule 13 (bullet_list -> node .) ]
  ! ID              [ reduce using rule 13 (bullet_list -> node .) ]
  ! FLOOR           [ reduce using rule 13 (bullet_list -> node .) ]
  ! SUFFIX          [ reduce using rule 13 (bullet_list -> node .) ]

    node                           shift and go to state 14
    bullet_list                    shift and go to state 18
    num_node                       shift and go to state 5
    range_node                     shift and go to state 6
    string_node                    shift and go to state 7
    suffix_node                    shift and go to state 8

state 38

    (12) bullet_list -> node BULLET bullet_list .

    COMMA           reduce using rule 12 (bullet_list -> node BULLET bullet_list .)
    $end            reduce using rule 12 (bullet_list -> node BULLET bullet_list .)
    L_PAREN         reduce using rule 12 (bullet_list -> node BULLET bullet_list .)
    WAVE_DASH       reduce using rule 12 (bullet_list -> node BULLET bullet_list .)
    THEN            reduce using rule 12 (bullet_list -> node BULLET bullet_list .)
    DIRECTION       reduce using rule 12 (bullet_list -> node BULLET bullet_list .)
    BULLET          reduce using rule 12 (bullet_list -> node BULLET bullet_list .)
    PREFIX          reduce using rule 12 (bullet_list -> node BULLET bullet_list .)
    NUMBER          reduce using rule 12 (bullet_list -> node BULLET bullet_list .)
    ID              reduce using rule 12 (bullet_list -> node BULLET bullet_list .)
    FLOOR           reduce using rule 12 (bullet_list -> node BULLET bullet_list .)
    SUFFIX          reduce using rule 12 (bullet_list -> node BULLET bullet_list .)
    R_PAREN         reduce using rule 12 (bullet_list -> node BULLET bullet_list .)
    EXCLUDE         reduce using rule 12 (bullet_list -> node BULLET bullet_list .)


state 39

    (8) node_list -> bullet_list COMMA node_list .

    $end            reduce using rule 8 (node_list -> bullet_list COMMA node_list .)
    R_PAREN         reduce using rule 8 (node_list -> bullet_list COMMA node_list .)
    EXCLUDE         reduce using rule 8 (node_list -> bullet_list COMMA node_list .)


state 40

    (17) num_node -> num_node HYPHEN num_node .
    (17) num_node -> num_node . HYPHEN num_node

  ! shift/reduce conflict for HYPHEN resolved as shift
    COMMA           reduce using rule 17 (num_node -> num_node HYPHEN num_node .)
    L_PAREN         reduce using rule 17 (num_node -> num_node HYPHEN num_node .)
    WAVE_DASH       reduce using rule 17 (num_node -> num_node HYPHEN num_node .)
    THEN            reduce using rule 17 (num_node -> num_node HYPHEN num_node .)
    DIRECTION       reduce using rule 17 (num_node -> num_node HYPHEN num_node .)
    BULLET          reduce using rule 17 (num_node -> num_node HYPHEN num_node .)
    PREFIX          reduce using rule 17 (num_node -> num_node HYPHEN num_node .)
    NUMBER          reduce using rule 17 (num_node -> num_node HYPHEN num_node .)
    ID              reduce using rule 17 (num_node -> num_node HYPHEN num_node .)
    FLOOR           reduce using rule 17 (num_node -> num_node HYPHEN num_node .)
    SUFFIX          reduce using rule 17 (num_node -> num_node HYPHEN num_node .)
    $end            reduce using rule 17 (num_node -> num_node HYPHEN num_node .)
    R_PAREN         reduce using rule 17 (num_node -> num_node HYPHEN num_node .)
    EXCLUDE         reduce using rule 17 (num_node -> num_node HYPHEN num_node .)
    DOT             reduce using rule 17 (num_node -> num_node HYPHEN num_node .)
    HYPHEN          shift and go to state 23

  ! HYPHEN          [ reduce using rule 17 (num_node -> num_node HYPHEN num_node .) ]


state 41

    (18) string_node -> string_node HYPHEN num_node .
    (17) num_node -> num_node . HYPHEN num_node

  ! shift/reduce conflict for HYPHEN resolved as shift
    DOT             reduce using rule 18 (string_node -> string_node HYPHEN num_node .)
    COMMA           reduce using rule 18 (string_node -> string_node HYPHEN num_node .)
    L_PAREN         reduce using rule 18 (string_node -> string_node HYPHEN num_node .)
    WAVE_DASH       reduce using rule 18 (string_node -> string_node HYPHEN num_node .)
    THEN            reduce using rule 18 (string_node -> string_node HYPHEN num_node .)
    DIRECTION       reduce using rule 18 (string_node -> string_node HYPHEN num_node .)
    BULLET          reduce using rule 18 (string_node -> string_node HYPHEN num_node .)
    PREFIX          reduce using rule 18 (string_node -> string_node HYPHEN num_node .)
    NUMBER          reduce using rule 18 (string_node -> string_node HYPHEN num_node .)
    ID              reduce using rule 18 (string_node -> string_node HYPHEN num_node .)
    FLOOR           reduce using rule 18 (string_node -> string_node HYPHEN num_node .)
    SUFFIX          reduce using rule 18 (string_node -> string_node HYPHEN num_node .)
    $end            reduce using rule 18 (string_node -> string_node HYPHEN num_node .)
    R_PAREN         reduce using rule 18 (string_node -> string_node HYPHEN num_node .)
    EXCLUDE         reduce using rule 18 (string_node -> string_node HYPHEN num_node .)
    HYPHEN          shift and go to state 23

  ! HYPHEN          [ reduce using rule 18 (string_node -> string_node HYPHEN num_node .) ]


state 42

    (35) string_node -> string_node DOT ID .

    HYPHEN          reduce using rule 35 (string_node -> string_node DOT ID .)
    DOT             reduce using rule 35 (string_node -> string_node DOT ID .)
    COMMA           reduce using rule 35 (string_node -> string_node DOT ID .)
    L_PAREN         reduce using rule 35 (string_node -> string_node DOT ID .)
    WAVE_DASH       reduce using rule 35 (string_node -> string_node DOT ID .)
    THEN            reduce using rule 35 (string_node -> string_node DOT ID .)
    DIRECTION       reduce using rule 35 (string_node -> string_node DOT ID .)
    BULLET          reduce using rule 35 (string_node -> string_node DOT ID .)
    PREFIX          reduce using rule 35 (string_node -> string_node DOT ID .)
    NUMBER          reduce using rule 35 (string_node -> string_node DOT ID .)
    ID              reduce using rule 35 (string_node -> string_node DOT ID .)
    FLOOR           reduce using rule 35 (string_node -> string_node DOT ID .)
    SUFFIX          reduce using rule 35 (string_node -> string_node DOT ID .)
    $end            reduce using rule 35 (string_node -> string_node DOT ID .)
    R_PAREN         reduce using rule 35 (string_node -> string_node DOT ID .)
    EXCLUDE         reduce using rule 35 (string_node -> string_node DOT ID .)


state 43

    (25) num_node -> PREFIX NUMBER SUFFIX .
    (26) num_node -> PREFIX NUMBER SUFFIX . COMPARATIVE_SUFFIX

    HYPHEN          reduce using rule 25 (num_node -> PREFIX NUMBER SUFFIX .)
    COMMA           reduce using rule 25 (num_node -> PREFIX NUMBER SUFFIX .)
    L_PAREN         reduce using rule 25 (num_node -> PREFIX NUMBER SUFFIX .)
    WAVE_DASH       reduce using rule 25 (num_node -> PREFIX NUMBER SUFFIX .)
    THEN            reduce using rule 25 (num_node -> PREFIX NUMBER SUFFIX .)
    DIRECTION       reduce using rule 25 (num_node -> PREFIX NUMBER SUFFIX .)
    BULLET          reduce using rule 25 (num_node -> PREFIX NUMBER SUFFIX .)
    PREFIX          reduce using rule 25 (num_node -> PREFIX NUMBER SUFFIX .)
    NUMBER          reduce using rule 25 (num_node -> PREFIX NUMBER SUFFIX .)
    ID              reduce using rule 25 (num_node -> PREFIX NUMBER SUFFIX .)
    FLOOR           reduce using rule 25 (num_node -> PREFIX NUMBER SUFFIX .)
    SUFFIX          reduce using rule 25 (num_node -> PREFIX NUMBER SUFFIX .)
    $end            reduce using rule 25 (num_node -> PREFIX NUMBER SUFFIX .)
    R_PAREN         reduce using rule 25 (num_node -> PREFIX NUMBER SUFFIX .)
    EXCLUDE         reduce using rule 25 (num_node -> PREFIX NUMBER SUFFIX .)
    DOT             reduce using rule 25 (num_node -> PREFIX NUMBER SUFFIX .)
    COMPARATIVE_SUFFIX shift and go to state 51


state 44

    (31) num_node -> PREFIX NUMBER COMPARATIVE_SUFFIX .

    HYPHEN          reduce using rule 31 (num_node -> PREFIX NUMBER COMPARATIVE_SUFFIX .)
    COMMA           reduce using rule 31 (num_node -> PREFIX NUMBER COMPARATIVE_SUFFIX .)
    L_PAREN         reduce using rule 31 (num_node -> PREFIX NUMBER COMPARATIVE_SUFFIX .)
    WAVE_DASH       reduce using rule 31 (num_node -> PREFIX NUMBER COMPARATIVE_SUFFIX .)
    THEN            reduce using rule 31 (num_node -> PREFIX NUMBER COMPARATIVE_SUFFIX .)
    DIRECTION       reduce using rule 31 (num_node -> PREFIX NUMBER COMPARATIVE_SUFFIX .)
    BULLET          reduce using rule 31 (num_node -> PREFIX NUMBER COMPARATIVE_SUFFIX .)
    PREFIX          reduce using rule 31 (num_node -> PREFIX NUMBER COMPARATIVE_SUFFIX .)
    NUMBER          reduce using rule 31 (num_node -> PREFIX NUMBER COMPARATIVE_SUFFIX .)
    ID              reduce using rule 31 (num_node -> PREFIX NUMBER COMPARATIVE_SUFFIX .)
    FLOOR           reduce using rule 31 (num_node -> PREFIX NUMBER COMPARATIVE_SUFFIX .)
    SUFFIX          reduce using rule 31 (num_node -> PREFIX NUMBER COMPARATIVE_SUFFIX .)
    $end            reduce using rule 31 (num_node -> PREFIX NUMBER COMPARATIVE_SUFFIX .)
    R_PAREN         reduce using rule 31 (num_node -> PREFIX NUMBER COMPARATIVE_SUFFIX .)
    EXCLUDE         reduce using rule 31 (num_node -> PREFIX NUMBER COMPARATIVE_SUFFIX .)
    DOT             reduce using rule 31 (num_node -> PREFIX NUMBER COMPARATIVE_SUFFIX .)


state 45

    (28) num_node -> NUMBER SUFFIX COMPARATIVE_SUFFIX .

    HYPHEN          reduce using rule 28 (num_node -> NUMBER SUFFIX COMPARATIVE_SUFFIX .)
    COMMA           reduce using rule 28 (num_node -> NUMBER SUFFIX COMPARATIVE_SUFFIX .)
    L_PAREN         reduce using rule 28 (num_node -> NUMBER SUFFIX COMPARATIVE_SUFFIX .)
    WAVE_DASH       reduce using rule 28 (num_node -> NUMBER SUFFIX COMPARATIVE_SUFFIX .)
    THEN            reduce using rule 28 (num_node -> NUMBER SUFFIX COMPARATIVE_SUFFIX .)
    DIRECTION       reduce using rule 28 (num_node -> NUMBER SUFFIX COMPARATIVE_SUFFIX .)
    BULLET          reduce using rule 28 (num_node -> NUMBER SUFFIX COMPARATIVE_SUFFIX .)
    PREFIX          reduce using rule 28 (num_node -> NUMBER SUFFIX COMPARATIVE_SUFFIX .)
    NUMBER          reduce using rule 28 (num_node -> NUMBER SUFFIX COMPARATIVE_SUFFIX .)
    ID              reduce using rule 28 (num_node -> NUMBER SUFFIX COMPARATIVE_SUFFIX .)
    FLOOR           reduce using rule 28 (num_node -> NUMBER SUFFIX COMPARATIVE_SUFFIX .)
    SUFFIX          reduce using rule 28 (num_node -> NUMBER SUFFIX COMPARATIVE_SUFFIX .)
    $end            reduce using rule 28 (num_node -> NUMBER SUFFIX COMPARATIVE_SUFFIX .)
    R_PAREN         reduce using rule 28 (num_node -> NUMBER SUFFIX COMPARATIVE_SUFFIX .)
    EXCLUDE         reduce using rule 28 (num_node -> NUMBER SUFFIX COMPARATIVE_SUFFIX .)
    DOT             reduce using rule 28 (num_node -> NUMBER SUFFIX COMPARATIVE_SUFFIX .)


state 46

    (33) string_node -> ID NUMBER SUFFIX .

    HYPHEN          reduce using rule 33 (string_node -> ID NUMBER SUFFIX .)
    DOT             reduce using rule 33 (string_node -> ID NUMBER SUFFIX .)
    COMMA           reduce using rule 33 (string_node -> ID NUMBER SUFFIX .)
    L_PAREN         reduce using rule 33 (string_node -> ID NUMBER SUFFIX .)
    WAVE_DASH       reduce using rule 33 (string_node -> ID NUMBER SUFFIX .)
    THEN            reduce using rule 33 (string_node -> ID NUMBER SUFFIX .)
    DIRECTION       reduce using rule 33 (string_node -> ID NUMBER SUFFIX .)
    BULLET          reduce using rule 33 (string_node -> ID NUMBER SUFFIX .)
    PREFIX          reduce using rule 33 (string_node -> ID NUMBER SUFFIX .)
    NUMBER          reduce using rule 33 (string_node -> ID NUMBER SUFFIX .)
    ID              reduce using rule 33 (string_node -> ID NUMBER SUFFIX .)
    FLOOR           reduce using rule 33 (string_node -> ID NUMBER SUFFIX .)
    SUFFIX          reduce using rule 33 (string_node -> ID NUMBER SUFFIX .)
    $end            reduce using rule 33 (string_node -> ID NUMBER SUFFIX .)
    R_PAREN         reduce using rule 33 (string_node -> ID NUMBER SUFFIX .)
    EXCLUDE         reduce using rule 33 (string_node -> ID NUMBER SUFFIX .)


state 47

    (36) string_node -> FLOOR BULLET FLOOR .

    HYPHEN          reduce using rule 36 (string_node -> FLOOR BULLET FLOOR .)
    DOT             reduce using rule 36 (string_node -> FLOOR BULLET FLOOR .)
    COMMA           reduce using rule 36 (string_node -> FLOOR BULLET FLOOR .)
    L_PAREN         reduce using rule 36 (string_node -> FLOOR BULLET FLOOR .)
    WAVE_DASH       reduce using rule 36 (string_node -> FLOOR BULLET FLOOR .)
    THEN            reduce using rule 36 (string_node -> FLOOR BULLET FLOOR .)
    DIRECTION       reduce using rule 36 (string_node -> FLOOR BULLET FLOOR .)
    BULLET          reduce using rule 36 (string_node -> FLOOR BULLET FLOOR .)
    PREFIX          reduce using rule 36 (string_node -> FLOOR BULLET FLOOR .)
    NUMBER          reduce using rule 36 (string_node -> FLOOR BULLET FLOOR .)
    ID              reduce using rule 36 (string_node -> FLOOR BULLET FLOOR .)
    FLOOR           reduce using rule 36 (string_node -> FLOOR BULLET FLOOR .)
    SUFFIX          reduce using rule 36 (string_node -> FLOOR BULLET FLOOR .)
    $end            reduce using rule 36 (string_node -> FLOOR BULLET FLOOR .)
    R_PAREN         reduce using rule 36 (string_node -> FLOOR BULLET FLOOR .)
    EXCLUDE         reduce using rule 36 (string_node -> FLOOR BULLET FLOOR .)


state 48

    (2) node -> node L_PAREN node_list R_PAREN .
    (4) node -> node L_PAREN node_list R_PAREN . EXCLUDE

  ! shift/reduce conflict for EXCLUDE resolved as shift
    COMMA           reduce using rule 2 (node -> node L_PAREN node_list R_PAREN .)
    L_PAREN         reduce using rule 2 (node -> node L_PAREN node_list R_PAREN .)
    WAVE_DASH       reduce using rule 2 (node -> node L_PAREN node_list R_PAREN .)
    THEN            reduce using rule 2 (node -> node L_PAREN node_list R_PAREN .)
    DIRECTION       reduce using rule 2 (node -> node L_PAREN node_list R_PAREN .)
    BULLET          reduce using rule 2 (node -> node L_PAREN node_list R_PAREN .)
    PREFIX          reduce using rule 2 (node -> node L_PAREN node_list R_PAREN .)
    NUMBER          reduce using rule 2 (node -> node L_PAREN node_list R_PAREN .)
    ID              reduce using rule 2 (node -> node L_PAREN node_list R_PAREN .)
    FLOOR           reduce using rule 2 (node -> node L_PAREN node_list R_PAREN .)
    SUFFIX          reduce using rule 2 (node -> node L_PAREN node_list R_PAREN .)
    $end            reduce using rule 2 (node -> node L_PAREN node_list R_PAREN .)
    R_PAREN         reduce using rule 2 (node -> node L_PAREN node_list R_PAREN .)
    EXCLUDE         shift and go to state 52

  ! EXCLUDE         [ reduce using rule 2 (node -> node L_PAREN node_list R_PAREN .) ]


state 49

    (3) node -> node L_PAREN node_list EXCLUDE . R_PAREN

    R_PAREN         shift and go to state 53


state 50

    (11) node -> node L_PAREN bullet_list R_PAREN .

    COMMA           reduce using rule 11 (node -> node L_PAREN bullet_list R_PAREN .)
    L_PAREN         reduce using rule 11 (node -> node L_PAREN bullet_list R_PAREN .)
    WAVE_DASH       reduce using rule 11 (node -> node L_PAREN bullet_list R_PAREN .)
    THEN            reduce using rule 11 (node -> node L_PAREN bullet_list R_PAREN .)
    DIRECTION       reduce using rule 11 (node -> node L_PAREN bullet_list R_PAREN .)
    BULLET          reduce using rule 11 (node -> node L_PAREN bullet_list R_PAREN .)
    PREFIX          reduce using rule 11 (node -> node L_PAREN bullet_list R_PAREN .)
    NUMBER          reduce using rule 11 (node -> node L_PAREN bullet_list R_PAREN .)
    ID              reduce using rule 11 (node -> node L_PAREN bullet_list R_PAREN .)
    FLOOR           reduce using rule 11 (node -> node L_PAREN bullet_list R_PAREN .)
    SUFFIX          reduce using rule 11 (node -> node L_PAREN bullet_list R_PAREN .)
    $end            reduce using rule 11 (node -> node L_PAREN bullet_list R_PAREN .)
    R_PAREN         reduce using rule 11 (node -> node L_PAREN bullet_list R_PAREN .)
    EXCLUDE         reduce using rule 11 (node -> node L_PAREN bullet_list R_PAREN .)


state 51

    (26) num_node -> PREFIX NUMBER SUFFIX COMPARATIVE_SUFFIX .

    HYPHEN          reduce using rule 26 (num_node -> PREFIX NUMBER SUFFIX COMPARATIVE_SUFFIX .)
    COMMA           reduce using rule 26 (num_node -> PREFIX NUMBER SUFFIX COMPARATIVE_SUFFIX .)
    L_PAREN         reduce using rule 26 (num_node -> PREFIX NUMBER SUFFIX COMPARATIVE_SUFFIX .)
    WAVE_DASH       reduce using rule 26 (num_node -> PREFIX NUMBER SUFFIX COMPARATIVE_SUFFIX .)
    THEN            reduce using rule 26 (num_node -> PREFIX NUMBER SUFFIX COMPARATIVE_SUFFIX .)
    DIRECTION       reduce using rule 26 (num_node -> PREFIX NUMBER SUFFIX COMPARATIVE_SUFFIX .)
    BULLET          reduce using rule 26 (num_node -> PREFIX NUMBER SUFFIX COMPARATIVE_SUFFIX .)
    PREFIX          reduce using rule 26 (num_node -> PREFIX NUMBER SUFFIX COMPARATIVE_SUFFIX .)
    NUMBER          reduce using rule 26 (num_node -> PREFIX NUMBER SUFFIX COMPARATIVE_SUFFIX .)
    ID              reduce using rule 26 (num_node -> PREFIX NUMBER SUFFIX COMPARATIVE_SUFFIX .)
    FLOOR           reduce using rule 26 (num_node -> PREFIX NUMBER SUFFIX COMPARATIVE_SUFFIX .)
    SUFFIX          reduce using rule 26 (num_node -> PREFIX NUMBER SUFFIX COMPARATIVE_SUFFIX .)
    $end            reduce using rule 26 (num_node -> PREFIX NUMBER SUFFIX COMPARATIVE_SUFFIX .)
    R_PAREN         reduce using rule 26 (num_node -> PREFIX NUMBER SUFFIX COMPARATIVE_SUFFIX .)
    EXCLUDE         reduce using rule 26 (num_node -> PREFIX NUMBER SUFFIX COMPARATIVE_SUFFIX .)
    DOT             reduce using rule 26 (num_node -> PREFIX NUMBER SUFFIX COMPARATIVE_SUFFIX .)


state 52

    (4) node -> node L_PAREN node_list R_PAREN EXCLUDE .

    COMMA           reduce using rule 4 (node -> node L_PAREN node_list R_PAREN EXCLUDE .)
    L_PAREN         reduce using rule 4 (node -> node L_PAREN node_list R_PAREN EXCLUDE .)
    WAVE_DASH       reduce using rule 4 (node -> node L_PAREN node_list R_PAREN EXCLUDE .)
    THEN            reduce using rule 4 (node -> node L_PAREN node_list R_PAREN EXCLUDE .)
    DIRECTION       reduce using rule 4 (node -> node L_PAREN node_list R_PAREN EXCLUDE .)
    BULLET          reduce using rule 4 (node -> node L_PAREN node_list R_PAREN EXCLUDE .)
    PREFIX          reduce using rule 4 (node -> node L_PAREN node_list R_PAREN EXCLUDE .)
    NUMBER          reduce using rule 4 (node -> node L_PAREN node_list R_PAREN EXCLUDE .)
    ID              reduce using rule 4 (node -> node L_PAREN node_list R_PAREN EXCLUDE .)
    FLOOR           reduce using rule 4 (node -> node L_PAREN node_list R_PAREN EXCLUDE .)
    SUFFIX          reduce using rule 4 (node -> node L_PAREN node_list R_PAREN EXCLUDE .)
    $end            reduce using rule 4 (node -> node L_PAREN node_list R_PAREN EXCLUDE .)
    R_PAREN         reduce using rule 4 (node -> node L_PAREN node_list R_PAREN EXCLUDE .)
    EXCLUDE         reduce using rule 4 (node -> node L_PAREN node_list R_PAREN EXCLUDE .)


state 53

    (3) node -> node L_PAREN node_list EXCLUDE R_PAREN .

    COMMA           reduce using rule 3 (node -> node L_PAREN node_list EXCLUDE R_PAREN .)
    L_PAREN         reduce using rule 3 (node -> node L_PAREN node_list EXCLUDE R_PAREN .)
    WAVE_DASH       reduce using rule 3 (node -> node L_PAREN node_list EXCLUDE R_PAREN .)
    THEN            reduce using rule 3 (node -> node L_PAREN node_list EXCLUDE R_PAREN .)
    DIRECTION       reduce using rule 3 (node -> node L_PAREN node_list EXCLUDE R_PAREN .)
    BULLET          reduce using rule 3 (node -> node L_PAREN node_list EXCLUDE R_PAREN .)
    PREFIX          reduce using rule 3 (node -> node L_PAREN node_list EXCLUDE R_PAREN .)
    NUMBER          reduce using rule 3 (node -> node L_PAREN node_list EXCLUDE R_PAREN .)
    ID              reduce using rule 3 (node -> node L_PAREN node_list EXCLUDE R_PAREN .)
    FLOOR           reduce using rule 3 (node -> node L_PAREN node_list EXCLUDE R_PAREN .)
    SUFFIX          reduce using rule 3 (node -> node L_PAREN node_list EXCLUDE R_PAREN .)
    $end            reduce using rule 3 (node -> node L_PAREN node_list EXCLUDE R_PAREN .)
    R_PAREN         reduce using rule 3 (node -> node L_PAREN node_list EXCLUDE R_PAREN .)
    EXCLUDE         reduce using rule 3 (node -> node L_PAREN node_list EXCLUDE R_PAREN .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for COMMA in state 3 resolved as shift
WARNING: shift/reduce conflict for SUFFIX in state 10 resolved as shift
WARNING: shift/reduce conflict for NUMBER in state 12 resolved as shift
WARNING: shift/reduce conflict for BULLET in state 14 resolved as shift
WARNING: shift/reduce conflict for BULLET in state 14 resolved as shift
WARNING: shift/reduce conflict for L_PAREN in state 14 resolved as shift
WARNING: shift/reduce conflict for WAVE_DASH in state 14 resolved as shift
WARNING: shift/reduce conflict for THEN in state 14 resolved as shift
WARNING: shift/reduce conflict for DIRECTION in state 14 resolved as shift
WARNING: shift/reduce conflict for PREFIX in state 14 resolved as shift
WARNING: shift/reduce conflict for NUMBER in state 14 resolved as shift
WARNING: shift/reduce conflict for ID in state 14 resolved as shift
WARNING: shift/reduce conflict for FLOOR in state 14 resolved as shift
WARNING: shift/reduce conflict for SUFFIX in state 14 resolved as shift
WARNING: shift/reduce conflict for PREFIX in state 17 resolved as shift
WARNING: shift/reduce conflict for NUMBER in state 17 resolved as shift
WARNING: shift/reduce conflict for ID in state 17 resolved as shift
WARNING: shift/reduce conflict for FLOOR in state 17 resolved as shift
WARNING: shift/reduce conflict for SUFFIX in state 17 resolved as shift
WARNING: shift/reduce conflict for SUFFIX in state 26 resolved as shift
WARNING: shift/reduce conflict for SUFFIX in state 29 resolved as shift
WARNING: shift/reduce conflict for COMMA in state 32 resolved as shift
WARNING: shift/reduce conflict for R_PAREN in state 34 resolved as shift
WARNING: shift/reduce conflict for L_PAREN in state 35 resolved as shift
WARNING: shift/reduce conflict for WAVE_DASH in state 35 resolved as shift
WARNING: shift/reduce conflict for THEN in state 35 resolved as shift
WARNING: shift/reduce conflict for DIRECTION in state 35 resolved as shift
WARNING: shift/reduce conflict for PREFIX in state 35 resolved as shift
WARNING: shift/reduce conflict for NUMBER in state 35 resolved as shift
WARNING: shift/reduce conflict for ID in state 35 resolved as shift
WARNING: shift/reduce conflict for FLOOR in state 35 resolved as shift
WARNING: shift/reduce conflict for SUFFIX in state 35 resolved as shift
WARNING: shift/reduce conflict for BULLET in state 37 resolved as shift
WARNING: shift/reduce conflict for L_PAREN in state 37 resolved as shift
WARNING: shift/reduce conflict for WAVE_DASH in state 37 resolved as shift
WARNING: shift/reduce conflict for THEN in state 37 resolved as shift
WARNING: shift/reduce conflict for DIRECTION in state 37 resolved as shift
WARNING: shift/reduce conflict for PREFIX in state 37 resolved as shift
WARNING: shift/reduce conflict for NUMBER in state 37 resolved as shift
WARNING: shift/reduce conflict for ID in state 37 resolved as shift
WARNING: shift/reduce conflict for FLOOR in state 37 resolved as shift
WARNING: shift/reduce conflict for SUFFIX in state 37 resolved as shift
WARNING: shift/reduce conflict for HYPHEN in state 40 resolved as shift
WARNING: shift/reduce conflict for HYPHEN in state 41 resolved as shift
WARNING: shift/reduce conflict for EXCLUDE in state 48 resolved as shift
WARNING: reduce/reduce conflict in state 3 resolved using rule (node_list -> node)
WARNING: rejected rule (bullet_list -> node) in state 3
WARNING: reduce/reduce conflict in state 14 resolved using rule (bullet_list -> node)
WARNING: rejected rule (node -> node node) in state 14
WARNING: reduce/reduce conflict in state 32 resolved using rule (node_list -> node)
WARNING: rejected rule (bullet_list -> node) in state 32
WARNING: Rule (node -> node node) is never reduced
