Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> choiki
Rule 1     choiki -> node
Rule 2     node -> node L_PAREN node_list R_PAREN
Rule 3     node -> node L_PAREN node_list EXCLUDE R_PAREN
Rule 4     node -> node L_PAREN node_list R_PAREN EXCLUDE
Rule 5     node_list -> node COMMA node_list
Rule 6     node_list -> node
Rule 7     node_list -> bullet_list COMMA node_list
Rule 8     node_list -> bullet_list
Rule 9     node -> node bullet_list
Rule 10    node -> node L_PAREN bullet_list R_PAREN
Rule 11    bullet_list -> node BULLET bullet_list
Rule 12    bullet_list -> node
Rule 13    num_node -> num_node THEN num_node
Rule 14    range_node -> node WAVE_DASH node
Rule 15    node -> node node
Rule 16    num_node -> num_node HYPHEN num_node
Rule 17    node -> range_node
Rule 18    node -> num_node
Rule 19    node -> string_node
Rule 20    node -> suffix_node
Rule 21    num_node -> PREFIX NUMBER
Rule 22    num_node -> PREFIX NUMBER SUFFIX
Rule 23    num_node -> PREFIX NUMBER SUFFIX COMPARATIVE_SUFFIX
Rule 24    num_node -> NUMBER SUFFIX
Rule 25    num_node -> NUMBER SUFFIX COMPARATIVE_SUFFIX
Rule 26    num_node -> NUMBER
Rule 27    num_node -> NUMBER COMPARATIVE_SUFFIX
Rule 28    num_node -> PREFIX NUMBER COMPARATIVE_SUFFIX
Rule 29    string_node -> ID
Rule 30    string_node -> ID DOT ID
Rule 31    string_node -> FLOOR BULLET FLOOR
Rule 32    suffix_node -> L_PAREN SUFFIX R_PAREN

Terminals, with rules where they appear

BULLET               : 11 31
COMMA                : 5 7
COMPARATIVE_SUFFIX   : 23 25 27 28
DOT                  : 30
EXCLUDE              : 3 4
FLOOR                : 31 31
HYPHEN               : 16
ID                   : 29 30 30
L_PAREN              : 2 3 4 10 32
NUMBER               : 21 22 23 24 25 26 27 28
PREFIX               : 21 22 23 28
R_PAREN              : 2 3 4 10 32
SUFFIX               : 22 23 24 25 32
THEN                 : 13
WAVE_DASH            : 14
error                : 

Nonterminals, with rules where they appear

bullet_list          : 7 8 9 10 11
choiki               : 0
node                 : 1 2 3 4 5 6 9 10 11 12 14 14 15 15
node_list            : 2 3 4 5 7
num_node             : 13 13 16 16 18
range_node           : 17
string_node          : 19
suffix_node          : 20

Parsing method: LALR

state 0

    (0) S' -> . choiki
    (1) choiki -> . node
    (2) node -> . node L_PAREN node_list R_PAREN
    (3) node -> . node L_PAREN node_list EXCLUDE R_PAREN
    (4) node -> . node L_PAREN node_list R_PAREN EXCLUDE
    (9) node -> . node bullet_list
    (10) node -> . node L_PAREN bullet_list R_PAREN
    (15) node -> . node node
    (17) node -> . range_node
    (18) node -> . num_node
    (19) node -> . string_node
    (20) node -> . suffix_node
    (14) range_node -> . node WAVE_DASH node
    (13) num_node -> . num_node THEN num_node
    (16) num_node -> . num_node HYPHEN num_node
    (21) num_node -> . PREFIX NUMBER
    (22) num_node -> . PREFIX NUMBER SUFFIX
    (23) num_node -> . PREFIX NUMBER SUFFIX COMPARATIVE_SUFFIX
    (24) num_node -> . NUMBER SUFFIX
    (25) num_node -> . NUMBER SUFFIX COMPARATIVE_SUFFIX
    (26) num_node -> . NUMBER
    (27) num_node -> . NUMBER COMPARATIVE_SUFFIX
    (28) num_node -> . PREFIX NUMBER COMPARATIVE_SUFFIX
    (29) string_node -> . ID
    (30) string_node -> . ID DOT ID
    (31) string_node -> . FLOOR BULLET FLOOR
    (32) suffix_node -> . L_PAREN SUFFIX R_PAREN

    PREFIX          shift and go to state 8
    NUMBER          shift and go to state 9
    ID              shift and go to state 10
    FLOOR           shift and go to state 11
    L_PAREN         shift and go to state 3

    choiki                         shift and go to state 1
    node                           shift and go to state 2
    range_node                     shift and go to state 4
    num_node                       shift and go to state 5
    string_node                    shift and go to state 6
    suffix_node                    shift and go to state 7

state 1

    (0) S' -> choiki .



state 2

    (1) choiki -> node .
    (2) node -> node . L_PAREN node_list R_PAREN
    (3) node -> node . L_PAREN node_list EXCLUDE R_PAREN
    (4) node -> node . L_PAREN node_list R_PAREN EXCLUDE
    (9) node -> node . bullet_list
    (10) node -> node . L_PAREN bullet_list R_PAREN
    (15) node -> node . node
    (14) range_node -> node . WAVE_DASH node
    (11) bullet_list -> . node BULLET bullet_list
    (12) bullet_list -> . node
    (2) node -> . node L_PAREN node_list R_PAREN
    (3) node -> . node L_PAREN node_list EXCLUDE R_PAREN
    (4) node -> . node L_PAREN node_list R_PAREN EXCLUDE
    (9) node -> . node bullet_list
    (10) node -> . node L_PAREN bullet_list R_PAREN
    (15) node -> . node node
    (17) node -> . range_node
    (18) node -> . num_node
    (19) node -> . string_node
    (20) node -> . suffix_node
    (14) range_node -> . node WAVE_DASH node
    (13) num_node -> . num_node THEN num_node
    (16) num_node -> . num_node HYPHEN num_node
    (21) num_node -> . PREFIX NUMBER
    (22) num_node -> . PREFIX NUMBER SUFFIX
    (23) num_node -> . PREFIX NUMBER SUFFIX COMPARATIVE_SUFFIX
    (24) num_node -> . NUMBER SUFFIX
    (25) num_node -> . NUMBER SUFFIX COMPARATIVE_SUFFIX
    (26) num_node -> . NUMBER
    (27) num_node -> . NUMBER COMPARATIVE_SUFFIX
    (28) num_node -> . PREFIX NUMBER COMPARATIVE_SUFFIX
    (29) string_node -> . ID
    (30) string_node -> . ID DOT ID
    (31) string_node -> . FLOOR BULLET FLOOR
    (32) suffix_node -> . L_PAREN SUFFIX R_PAREN

    $end            reduce using rule 1 (choiki -> node .)
    L_PAREN         shift and go to state 13
    WAVE_DASH       shift and go to state 15
    PREFIX          shift and go to state 8
    NUMBER          shift and go to state 9
    ID              shift and go to state 10
    FLOOR           shift and go to state 11

    node                           shift and go to state 12
    bullet_list                    shift and go to state 14
    range_node                     shift and go to state 4
    num_node                       shift and go to state 5
    string_node                    shift and go to state 6
    suffix_node                    shift and go to state 7

state 3

    (32) suffix_node -> L_PAREN . SUFFIX R_PAREN

    SUFFIX          shift and go to state 16


state 4

    (17) node -> range_node .

    L_PAREN         reduce using rule 17 (node -> range_node .)
    WAVE_DASH       reduce using rule 17 (node -> range_node .)
    PREFIX          reduce using rule 17 (node -> range_node .)
    NUMBER          reduce using rule 17 (node -> range_node .)
    ID              reduce using rule 17 (node -> range_node .)
    FLOOR           reduce using rule 17 (node -> range_node .)
    $end            reduce using rule 17 (node -> range_node .)
    BULLET          reduce using rule 17 (node -> range_node .)
    COMMA           reduce using rule 17 (node -> range_node .)
    R_PAREN         reduce using rule 17 (node -> range_node .)
    EXCLUDE         reduce using rule 17 (node -> range_node .)


state 5

    (18) node -> num_node .
    (13) num_node -> num_node . THEN num_node
    (16) num_node -> num_node . HYPHEN num_node

    L_PAREN         reduce using rule 18 (node -> num_node .)
    WAVE_DASH       reduce using rule 18 (node -> num_node .)
    PREFIX          reduce using rule 18 (node -> num_node .)
    NUMBER          reduce using rule 18 (node -> num_node .)
    ID              reduce using rule 18 (node -> num_node .)
    FLOOR           reduce using rule 18 (node -> num_node .)
    $end            reduce using rule 18 (node -> num_node .)
    BULLET          reduce using rule 18 (node -> num_node .)
    COMMA           reduce using rule 18 (node -> num_node .)
    R_PAREN         reduce using rule 18 (node -> num_node .)
    EXCLUDE         reduce using rule 18 (node -> num_node .)
    THEN            shift and go to state 17
    HYPHEN          shift and go to state 18


state 6

    (19) node -> string_node .

    L_PAREN         reduce using rule 19 (node -> string_node .)
    WAVE_DASH       reduce using rule 19 (node -> string_node .)
    PREFIX          reduce using rule 19 (node -> string_node .)
    NUMBER          reduce using rule 19 (node -> string_node .)
    ID              reduce using rule 19 (node -> string_node .)
    FLOOR           reduce using rule 19 (node -> string_node .)
    $end            reduce using rule 19 (node -> string_node .)
    BULLET          reduce using rule 19 (node -> string_node .)
    COMMA           reduce using rule 19 (node -> string_node .)
    R_PAREN         reduce using rule 19 (node -> string_node .)
    EXCLUDE         reduce using rule 19 (node -> string_node .)


state 7

    (20) node -> suffix_node .

    L_PAREN         reduce using rule 20 (node -> suffix_node .)
    WAVE_DASH       reduce using rule 20 (node -> suffix_node .)
    PREFIX          reduce using rule 20 (node -> suffix_node .)
    NUMBER          reduce using rule 20 (node -> suffix_node .)
    ID              reduce using rule 20 (node -> suffix_node .)
    FLOOR           reduce using rule 20 (node -> suffix_node .)
    $end            reduce using rule 20 (node -> suffix_node .)
    BULLET          reduce using rule 20 (node -> suffix_node .)
    COMMA           reduce using rule 20 (node -> suffix_node .)
    R_PAREN         reduce using rule 20 (node -> suffix_node .)
    EXCLUDE         reduce using rule 20 (node -> suffix_node .)


state 8

    (21) num_node -> PREFIX . NUMBER
    (22) num_node -> PREFIX . NUMBER SUFFIX
    (23) num_node -> PREFIX . NUMBER SUFFIX COMPARATIVE_SUFFIX
    (28) num_node -> PREFIX . NUMBER COMPARATIVE_SUFFIX

    NUMBER          shift and go to state 19


state 9

    (24) num_node -> NUMBER . SUFFIX
    (25) num_node -> NUMBER . SUFFIX COMPARATIVE_SUFFIX
    (26) num_node -> NUMBER .
    (27) num_node -> NUMBER . COMPARATIVE_SUFFIX

    SUFFIX          shift and go to state 20
    THEN            reduce using rule 26 (num_node -> NUMBER .)
    HYPHEN          reduce using rule 26 (num_node -> NUMBER .)
    L_PAREN         reduce using rule 26 (num_node -> NUMBER .)
    WAVE_DASH       reduce using rule 26 (num_node -> NUMBER .)
    PREFIX          reduce using rule 26 (num_node -> NUMBER .)
    NUMBER          reduce using rule 26 (num_node -> NUMBER .)
    ID              reduce using rule 26 (num_node -> NUMBER .)
    FLOOR           reduce using rule 26 (num_node -> NUMBER .)
    $end            reduce using rule 26 (num_node -> NUMBER .)
    BULLET          reduce using rule 26 (num_node -> NUMBER .)
    COMMA           reduce using rule 26 (num_node -> NUMBER .)
    R_PAREN         reduce using rule 26 (num_node -> NUMBER .)
    EXCLUDE         reduce using rule 26 (num_node -> NUMBER .)
    COMPARATIVE_SUFFIX shift and go to state 21


state 10

    (29) string_node -> ID .
    (30) string_node -> ID . DOT ID

    L_PAREN         reduce using rule 29 (string_node -> ID .)
    WAVE_DASH       reduce using rule 29 (string_node -> ID .)
    PREFIX          reduce using rule 29 (string_node -> ID .)
    NUMBER          reduce using rule 29 (string_node -> ID .)
    ID              reduce using rule 29 (string_node -> ID .)
    FLOOR           reduce using rule 29 (string_node -> ID .)
    $end            reduce using rule 29 (string_node -> ID .)
    BULLET          reduce using rule 29 (string_node -> ID .)
    COMMA           reduce using rule 29 (string_node -> ID .)
    R_PAREN         reduce using rule 29 (string_node -> ID .)
    EXCLUDE         reduce using rule 29 (string_node -> ID .)
    DOT             shift and go to state 22


state 11

    (31) string_node -> FLOOR . BULLET FLOOR

    BULLET          shift and go to state 23


state 12

    (15) node -> node node .
    (11) bullet_list -> node . BULLET bullet_list
    (12) bullet_list -> node .
    (2) node -> node . L_PAREN node_list R_PAREN
    (3) node -> node . L_PAREN node_list EXCLUDE R_PAREN
    (4) node -> node . L_PAREN node_list R_PAREN EXCLUDE
    (9) node -> node . bullet_list
    (10) node -> node . L_PAREN bullet_list R_PAREN
    (15) node -> node . node
    (14) range_node -> node . WAVE_DASH node
    (11) bullet_list -> . node BULLET bullet_list
    (12) bullet_list -> . node
    (2) node -> . node L_PAREN node_list R_PAREN
    (3) node -> . node L_PAREN node_list EXCLUDE R_PAREN
    (4) node -> . node L_PAREN node_list R_PAREN EXCLUDE
    (9) node -> . node bullet_list
    (10) node -> . node L_PAREN bullet_list R_PAREN
    (15) node -> . node node
    (17) node -> . range_node
    (18) node -> . num_node
    (19) node -> . string_node
    (20) node -> . suffix_node
    (14) range_node -> . node WAVE_DASH node
    (13) num_node -> . num_node THEN num_node
    (16) num_node -> . num_node HYPHEN num_node
    (21) num_node -> . PREFIX NUMBER
    (22) num_node -> . PREFIX NUMBER SUFFIX
    (23) num_node -> . PREFIX NUMBER SUFFIX COMPARATIVE_SUFFIX
    (24) num_node -> . NUMBER SUFFIX
    (25) num_node -> . NUMBER SUFFIX COMPARATIVE_SUFFIX
    (26) num_node -> . NUMBER
    (27) num_node -> . NUMBER COMPARATIVE_SUFFIX
    (28) num_node -> . PREFIX NUMBER COMPARATIVE_SUFFIX
    (29) string_node -> . ID
    (30) string_node -> . ID DOT ID
    (31) string_node -> . FLOOR BULLET FLOOR
    (32) suffix_node -> . L_PAREN SUFFIX R_PAREN

  ! shift/reduce conflict for BULLET resolved as shift
  ! reduce/reduce conflict for L_PAREN resolved using rule 12 (bullet_list -> node .)
  ! reduce/reduce conflict for WAVE_DASH resolved using rule 12 (bullet_list -> node .)
  ! reduce/reduce conflict for PREFIX resolved using rule 12 (bullet_list -> node .)
  ! reduce/reduce conflict for NUMBER resolved using rule 12 (bullet_list -> node .)
  ! reduce/reduce conflict for ID resolved using rule 12 (bullet_list -> node .)
  ! reduce/reduce conflict for FLOOR resolved using rule 12 (bullet_list -> node .)
  ! reduce/reduce conflict for $end resolved using rule 12 (bullet_list -> node .)
  ! shift/reduce conflict for BULLET resolved as shift
  ! reduce/reduce conflict for COMMA resolved using rule 12 (bullet_list -> node .)
  ! reduce/reduce conflict for R_PAREN resolved using rule 12 (bullet_list -> node .)
  ! reduce/reduce conflict for EXCLUDE resolved using rule 12 (bullet_list -> node .)
  ! shift/reduce conflict for L_PAREN resolved as shift
  ! shift/reduce conflict for WAVE_DASH resolved as shift
  ! shift/reduce conflict for PREFIX resolved as shift
  ! shift/reduce conflict for NUMBER resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for FLOOR resolved as shift
    BULLET          shift and go to state 24
    $end            reduce using rule 12 (bullet_list -> node .)
    COMMA           reduce using rule 12 (bullet_list -> node .)
    R_PAREN         reduce using rule 12 (bullet_list -> node .)
    EXCLUDE         reduce using rule 12 (bullet_list -> node .)
    L_PAREN         shift and go to state 13
    WAVE_DASH       shift and go to state 15
    PREFIX          shift and go to state 8
    NUMBER          shift and go to state 9
    ID              shift and go to state 10
    FLOOR           shift and go to state 11

  ! L_PAREN         [ reduce using rule 15 (node -> node node .) ]
  ! WAVE_DASH       [ reduce using rule 15 (node -> node node .) ]
  ! PREFIX          [ reduce using rule 15 (node -> node node .) ]
  ! NUMBER          [ reduce using rule 15 (node -> node node .) ]
  ! ID              [ reduce using rule 15 (node -> node node .) ]
  ! FLOOR           [ reduce using rule 15 (node -> node node .) ]
  ! $end            [ reduce using rule 15 (node -> node node .) ]
  ! BULLET          [ reduce using rule 15 (node -> node node .) ]
  ! COMMA           [ reduce using rule 15 (node -> node node .) ]
  ! R_PAREN         [ reduce using rule 15 (node -> node node .) ]
  ! EXCLUDE         [ reduce using rule 15 (node -> node node .) ]
  ! L_PAREN         [ reduce using rule 12 (bullet_list -> node .) ]
  ! WAVE_DASH       [ reduce using rule 12 (bullet_list -> node .) ]
  ! PREFIX          [ reduce using rule 12 (bullet_list -> node .) ]
  ! NUMBER          [ reduce using rule 12 (bullet_list -> node .) ]
  ! ID              [ reduce using rule 12 (bullet_list -> node .) ]
  ! FLOOR           [ reduce using rule 12 (bullet_list -> node .) ]
  ! BULLET          [ reduce using rule 12 (bullet_list -> node .) ]

    node                           shift and go to state 12
    bullet_list                    shift and go to state 14
    range_node                     shift and go to state 4
    num_node                       shift and go to state 5
    string_node                    shift and go to state 6
    suffix_node                    shift and go to state 7

state 13

    (2) node -> node L_PAREN . node_list R_PAREN
    (3) node -> node L_PAREN . node_list EXCLUDE R_PAREN
    (4) node -> node L_PAREN . node_list R_PAREN EXCLUDE
    (10) node -> node L_PAREN . bullet_list R_PAREN
    (32) suffix_node -> L_PAREN . SUFFIX R_PAREN
    (5) node_list -> . node COMMA node_list
    (6) node_list -> . node
    (7) node_list -> . bullet_list COMMA node_list
    (8) node_list -> . bullet_list
    (11) bullet_list -> . node BULLET bullet_list
    (12) bullet_list -> . node
    (2) node -> . node L_PAREN node_list R_PAREN
    (3) node -> . node L_PAREN node_list EXCLUDE R_PAREN
    (4) node -> . node L_PAREN node_list R_PAREN EXCLUDE
    (9) node -> . node bullet_list
    (10) node -> . node L_PAREN bullet_list R_PAREN
    (15) node -> . node node
    (17) node -> . range_node
    (18) node -> . num_node
    (19) node -> . string_node
    (20) node -> . suffix_node
    (14) range_node -> . node WAVE_DASH node
    (13) num_node -> . num_node THEN num_node
    (16) num_node -> . num_node HYPHEN num_node
    (21) num_node -> . PREFIX NUMBER
    (22) num_node -> . PREFIX NUMBER SUFFIX
    (23) num_node -> . PREFIX NUMBER SUFFIX COMPARATIVE_SUFFIX
    (24) num_node -> . NUMBER SUFFIX
    (25) num_node -> . NUMBER SUFFIX COMPARATIVE_SUFFIX
    (26) num_node -> . NUMBER
    (27) num_node -> . NUMBER COMPARATIVE_SUFFIX
    (28) num_node -> . PREFIX NUMBER COMPARATIVE_SUFFIX
    (29) string_node -> . ID
    (30) string_node -> . ID DOT ID
    (31) string_node -> . FLOOR BULLET FLOOR
    (32) suffix_node -> . L_PAREN SUFFIX R_PAREN

    SUFFIX          shift and go to state 16
    PREFIX          shift and go to state 8
    NUMBER          shift and go to state 9
    ID              shift and go to state 10
    FLOOR           shift and go to state 11
    L_PAREN         shift and go to state 3

    node                           shift and go to state 25
    node_list                      shift and go to state 26
    bullet_list                    shift and go to state 27
    range_node                     shift and go to state 4
    num_node                       shift and go to state 5
    string_node                    shift and go to state 6
    suffix_node                    shift and go to state 7

state 14

    (9) node -> node bullet_list .

    L_PAREN         reduce using rule 9 (node -> node bullet_list .)
    WAVE_DASH       reduce using rule 9 (node -> node bullet_list .)
    PREFIX          reduce using rule 9 (node -> node bullet_list .)
    NUMBER          reduce using rule 9 (node -> node bullet_list .)
    ID              reduce using rule 9 (node -> node bullet_list .)
    FLOOR           reduce using rule 9 (node -> node bullet_list .)
    $end            reduce using rule 9 (node -> node bullet_list .)
    BULLET          reduce using rule 9 (node -> node bullet_list .)
    COMMA           reduce using rule 9 (node -> node bullet_list .)
    R_PAREN         reduce using rule 9 (node -> node bullet_list .)
    EXCLUDE         reduce using rule 9 (node -> node bullet_list .)


state 15

    (14) range_node -> node WAVE_DASH . node
    (2) node -> . node L_PAREN node_list R_PAREN
    (3) node -> . node L_PAREN node_list EXCLUDE R_PAREN
    (4) node -> . node L_PAREN node_list R_PAREN EXCLUDE
    (9) node -> . node bullet_list
    (10) node -> . node L_PAREN bullet_list R_PAREN
    (15) node -> . node node
    (17) node -> . range_node
    (18) node -> . num_node
    (19) node -> . string_node
    (20) node -> . suffix_node
    (14) range_node -> . node WAVE_DASH node
    (13) num_node -> . num_node THEN num_node
    (16) num_node -> . num_node HYPHEN num_node
    (21) num_node -> . PREFIX NUMBER
    (22) num_node -> . PREFIX NUMBER SUFFIX
    (23) num_node -> . PREFIX NUMBER SUFFIX COMPARATIVE_SUFFIX
    (24) num_node -> . NUMBER SUFFIX
    (25) num_node -> . NUMBER SUFFIX COMPARATIVE_SUFFIX
    (26) num_node -> . NUMBER
    (27) num_node -> . NUMBER COMPARATIVE_SUFFIX
    (28) num_node -> . PREFIX NUMBER COMPARATIVE_SUFFIX
    (29) string_node -> . ID
    (30) string_node -> . ID DOT ID
    (31) string_node -> . FLOOR BULLET FLOOR
    (32) suffix_node -> . L_PAREN SUFFIX R_PAREN

    PREFIX          shift and go to state 8
    NUMBER          shift and go to state 9
    ID              shift and go to state 10
    FLOOR           shift and go to state 11
    L_PAREN         shift and go to state 3

    node                           shift and go to state 28
    range_node                     shift and go to state 4
    num_node                       shift and go to state 5
    string_node                    shift and go to state 6
    suffix_node                    shift and go to state 7

state 16

    (32) suffix_node -> L_PAREN SUFFIX . R_PAREN

    R_PAREN         shift and go to state 29


state 17

    (13) num_node -> num_node THEN . num_node
    (13) num_node -> . num_node THEN num_node
    (16) num_node -> . num_node HYPHEN num_node
    (21) num_node -> . PREFIX NUMBER
    (22) num_node -> . PREFIX NUMBER SUFFIX
    (23) num_node -> . PREFIX NUMBER SUFFIX COMPARATIVE_SUFFIX
    (24) num_node -> . NUMBER SUFFIX
    (25) num_node -> . NUMBER SUFFIX COMPARATIVE_SUFFIX
    (26) num_node -> . NUMBER
    (27) num_node -> . NUMBER COMPARATIVE_SUFFIX
    (28) num_node -> . PREFIX NUMBER COMPARATIVE_SUFFIX

    PREFIX          shift and go to state 8
    NUMBER          shift and go to state 9

    num_node                       shift and go to state 30

state 18

    (16) num_node -> num_node HYPHEN . num_node
    (13) num_node -> . num_node THEN num_node
    (16) num_node -> . num_node HYPHEN num_node
    (21) num_node -> . PREFIX NUMBER
    (22) num_node -> . PREFIX NUMBER SUFFIX
    (23) num_node -> . PREFIX NUMBER SUFFIX COMPARATIVE_SUFFIX
    (24) num_node -> . NUMBER SUFFIX
    (25) num_node -> . NUMBER SUFFIX COMPARATIVE_SUFFIX
    (26) num_node -> . NUMBER
    (27) num_node -> . NUMBER COMPARATIVE_SUFFIX
    (28) num_node -> . PREFIX NUMBER COMPARATIVE_SUFFIX

    PREFIX          shift and go to state 8
    NUMBER          shift and go to state 9

    num_node                       shift and go to state 31

state 19

    (21) num_node -> PREFIX NUMBER .
    (22) num_node -> PREFIX NUMBER . SUFFIX
    (23) num_node -> PREFIX NUMBER . SUFFIX COMPARATIVE_SUFFIX
    (28) num_node -> PREFIX NUMBER . COMPARATIVE_SUFFIX

    THEN            reduce using rule 21 (num_node -> PREFIX NUMBER .)
    HYPHEN          reduce using rule 21 (num_node -> PREFIX NUMBER .)
    L_PAREN         reduce using rule 21 (num_node -> PREFIX NUMBER .)
    WAVE_DASH       reduce using rule 21 (num_node -> PREFIX NUMBER .)
    PREFIX          reduce using rule 21 (num_node -> PREFIX NUMBER .)
    NUMBER          reduce using rule 21 (num_node -> PREFIX NUMBER .)
    ID              reduce using rule 21 (num_node -> PREFIX NUMBER .)
    FLOOR           reduce using rule 21 (num_node -> PREFIX NUMBER .)
    $end            reduce using rule 21 (num_node -> PREFIX NUMBER .)
    BULLET          reduce using rule 21 (num_node -> PREFIX NUMBER .)
    COMMA           reduce using rule 21 (num_node -> PREFIX NUMBER .)
    R_PAREN         reduce using rule 21 (num_node -> PREFIX NUMBER .)
    EXCLUDE         reduce using rule 21 (num_node -> PREFIX NUMBER .)
    SUFFIX          shift and go to state 32
    COMPARATIVE_SUFFIX shift and go to state 33


state 20

    (24) num_node -> NUMBER SUFFIX .
    (25) num_node -> NUMBER SUFFIX . COMPARATIVE_SUFFIX

    THEN            reduce using rule 24 (num_node -> NUMBER SUFFIX .)
    HYPHEN          reduce using rule 24 (num_node -> NUMBER SUFFIX .)
    L_PAREN         reduce using rule 24 (num_node -> NUMBER SUFFIX .)
    WAVE_DASH       reduce using rule 24 (num_node -> NUMBER SUFFIX .)
    PREFIX          reduce using rule 24 (num_node -> NUMBER SUFFIX .)
    NUMBER          reduce using rule 24 (num_node -> NUMBER SUFFIX .)
    ID              reduce using rule 24 (num_node -> NUMBER SUFFIX .)
    FLOOR           reduce using rule 24 (num_node -> NUMBER SUFFIX .)
    $end            reduce using rule 24 (num_node -> NUMBER SUFFIX .)
    BULLET          reduce using rule 24 (num_node -> NUMBER SUFFIX .)
    COMMA           reduce using rule 24 (num_node -> NUMBER SUFFIX .)
    R_PAREN         reduce using rule 24 (num_node -> NUMBER SUFFIX .)
    EXCLUDE         reduce using rule 24 (num_node -> NUMBER SUFFIX .)
    COMPARATIVE_SUFFIX shift and go to state 34


state 21

    (27) num_node -> NUMBER COMPARATIVE_SUFFIX .

    THEN            reduce using rule 27 (num_node -> NUMBER COMPARATIVE_SUFFIX .)
    HYPHEN          reduce using rule 27 (num_node -> NUMBER COMPARATIVE_SUFFIX .)
    L_PAREN         reduce using rule 27 (num_node -> NUMBER COMPARATIVE_SUFFIX .)
    WAVE_DASH       reduce using rule 27 (num_node -> NUMBER COMPARATIVE_SUFFIX .)
    PREFIX          reduce using rule 27 (num_node -> NUMBER COMPARATIVE_SUFFIX .)
    NUMBER          reduce using rule 27 (num_node -> NUMBER COMPARATIVE_SUFFIX .)
    ID              reduce using rule 27 (num_node -> NUMBER COMPARATIVE_SUFFIX .)
    FLOOR           reduce using rule 27 (num_node -> NUMBER COMPARATIVE_SUFFIX .)
    $end            reduce using rule 27 (num_node -> NUMBER COMPARATIVE_SUFFIX .)
    BULLET          reduce using rule 27 (num_node -> NUMBER COMPARATIVE_SUFFIX .)
    COMMA           reduce using rule 27 (num_node -> NUMBER COMPARATIVE_SUFFIX .)
    R_PAREN         reduce using rule 27 (num_node -> NUMBER COMPARATIVE_SUFFIX .)
    EXCLUDE         reduce using rule 27 (num_node -> NUMBER COMPARATIVE_SUFFIX .)


state 22

    (30) string_node -> ID DOT . ID

    ID              shift and go to state 35


state 23

    (31) string_node -> FLOOR BULLET . FLOOR

    FLOOR           shift and go to state 36


state 24

    (11) bullet_list -> node BULLET . bullet_list
    (11) bullet_list -> . node BULLET bullet_list
    (12) bullet_list -> . node
    (2) node -> . node L_PAREN node_list R_PAREN
    (3) node -> . node L_PAREN node_list EXCLUDE R_PAREN
    (4) node -> . node L_PAREN node_list R_PAREN EXCLUDE
    (9) node -> . node bullet_list
    (10) node -> . node L_PAREN bullet_list R_PAREN
    (15) node -> . node node
    (17) node -> . range_node
    (18) node -> . num_node
    (19) node -> . string_node
    (20) node -> . suffix_node
    (14) range_node -> . node WAVE_DASH node
    (13) num_node -> . num_node THEN num_node
    (16) num_node -> . num_node HYPHEN num_node
    (21) num_node -> . PREFIX NUMBER
    (22) num_node -> . PREFIX NUMBER SUFFIX
    (23) num_node -> . PREFIX NUMBER SUFFIX COMPARATIVE_SUFFIX
    (24) num_node -> . NUMBER SUFFIX
    (25) num_node -> . NUMBER SUFFIX COMPARATIVE_SUFFIX
    (26) num_node -> . NUMBER
    (27) num_node -> . NUMBER COMPARATIVE_SUFFIX
    (28) num_node -> . PREFIX NUMBER COMPARATIVE_SUFFIX
    (29) string_node -> . ID
    (30) string_node -> . ID DOT ID
    (31) string_node -> . FLOOR BULLET FLOOR
    (32) suffix_node -> . L_PAREN SUFFIX R_PAREN

    PREFIX          shift and go to state 8
    NUMBER          shift and go to state 9
    ID              shift and go to state 10
    FLOOR           shift and go to state 11
    L_PAREN         shift and go to state 3

    node                           shift and go to state 37
    bullet_list                    shift and go to state 38
    range_node                     shift and go to state 4
    num_node                       shift and go to state 5
    string_node                    shift and go to state 6
    suffix_node                    shift and go to state 7

state 25

    (5) node_list -> node . COMMA node_list
    (6) node_list -> node .
    (11) bullet_list -> node . BULLET bullet_list
    (12) bullet_list -> node .
    (2) node -> node . L_PAREN node_list R_PAREN
    (3) node -> node . L_PAREN node_list EXCLUDE R_PAREN
    (4) node -> node . L_PAREN node_list R_PAREN EXCLUDE
    (9) node -> node . bullet_list
    (10) node -> node . L_PAREN bullet_list R_PAREN
    (15) node -> node . node
    (14) range_node -> node . WAVE_DASH node
    (11) bullet_list -> . node BULLET bullet_list
    (12) bullet_list -> . node
    (2) node -> . node L_PAREN node_list R_PAREN
    (3) node -> . node L_PAREN node_list EXCLUDE R_PAREN
    (4) node -> . node L_PAREN node_list R_PAREN EXCLUDE
    (9) node -> . node bullet_list
    (10) node -> . node L_PAREN bullet_list R_PAREN
    (15) node -> . node node
    (17) node -> . range_node
    (18) node -> . num_node
    (19) node -> . string_node
    (20) node -> . suffix_node
    (14) range_node -> . node WAVE_DASH node
    (13) num_node -> . num_node THEN num_node
    (16) num_node -> . num_node HYPHEN num_node
    (21) num_node -> . PREFIX NUMBER
    (22) num_node -> . PREFIX NUMBER SUFFIX
    (23) num_node -> . PREFIX NUMBER SUFFIX COMPARATIVE_SUFFIX
    (24) num_node -> . NUMBER SUFFIX
    (25) num_node -> . NUMBER SUFFIX COMPARATIVE_SUFFIX
    (26) num_node -> . NUMBER
    (27) num_node -> . NUMBER COMPARATIVE_SUFFIX
    (28) num_node -> . PREFIX NUMBER COMPARATIVE_SUFFIX
    (29) string_node -> . ID
    (30) string_node -> . ID DOT ID
    (31) string_node -> . FLOOR BULLET FLOOR
    (32) suffix_node -> . L_PAREN SUFFIX R_PAREN

  ! reduce/reduce conflict for R_PAREN resolved using rule 6 (node_list -> node .)
  ! shift/reduce conflict for COMMA resolved as shift
  ! reduce/reduce conflict for EXCLUDE resolved using rule 6 (node_list -> node .)
    COMMA           shift and go to state 39
    R_PAREN         reduce using rule 6 (node_list -> node .)
    EXCLUDE         reduce using rule 6 (node_list -> node .)
    BULLET          shift and go to state 24
    L_PAREN         shift and go to state 13
    WAVE_DASH       shift and go to state 15
    PREFIX          shift and go to state 8
    NUMBER          shift and go to state 9
    ID              shift and go to state 10
    FLOOR           shift and go to state 11

  ! R_PAREN         [ reduce using rule 12 (bullet_list -> node .) ]
  ! COMMA           [ reduce using rule 12 (bullet_list -> node .) ]
  ! EXCLUDE         [ reduce using rule 12 (bullet_list -> node .) ]

    node                           shift and go to state 12
    bullet_list                    shift and go to state 14
    range_node                     shift and go to state 4
    num_node                       shift and go to state 5
    string_node                    shift and go to state 6
    suffix_node                    shift and go to state 7

state 26

    (2) node -> node L_PAREN node_list . R_PAREN
    (3) node -> node L_PAREN node_list . EXCLUDE R_PAREN
    (4) node -> node L_PAREN node_list . R_PAREN EXCLUDE

    R_PAREN         shift and go to state 40
    EXCLUDE         shift and go to state 41


state 27

    (10) node -> node L_PAREN bullet_list . R_PAREN
    (7) node_list -> bullet_list . COMMA node_list
    (8) node_list -> bullet_list .

  ! shift/reduce conflict for R_PAREN resolved as shift
    R_PAREN         shift and go to state 42
    COMMA           shift and go to state 43
    EXCLUDE         reduce using rule 8 (node_list -> bullet_list .)

  ! R_PAREN         [ reduce using rule 8 (node_list -> bullet_list .) ]


state 28

    (14) range_node -> node WAVE_DASH node .
    (2) node -> node . L_PAREN node_list R_PAREN
    (3) node -> node . L_PAREN node_list EXCLUDE R_PAREN
    (4) node -> node . L_PAREN node_list R_PAREN EXCLUDE
    (9) node -> node . bullet_list
    (10) node -> node . L_PAREN bullet_list R_PAREN
    (15) node -> node . node
    (14) range_node -> node . WAVE_DASH node
    (11) bullet_list -> . node BULLET bullet_list
    (12) bullet_list -> . node
    (2) node -> . node L_PAREN node_list R_PAREN
    (3) node -> . node L_PAREN node_list EXCLUDE R_PAREN
    (4) node -> . node L_PAREN node_list R_PAREN EXCLUDE
    (9) node -> . node bullet_list
    (10) node -> . node L_PAREN bullet_list R_PAREN
    (15) node -> . node node
    (17) node -> . range_node
    (18) node -> . num_node
    (19) node -> . string_node
    (20) node -> . suffix_node
    (14) range_node -> . node WAVE_DASH node
    (13) num_node -> . num_node THEN num_node
    (16) num_node -> . num_node HYPHEN num_node
    (21) num_node -> . PREFIX NUMBER
    (22) num_node -> . PREFIX NUMBER SUFFIX
    (23) num_node -> . PREFIX NUMBER SUFFIX COMPARATIVE_SUFFIX
    (24) num_node -> . NUMBER SUFFIX
    (25) num_node -> . NUMBER SUFFIX COMPARATIVE_SUFFIX
    (26) num_node -> . NUMBER
    (27) num_node -> . NUMBER COMPARATIVE_SUFFIX
    (28) num_node -> . PREFIX NUMBER COMPARATIVE_SUFFIX
    (29) string_node -> . ID
    (30) string_node -> . ID DOT ID
    (31) string_node -> . FLOOR BULLET FLOOR
    (32) suffix_node -> . L_PAREN SUFFIX R_PAREN

  ! shift/reduce conflict for L_PAREN resolved as shift
  ! shift/reduce conflict for WAVE_DASH resolved as shift
  ! shift/reduce conflict for PREFIX resolved as shift
  ! shift/reduce conflict for NUMBER resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for FLOOR resolved as shift
    $end            reduce using rule 14 (range_node -> node WAVE_DASH node .)
    BULLET          reduce using rule 14 (range_node -> node WAVE_DASH node .)
    COMMA           reduce using rule 14 (range_node -> node WAVE_DASH node .)
    R_PAREN         reduce using rule 14 (range_node -> node WAVE_DASH node .)
    EXCLUDE         reduce using rule 14 (range_node -> node WAVE_DASH node .)
    L_PAREN         shift and go to state 13
    WAVE_DASH       shift and go to state 15
    PREFIX          shift and go to state 8
    NUMBER          shift and go to state 9
    ID              shift and go to state 10
    FLOOR           shift and go to state 11

  ! L_PAREN         [ reduce using rule 14 (range_node -> node WAVE_DASH node .) ]
  ! WAVE_DASH       [ reduce using rule 14 (range_node -> node WAVE_DASH node .) ]
  ! PREFIX          [ reduce using rule 14 (range_node -> node WAVE_DASH node .) ]
  ! NUMBER          [ reduce using rule 14 (range_node -> node WAVE_DASH node .) ]
  ! ID              [ reduce using rule 14 (range_node -> node WAVE_DASH node .) ]
  ! FLOOR           [ reduce using rule 14 (range_node -> node WAVE_DASH node .) ]

    node                           shift and go to state 12
    bullet_list                    shift and go to state 14
    range_node                     shift and go to state 4
    num_node                       shift and go to state 5
    string_node                    shift and go to state 6
    suffix_node                    shift and go to state 7

state 29

    (32) suffix_node -> L_PAREN SUFFIX R_PAREN .

    L_PAREN         reduce using rule 32 (suffix_node -> L_PAREN SUFFIX R_PAREN .)
    WAVE_DASH       reduce using rule 32 (suffix_node -> L_PAREN SUFFIX R_PAREN .)
    PREFIX          reduce using rule 32 (suffix_node -> L_PAREN SUFFIX R_PAREN .)
    NUMBER          reduce using rule 32 (suffix_node -> L_PAREN SUFFIX R_PAREN .)
    ID              reduce using rule 32 (suffix_node -> L_PAREN SUFFIX R_PAREN .)
    FLOOR           reduce using rule 32 (suffix_node -> L_PAREN SUFFIX R_PAREN .)
    $end            reduce using rule 32 (suffix_node -> L_PAREN SUFFIX R_PAREN .)
    BULLET          reduce using rule 32 (suffix_node -> L_PAREN SUFFIX R_PAREN .)
    COMMA           reduce using rule 32 (suffix_node -> L_PAREN SUFFIX R_PAREN .)
    R_PAREN         reduce using rule 32 (suffix_node -> L_PAREN SUFFIX R_PAREN .)
    EXCLUDE         reduce using rule 32 (suffix_node -> L_PAREN SUFFIX R_PAREN .)


state 30

    (13) num_node -> num_node THEN num_node .
    (13) num_node -> num_node . THEN num_node
    (16) num_node -> num_node . HYPHEN num_node

  ! shift/reduce conflict for THEN resolved as shift
  ! shift/reduce conflict for HYPHEN resolved as shift
    L_PAREN         reduce using rule 13 (num_node -> num_node THEN num_node .)
    WAVE_DASH       reduce using rule 13 (num_node -> num_node THEN num_node .)
    PREFIX          reduce using rule 13 (num_node -> num_node THEN num_node .)
    NUMBER          reduce using rule 13 (num_node -> num_node THEN num_node .)
    ID              reduce using rule 13 (num_node -> num_node THEN num_node .)
    FLOOR           reduce using rule 13 (num_node -> num_node THEN num_node .)
    $end            reduce using rule 13 (num_node -> num_node THEN num_node .)
    BULLET          reduce using rule 13 (num_node -> num_node THEN num_node .)
    COMMA           reduce using rule 13 (num_node -> num_node THEN num_node .)
    R_PAREN         reduce using rule 13 (num_node -> num_node THEN num_node .)
    EXCLUDE         reduce using rule 13 (num_node -> num_node THEN num_node .)
    THEN            shift and go to state 17
    HYPHEN          shift and go to state 18

  ! THEN            [ reduce using rule 13 (num_node -> num_node THEN num_node .) ]
  ! HYPHEN          [ reduce using rule 13 (num_node -> num_node THEN num_node .) ]


state 31

    (16) num_node -> num_node HYPHEN num_node .
    (13) num_node -> num_node . THEN num_node
    (16) num_node -> num_node . HYPHEN num_node

  ! shift/reduce conflict for THEN resolved as shift
  ! shift/reduce conflict for HYPHEN resolved as shift
    L_PAREN         reduce using rule 16 (num_node -> num_node HYPHEN num_node .)
    WAVE_DASH       reduce using rule 16 (num_node -> num_node HYPHEN num_node .)
    PREFIX          reduce using rule 16 (num_node -> num_node HYPHEN num_node .)
    NUMBER          reduce using rule 16 (num_node -> num_node HYPHEN num_node .)
    ID              reduce using rule 16 (num_node -> num_node HYPHEN num_node .)
    FLOOR           reduce using rule 16 (num_node -> num_node HYPHEN num_node .)
    $end            reduce using rule 16 (num_node -> num_node HYPHEN num_node .)
    BULLET          reduce using rule 16 (num_node -> num_node HYPHEN num_node .)
    COMMA           reduce using rule 16 (num_node -> num_node HYPHEN num_node .)
    R_PAREN         reduce using rule 16 (num_node -> num_node HYPHEN num_node .)
    EXCLUDE         reduce using rule 16 (num_node -> num_node HYPHEN num_node .)
    THEN            shift and go to state 17
    HYPHEN          shift and go to state 18

  ! THEN            [ reduce using rule 16 (num_node -> num_node HYPHEN num_node .) ]
  ! HYPHEN          [ reduce using rule 16 (num_node -> num_node HYPHEN num_node .) ]


state 32

    (22) num_node -> PREFIX NUMBER SUFFIX .
    (23) num_node -> PREFIX NUMBER SUFFIX . COMPARATIVE_SUFFIX

    THEN            reduce using rule 22 (num_node -> PREFIX NUMBER SUFFIX .)
    HYPHEN          reduce using rule 22 (num_node -> PREFIX NUMBER SUFFIX .)
    L_PAREN         reduce using rule 22 (num_node -> PREFIX NUMBER SUFFIX .)
    WAVE_DASH       reduce using rule 22 (num_node -> PREFIX NUMBER SUFFIX .)
    PREFIX          reduce using rule 22 (num_node -> PREFIX NUMBER SUFFIX .)
    NUMBER          reduce using rule 22 (num_node -> PREFIX NUMBER SUFFIX .)
    ID              reduce using rule 22 (num_node -> PREFIX NUMBER SUFFIX .)
    FLOOR           reduce using rule 22 (num_node -> PREFIX NUMBER SUFFIX .)
    $end            reduce using rule 22 (num_node -> PREFIX NUMBER SUFFIX .)
    BULLET          reduce using rule 22 (num_node -> PREFIX NUMBER SUFFIX .)
    COMMA           reduce using rule 22 (num_node -> PREFIX NUMBER SUFFIX .)
    R_PAREN         reduce using rule 22 (num_node -> PREFIX NUMBER SUFFIX .)
    EXCLUDE         reduce using rule 22 (num_node -> PREFIX NUMBER SUFFIX .)
    COMPARATIVE_SUFFIX shift and go to state 44


state 33

    (28) num_node -> PREFIX NUMBER COMPARATIVE_SUFFIX .

    THEN            reduce using rule 28 (num_node -> PREFIX NUMBER COMPARATIVE_SUFFIX .)
    HYPHEN          reduce using rule 28 (num_node -> PREFIX NUMBER COMPARATIVE_SUFFIX .)
    L_PAREN         reduce using rule 28 (num_node -> PREFIX NUMBER COMPARATIVE_SUFFIX .)
    WAVE_DASH       reduce using rule 28 (num_node -> PREFIX NUMBER COMPARATIVE_SUFFIX .)
    PREFIX          reduce using rule 28 (num_node -> PREFIX NUMBER COMPARATIVE_SUFFIX .)
    NUMBER          reduce using rule 28 (num_node -> PREFIX NUMBER COMPARATIVE_SUFFIX .)
    ID              reduce using rule 28 (num_node -> PREFIX NUMBER COMPARATIVE_SUFFIX .)
    FLOOR           reduce using rule 28 (num_node -> PREFIX NUMBER COMPARATIVE_SUFFIX .)
    $end            reduce using rule 28 (num_node -> PREFIX NUMBER COMPARATIVE_SUFFIX .)
    BULLET          reduce using rule 28 (num_node -> PREFIX NUMBER COMPARATIVE_SUFFIX .)
    COMMA           reduce using rule 28 (num_node -> PREFIX NUMBER COMPARATIVE_SUFFIX .)
    R_PAREN         reduce using rule 28 (num_node -> PREFIX NUMBER COMPARATIVE_SUFFIX .)
    EXCLUDE         reduce using rule 28 (num_node -> PREFIX NUMBER COMPARATIVE_SUFFIX .)


state 34

    (25) num_node -> NUMBER SUFFIX COMPARATIVE_SUFFIX .

    THEN            reduce using rule 25 (num_node -> NUMBER SUFFIX COMPARATIVE_SUFFIX .)
    HYPHEN          reduce using rule 25 (num_node -> NUMBER SUFFIX COMPARATIVE_SUFFIX .)
    L_PAREN         reduce using rule 25 (num_node -> NUMBER SUFFIX COMPARATIVE_SUFFIX .)
    WAVE_DASH       reduce using rule 25 (num_node -> NUMBER SUFFIX COMPARATIVE_SUFFIX .)
    PREFIX          reduce using rule 25 (num_node -> NUMBER SUFFIX COMPARATIVE_SUFFIX .)
    NUMBER          reduce using rule 25 (num_node -> NUMBER SUFFIX COMPARATIVE_SUFFIX .)
    ID              reduce using rule 25 (num_node -> NUMBER SUFFIX COMPARATIVE_SUFFIX .)
    FLOOR           reduce using rule 25 (num_node -> NUMBER SUFFIX COMPARATIVE_SUFFIX .)
    $end            reduce using rule 25 (num_node -> NUMBER SUFFIX COMPARATIVE_SUFFIX .)
    BULLET          reduce using rule 25 (num_node -> NUMBER SUFFIX COMPARATIVE_SUFFIX .)
    COMMA           reduce using rule 25 (num_node -> NUMBER SUFFIX COMPARATIVE_SUFFIX .)
    R_PAREN         reduce using rule 25 (num_node -> NUMBER SUFFIX COMPARATIVE_SUFFIX .)
    EXCLUDE         reduce using rule 25 (num_node -> NUMBER SUFFIX COMPARATIVE_SUFFIX .)


state 35

    (30) string_node -> ID DOT ID .

    L_PAREN         reduce using rule 30 (string_node -> ID DOT ID .)
    WAVE_DASH       reduce using rule 30 (string_node -> ID DOT ID .)
    PREFIX          reduce using rule 30 (string_node -> ID DOT ID .)
    NUMBER          reduce using rule 30 (string_node -> ID DOT ID .)
    ID              reduce using rule 30 (string_node -> ID DOT ID .)
    FLOOR           reduce using rule 30 (string_node -> ID DOT ID .)
    $end            reduce using rule 30 (string_node -> ID DOT ID .)
    BULLET          reduce using rule 30 (string_node -> ID DOT ID .)
    COMMA           reduce using rule 30 (string_node -> ID DOT ID .)
    R_PAREN         reduce using rule 30 (string_node -> ID DOT ID .)
    EXCLUDE         reduce using rule 30 (string_node -> ID DOT ID .)


state 36

    (31) string_node -> FLOOR BULLET FLOOR .

    L_PAREN         reduce using rule 31 (string_node -> FLOOR BULLET FLOOR .)
    WAVE_DASH       reduce using rule 31 (string_node -> FLOOR BULLET FLOOR .)
    PREFIX          reduce using rule 31 (string_node -> FLOOR BULLET FLOOR .)
    NUMBER          reduce using rule 31 (string_node -> FLOOR BULLET FLOOR .)
    ID              reduce using rule 31 (string_node -> FLOOR BULLET FLOOR .)
    FLOOR           reduce using rule 31 (string_node -> FLOOR BULLET FLOOR .)
    $end            reduce using rule 31 (string_node -> FLOOR BULLET FLOOR .)
    BULLET          reduce using rule 31 (string_node -> FLOOR BULLET FLOOR .)
    COMMA           reduce using rule 31 (string_node -> FLOOR BULLET FLOOR .)
    R_PAREN         reduce using rule 31 (string_node -> FLOOR BULLET FLOOR .)
    EXCLUDE         reduce using rule 31 (string_node -> FLOOR BULLET FLOOR .)


state 37

    (11) bullet_list -> node . BULLET bullet_list
    (12) bullet_list -> node .
    (2) node -> node . L_PAREN node_list R_PAREN
    (3) node -> node . L_PAREN node_list EXCLUDE R_PAREN
    (4) node -> node . L_PAREN node_list R_PAREN EXCLUDE
    (9) node -> node . bullet_list
    (10) node -> node . L_PAREN bullet_list R_PAREN
    (15) node -> node . node
    (14) range_node -> node . WAVE_DASH node
    (11) bullet_list -> . node BULLET bullet_list
    (12) bullet_list -> . node
    (2) node -> . node L_PAREN node_list R_PAREN
    (3) node -> . node L_PAREN node_list EXCLUDE R_PAREN
    (4) node -> . node L_PAREN node_list R_PAREN EXCLUDE
    (9) node -> . node bullet_list
    (10) node -> . node L_PAREN bullet_list R_PAREN
    (15) node -> . node node
    (17) node -> . range_node
    (18) node -> . num_node
    (19) node -> . string_node
    (20) node -> . suffix_node
    (14) range_node -> . node WAVE_DASH node
    (13) num_node -> . num_node THEN num_node
    (16) num_node -> . num_node HYPHEN num_node
    (21) num_node -> . PREFIX NUMBER
    (22) num_node -> . PREFIX NUMBER SUFFIX
    (23) num_node -> . PREFIX NUMBER SUFFIX COMPARATIVE_SUFFIX
    (24) num_node -> . NUMBER SUFFIX
    (25) num_node -> . NUMBER SUFFIX COMPARATIVE_SUFFIX
    (26) num_node -> . NUMBER
    (27) num_node -> . NUMBER COMPARATIVE_SUFFIX
    (28) num_node -> . PREFIX NUMBER COMPARATIVE_SUFFIX
    (29) string_node -> . ID
    (30) string_node -> . ID DOT ID
    (31) string_node -> . FLOOR BULLET FLOOR
    (32) suffix_node -> . L_PAREN SUFFIX R_PAREN

  ! shift/reduce conflict for BULLET resolved as shift
  ! shift/reduce conflict for L_PAREN resolved as shift
  ! shift/reduce conflict for WAVE_DASH resolved as shift
  ! shift/reduce conflict for PREFIX resolved as shift
  ! shift/reduce conflict for NUMBER resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for FLOOR resolved as shift
    BULLET          shift and go to state 24
    $end            reduce using rule 12 (bullet_list -> node .)
    COMMA           reduce using rule 12 (bullet_list -> node .)
    R_PAREN         reduce using rule 12 (bullet_list -> node .)
    EXCLUDE         reduce using rule 12 (bullet_list -> node .)
    L_PAREN         shift and go to state 13
    WAVE_DASH       shift and go to state 15
    PREFIX          shift and go to state 8
    NUMBER          shift and go to state 9
    ID              shift and go to state 10
    FLOOR           shift and go to state 11

  ! L_PAREN         [ reduce using rule 12 (bullet_list -> node .) ]
  ! WAVE_DASH       [ reduce using rule 12 (bullet_list -> node .) ]
  ! PREFIX          [ reduce using rule 12 (bullet_list -> node .) ]
  ! NUMBER          [ reduce using rule 12 (bullet_list -> node .) ]
  ! ID              [ reduce using rule 12 (bullet_list -> node .) ]
  ! FLOOR           [ reduce using rule 12 (bullet_list -> node .) ]
  ! BULLET          [ reduce using rule 12 (bullet_list -> node .) ]

    node                           shift and go to state 12
    bullet_list                    shift and go to state 14
    range_node                     shift and go to state 4
    num_node                       shift and go to state 5
    string_node                    shift and go to state 6
    suffix_node                    shift and go to state 7

state 38

    (11) bullet_list -> node BULLET bullet_list .

    L_PAREN         reduce using rule 11 (bullet_list -> node BULLET bullet_list .)
    WAVE_DASH       reduce using rule 11 (bullet_list -> node BULLET bullet_list .)
    PREFIX          reduce using rule 11 (bullet_list -> node BULLET bullet_list .)
    NUMBER          reduce using rule 11 (bullet_list -> node BULLET bullet_list .)
    ID              reduce using rule 11 (bullet_list -> node BULLET bullet_list .)
    FLOOR           reduce using rule 11 (bullet_list -> node BULLET bullet_list .)
    $end            reduce using rule 11 (bullet_list -> node BULLET bullet_list .)
    BULLET          reduce using rule 11 (bullet_list -> node BULLET bullet_list .)
    COMMA           reduce using rule 11 (bullet_list -> node BULLET bullet_list .)
    R_PAREN         reduce using rule 11 (bullet_list -> node BULLET bullet_list .)
    EXCLUDE         reduce using rule 11 (bullet_list -> node BULLET bullet_list .)


state 39

    (5) node_list -> node COMMA . node_list
    (5) node_list -> . node COMMA node_list
    (6) node_list -> . node
    (7) node_list -> . bullet_list COMMA node_list
    (8) node_list -> . bullet_list
    (2) node -> . node L_PAREN node_list R_PAREN
    (3) node -> . node L_PAREN node_list EXCLUDE R_PAREN
    (4) node -> . node L_PAREN node_list R_PAREN EXCLUDE
    (9) node -> . node bullet_list
    (10) node -> . node L_PAREN bullet_list R_PAREN
    (15) node -> . node node
    (17) node -> . range_node
    (18) node -> . num_node
    (19) node -> . string_node
    (20) node -> . suffix_node
    (11) bullet_list -> . node BULLET bullet_list
    (12) bullet_list -> . node
    (14) range_node -> . node WAVE_DASH node
    (13) num_node -> . num_node THEN num_node
    (16) num_node -> . num_node HYPHEN num_node
    (21) num_node -> . PREFIX NUMBER
    (22) num_node -> . PREFIX NUMBER SUFFIX
    (23) num_node -> . PREFIX NUMBER SUFFIX COMPARATIVE_SUFFIX
    (24) num_node -> . NUMBER SUFFIX
    (25) num_node -> . NUMBER SUFFIX COMPARATIVE_SUFFIX
    (26) num_node -> . NUMBER
    (27) num_node -> . NUMBER COMPARATIVE_SUFFIX
    (28) num_node -> . PREFIX NUMBER COMPARATIVE_SUFFIX
    (29) string_node -> . ID
    (30) string_node -> . ID DOT ID
    (31) string_node -> . FLOOR BULLET FLOOR
    (32) suffix_node -> . L_PAREN SUFFIX R_PAREN

    PREFIX          shift and go to state 8
    NUMBER          shift and go to state 9
    ID              shift and go to state 10
    FLOOR           shift and go to state 11
    L_PAREN         shift and go to state 3

    node                           shift and go to state 45
    node_list                      shift and go to state 46
    bullet_list                    shift and go to state 47
    range_node                     shift and go to state 4
    num_node                       shift and go to state 5
    string_node                    shift and go to state 6
    suffix_node                    shift and go to state 7

state 40

    (2) node -> node L_PAREN node_list R_PAREN .
    (4) node -> node L_PAREN node_list R_PAREN . EXCLUDE

  ! shift/reduce conflict for EXCLUDE resolved as shift
    L_PAREN         reduce using rule 2 (node -> node L_PAREN node_list R_PAREN .)
    WAVE_DASH       reduce using rule 2 (node -> node L_PAREN node_list R_PAREN .)
    PREFIX          reduce using rule 2 (node -> node L_PAREN node_list R_PAREN .)
    NUMBER          reduce using rule 2 (node -> node L_PAREN node_list R_PAREN .)
    ID              reduce using rule 2 (node -> node L_PAREN node_list R_PAREN .)
    FLOOR           reduce using rule 2 (node -> node L_PAREN node_list R_PAREN .)
    $end            reduce using rule 2 (node -> node L_PAREN node_list R_PAREN .)
    BULLET          reduce using rule 2 (node -> node L_PAREN node_list R_PAREN .)
    COMMA           reduce using rule 2 (node -> node L_PAREN node_list R_PAREN .)
    R_PAREN         reduce using rule 2 (node -> node L_PAREN node_list R_PAREN .)
    EXCLUDE         shift and go to state 48

  ! EXCLUDE         [ reduce using rule 2 (node -> node L_PAREN node_list R_PAREN .) ]


state 41

    (3) node -> node L_PAREN node_list EXCLUDE . R_PAREN

    R_PAREN         shift and go to state 49


state 42

    (10) node -> node L_PAREN bullet_list R_PAREN .

    L_PAREN         reduce using rule 10 (node -> node L_PAREN bullet_list R_PAREN .)
    WAVE_DASH       reduce using rule 10 (node -> node L_PAREN bullet_list R_PAREN .)
    PREFIX          reduce using rule 10 (node -> node L_PAREN bullet_list R_PAREN .)
    NUMBER          reduce using rule 10 (node -> node L_PAREN bullet_list R_PAREN .)
    ID              reduce using rule 10 (node -> node L_PAREN bullet_list R_PAREN .)
    FLOOR           reduce using rule 10 (node -> node L_PAREN bullet_list R_PAREN .)
    $end            reduce using rule 10 (node -> node L_PAREN bullet_list R_PAREN .)
    BULLET          reduce using rule 10 (node -> node L_PAREN bullet_list R_PAREN .)
    COMMA           reduce using rule 10 (node -> node L_PAREN bullet_list R_PAREN .)
    R_PAREN         reduce using rule 10 (node -> node L_PAREN bullet_list R_PAREN .)
    EXCLUDE         reduce using rule 10 (node -> node L_PAREN bullet_list R_PAREN .)


state 43

    (7) node_list -> bullet_list COMMA . node_list
    (5) node_list -> . node COMMA node_list
    (6) node_list -> . node
    (7) node_list -> . bullet_list COMMA node_list
    (8) node_list -> . bullet_list
    (2) node -> . node L_PAREN node_list R_PAREN
    (3) node -> . node L_PAREN node_list EXCLUDE R_PAREN
    (4) node -> . node L_PAREN node_list R_PAREN EXCLUDE
    (9) node -> . node bullet_list
    (10) node -> . node L_PAREN bullet_list R_PAREN
    (15) node -> . node node
    (17) node -> . range_node
    (18) node -> . num_node
    (19) node -> . string_node
    (20) node -> . suffix_node
    (11) bullet_list -> . node BULLET bullet_list
    (12) bullet_list -> . node
    (14) range_node -> . node WAVE_DASH node
    (13) num_node -> . num_node THEN num_node
    (16) num_node -> . num_node HYPHEN num_node
    (21) num_node -> . PREFIX NUMBER
    (22) num_node -> . PREFIX NUMBER SUFFIX
    (23) num_node -> . PREFIX NUMBER SUFFIX COMPARATIVE_SUFFIX
    (24) num_node -> . NUMBER SUFFIX
    (25) num_node -> . NUMBER SUFFIX COMPARATIVE_SUFFIX
    (26) num_node -> . NUMBER
    (27) num_node -> . NUMBER COMPARATIVE_SUFFIX
    (28) num_node -> . PREFIX NUMBER COMPARATIVE_SUFFIX
    (29) string_node -> . ID
    (30) string_node -> . ID DOT ID
    (31) string_node -> . FLOOR BULLET FLOOR
    (32) suffix_node -> . L_PAREN SUFFIX R_PAREN

    PREFIX          shift and go to state 8
    NUMBER          shift and go to state 9
    ID              shift and go to state 10
    FLOOR           shift and go to state 11
    L_PAREN         shift and go to state 3

    bullet_list                    shift and go to state 47
    node_list                      shift and go to state 50
    node                           shift and go to state 45
    range_node                     shift and go to state 4
    num_node                       shift and go to state 5
    string_node                    shift and go to state 6
    suffix_node                    shift and go to state 7

state 44

    (23) num_node -> PREFIX NUMBER SUFFIX COMPARATIVE_SUFFIX .

    THEN            reduce using rule 23 (num_node -> PREFIX NUMBER SUFFIX COMPARATIVE_SUFFIX .)
    HYPHEN          reduce using rule 23 (num_node -> PREFIX NUMBER SUFFIX COMPARATIVE_SUFFIX .)
    L_PAREN         reduce using rule 23 (num_node -> PREFIX NUMBER SUFFIX COMPARATIVE_SUFFIX .)
    WAVE_DASH       reduce using rule 23 (num_node -> PREFIX NUMBER SUFFIX COMPARATIVE_SUFFIX .)
    PREFIX          reduce using rule 23 (num_node -> PREFIX NUMBER SUFFIX COMPARATIVE_SUFFIX .)
    NUMBER          reduce using rule 23 (num_node -> PREFIX NUMBER SUFFIX COMPARATIVE_SUFFIX .)
    ID              reduce using rule 23 (num_node -> PREFIX NUMBER SUFFIX COMPARATIVE_SUFFIX .)
    FLOOR           reduce using rule 23 (num_node -> PREFIX NUMBER SUFFIX COMPARATIVE_SUFFIX .)
    $end            reduce using rule 23 (num_node -> PREFIX NUMBER SUFFIX COMPARATIVE_SUFFIX .)
    BULLET          reduce using rule 23 (num_node -> PREFIX NUMBER SUFFIX COMPARATIVE_SUFFIX .)
    COMMA           reduce using rule 23 (num_node -> PREFIX NUMBER SUFFIX COMPARATIVE_SUFFIX .)
    R_PAREN         reduce using rule 23 (num_node -> PREFIX NUMBER SUFFIX COMPARATIVE_SUFFIX .)
    EXCLUDE         reduce using rule 23 (num_node -> PREFIX NUMBER SUFFIX COMPARATIVE_SUFFIX .)


state 45

    (5) node_list -> node . COMMA node_list
    (6) node_list -> node .
    (2) node -> node . L_PAREN node_list R_PAREN
    (3) node -> node . L_PAREN node_list EXCLUDE R_PAREN
    (4) node -> node . L_PAREN node_list R_PAREN EXCLUDE
    (9) node -> node . bullet_list
    (10) node -> node . L_PAREN bullet_list R_PAREN
    (15) node -> node . node
    (11) bullet_list -> node . BULLET bullet_list
    (12) bullet_list -> node .
    (14) range_node -> node . WAVE_DASH node
    (11) bullet_list -> . node BULLET bullet_list
    (12) bullet_list -> . node
    (2) node -> . node L_PAREN node_list R_PAREN
    (3) node -> . node L_PAREN node_list EXCLUDE R_PAREN
    (4) node -> . node L_PAREN node_list R_PAREN EXCLUDE
    (9) node -> . node bullet_list
    (10) node -> . node L_PAREN bullet_list R_PAREN
    (15) node -> . node node
    (17) node -> . range_node
    (18) node -> . num_node
    (19) node -> . string_node
    (20) node -> . suffix_node
    (14) range_node -> . node WAVE_DASH node
    (13) num_node -> . num_node THEN num_node
    (16) num_node -> . num_node HYPHEN num_node
    (21) num_node -> . PREFIX NUMBER
    (22) num_node -> . PREFIX NUMBER SUFFIX
    (23) num_node -> . PREFIX NUMBER SUFFIX COMPARATIVE_SUFFIX
    (24) num_node -> . NUMBER SUFFIX
    (25) num_node -> . NUMBER SUFFIX COMPARATIVE_SUFFIX
    (26) num_node -> . NUMBER
    (27) num_node -> . NUMBER COMPARATIVE_SUFFIX
    (28) num_node -> . PREFIX NUMBER COMPARATIVE_SUFFIX
    (29) string_node -> . ID
    (30) string_node -> . ID DOT ID
    (31) string_node -> . FLOOR BULLET FLOOR
    (32) suffix_node -> . L_PAREN SUFFIX R_PAREN

  ! shift/reduce conflict for COMMA resolved as shift
  ! reduce/reduce conflict for R_PAREN resolved using rule 6 (node_list -> node .)
  ! reduce/reduce conflict for EXCLUDE resolved using rule 6 (node_list -> node .)
    COMMA           shift and go to state 39
    R_PAREN         reduce using rule 6 (node_list -> node .)
    EXCLUDE         reduce using rule 6 (node_list -> node .)
    L_PAREN         shift and go to state 13
    BULLET          shift and go to state 24
    WAVE_DASH       shift and go to state 15
    PREFIX          shift and go to state 8
    NUMBER          shift and go to state 9
    ID              shift and go to state 10
    FLOOR           shift and go to state 11

  ! COMMA           [ reduce using rule 12 (bullet_list -> node .) ]
  ! R_PAREN         [ reduce using rule 12 (bullet_list -> node .) ]
  ! EXCLUDE         [ reduce using rule 12 (bullet_list -> node .) ]

    node                           shift and go to state 12
    bullet_list                    shift and go to state 14
    range_node                     shift and go to state 4
    num_node                       shift and go to state 5
    string_node                    shift and go to state 6
    suffix_node                    shift and go to state 7

state 46

    (5) node_list -> node COMMA node_list .

    R_PAREN         reduce using rule 5 (node_list -> node COMMA node_list .)
    EXCLUDE         reduce using rule 5 (node_list -> node COMMA node_list .)


state 47

    (7) node_list -> bullet_list . COMMA node_list
    (8) node_list -> bullet_list .

    COMMA           shift and go to state 43
    R_PAREN         reduce using rule 8 (node_list -> bullet_list .)
    EXCLUDE         reduce using rule 8 (node_list -> bullet_list .)


state 48

    (4) node -> node L_PAREN node_list R_PAREN EXCLUDE .

    L_PAREN         reduce using rule 4 (node -> node L_PAREN node_list R_PAREN EXCLUDE .)
    WAVE_DASH       reduce using rule 4 (node -> node L_PAREN node_list R_PAREN EXCLUDE .)
    PREFIX          reduce using rule 4 (node -> node L_PAREN node_list R_PAREN EXCLUDE .)
    NUMBER          reduce using rule 4 (node -> node L_PAREN node_list R_PAREN EXCLUDE .)
    ID              reduce using rule 4 (node -> node L_PAREN node_list R_PAREN EXCLUDE .)
    FLOOR           reduce using rule 4 (node -> node L_PAREN node_list R_PAREN EXCLUDE .)
    $end            reduce using rule 4 (node -> node L_PAREN node_list R_PAREN EXCLUDE .)
    BULLET          reduce using rule 4 (node -> node L_PAREN node_list R_PAREN EXCLUDE .)
    COMMA           reduce using rule 4 (node -> node L_PAREN node_list R_PAREN EXCLUDE .)
    R_PAREN         reduce using rule 4 (node -> node L_PAREN node_list R_PAREN EXCLUDE .)
    EXCLUDE         reduce using rule 4 (node -> node L_PAREN node_list R_PAREN EXCLUDE .)


state 49

    (3) node -> node L_PAREN node_list EXCLUDE R_PAREN .

    L_PAREN         reduce using rule 3 (node -> node L_PAREN node_list EXCLUDE R_PAREN .)
    WAVE_DASH       reduce using rule 3 (node -> node L_PAREN node_list EXCLUDE R_PAREN .)
    PREFIX          reduce using rule 3 (node -> node L_PAREN node_list EXCLUDE R_PAREN .)
    NUMBER          reduce using rule 3 (node -> node L_PAREN node_list EXCLUDE R_PAREN .)
    ID              reduce using rule 3 (node -> node L_PAREN node_list EXCLUDE R_PAREN .)
    FLOOR           reduce using rule 3 (node -> node L_PAREN node_list EXCLUDE R_PAREN .)
    $end            reduce using rule 3 (node -> node L_PAREN node_list EXCLUDE R_PAREN .)
    BULLET          reduce using rule 3 (node -> node L_PAREN node_list EXCLUDE R_PAREN .)
    COMMA           reduce using rule 3 (node -> node L_PAREN node_list EXCLUDE R_PAREN .)
    R_PAREN         reduce using rule 3 (node -> node L_PAREN node_list EXCLUDE R_PAREN .)
    EXCLUDE         reduce using rule 3 (node -> node L_PAREN node_list EXCLUDE R_PAREN .)


state 50

    (7) node_list -> bullet_list COMMA node_list .

    R_PAREN         reduce using rule 7 (node_list -> bullet_list COMMA node_list .)
    EXCLUDE         reduce using rule 7 (node_list -> bullet_list COMMA node_list .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for BULLET in state 12 resolved as shift
WARNING: shift/reduce conflict for BULLET in state 12 resolved as shift
WARNING: shift/reduce conflict for L_PAREN in state 12 resolved as shift
WARNING: shift/reduce conflict for WAVE_DASH in state 12 resolved as shift
WARNING: shift/reduce conflict for PREFIX in state 12 resolved as shift
WARNING: shift/reduce conflict for NUMBER in state 12 resolved as shift
WARNING: shift/reduce conflict for ID in state 12 resolved as shift
WARNING: shift/reduce conflict for FLOOR in state 12 resolved as shift
WARNING: shift/reduce conflict for COMMA in state 25 resolved as shift
WARNING: shift/reduce conflict for R_PAREN in state 27 resolved as shift
WARNING: shift/reduce conflict for L_PAREN in state 28 resolved as shift
WARNING: shift/reduce conflict for WAVE_DASH in state 28 resolved as shift
WARNING: shift/reduce conflict for PREFIX in state 28 resolved as shift
WARNING: shift/reduce conflict for NUMBER in state 28 resolved as shift
WARNING: shift/reduce conflict for ID in state 28 resolved as shift
WARNING: shift/reduce conflict for FLOOR in state 28 resolved as shift
WARNING: shift/reduce conflict for THEN in state 30 resolved as shift
WARNING: shift/reduce conflict for HYPHEN in state 30 resolved as shift
WARNING: shift/reduce conflict for THEN in state 31 resolved as shift
WARNING: shift/reduce conflict for HYPHEN in state 31 resolved as shift
WARNING: shift/reduce conflict for BULLET in state 37 resolved as shift
WARNING: shift/reduce conflict for L_PAREN in state 37 resolved as shift
WARNING: shift/reduce conflict for WAVE_DASH in state 37 resolved as shift
WARNING: shift/reduce conflict for PREFIX in state 37 resolved as shift
WARNING: shift/reduce conflict for NUMBER in state 37 resolved as shift
WARNING: shift/reduce conflict for ID in state 37 resolved as shift
WARNING: shift/reduce conflict for FLOOR in state 37 resolved as shift
WARNING: shift/reduce conflict for EXCLUDE in state 40 resolved as shift
WARNING: shift/reduce conflict for COMMA in state 45 resolved as shift
WARNING: reduce/reduce conflict in state 12 resolved using rule (bullet_list -> node)
WARNING: rejected rule (node -> node node) in state 12
WARNING: reduce/reduce conflict in state 25 resolved using rule (node_list -> node)
WARNING: rejected rule (bullet_list -> node) in state 25
WARNING: reduce/reduce conflict in state 45 resolved using rule (node_list -> node)
WARNING: rejected rule (bullet_list -> node) in state 45
WARNING: Rule (node -> node node) is never reduced
