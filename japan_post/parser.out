Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> choiki
Rule 1     choiki -> node_list
Rule 2     node -> node L_PAREN node_list R_PAREN
Rule 3     node -> node L_PAREN node_list EXCLUDE R_PAREN
Rule 4     node -> node L_PAREN node_list R_PAREN EXCLUDE
Rule 5     node_list -> node COMMA node_list
Rule 6     node_list -> node
Rule 7     node_list -> bullet_list COMMA node_list
Rule 8     node_list -> bullet_list
Rule 9     node -> node bullet_list
Rule 10    node -> node L_PAREN bullet_list R_PAREN
Rule 11    bullet_list -> node BULLET bullet_list
Rule 12    bullet_list -> node
Rule 13    num_node -> num_node THEN num_node
Rule 14    range_node -> node WAVE_DASH node
Rule 15    node -> node node
Rule 16    num_node -> num_node HYPHEN num_node
Rule 17    node -> range_node
Rule 18    node -> num_node
Rule 19    node -> string_node
Rule 20    node -> suffix_node
Rule 21    num_node -> PREFIX NUMBER
Rule 22    num_node -> PREFIX NUMBER SUFFIX
Rule 23    num_node -> PREFIX NUMBER SUFFIX COMPARATIVE_SUFFIX
Rule 24    num_node -> NUMBER SUFFIX
Rule 25    num_node -> NUMBER SUFFIX COMPARATIVE_SUFFIX
Rule 26    num_node -> NUMBER
Rule 27    num_node -> NUMBER COMPARATIVE_SUFFIX
Rule 28    num_node -> PREFIX NUMBER COMPARATIVE_SUFFIX
Rule 29    string_node -> ID NUMBER
Rule 30    string_node -> ID NUMBER SUFFIX
Rule 31    string_node -> ID
Rule 32    string_node -> ID DOT ID
Rule 33    string_node -> FLOOR BULLET FLOOR
Rule 34    suffix_node -> L_PAREN SUFFIX R_PAREN

Terminals, with rules where they appear

BULLET               : 11 33
COMMA                : 5 7
COMPARATIVE_SUFFIX   : 23 25 27 28
DOT                  : 32
EXCLUDE              : 3 4
FLOOR                : 33 33
HYPHEN               : 16
ID                   : 29 30 31 32 32
L_PAREN              : 2 3 4 10 34
NUMBER               : 21 22 23 24 25 26 27 28 29 30
PREFIX               : 21 22 23 28
R_PAREN              : 2 3 4 10 34
SUFFIX               : 22 23 24 25 30 34
THEN                 : 13
WAVE_DASH            : 14
error                : 

Nonterminals, with rules where they appear

bullet_list          : 7 8 9 10 11
choiki               : 0
node                 : 2 3 4 5 6 9 10 11 12 14 14 15 15
node_list            : 1 2 3 4 5 7
num_node             : 13 13 16 16 18
range_node           : 17
string_node          : 19
suffix_node          : 20

Parsing method: LALR

state 0

    (0) S' -> . choiki
    (1) choiki -> . node_list
    (5) node_list -> . node COMMA node_list
    (6) node_list -> . node
    (7) node_list -> . bullet_list COMMA node_list
    (8) node_list -> . bullet_list
    (2) node -> . node L_PAREN node_list R_PAREN
    (3) node -> . node L_PAREN node_list EXCLUDE R_PAREN
    (4) node -> . node L_PAREN node_list R_PAREN EXCLUDE
    (9) node -> . node bullet_list
    (10) node -> . node L_PAREN bullet_list R_PAREN
    (15) node -> . node node
    (17) node -> . range_node
    (18) node -> . num_node
    (19) node -> . string_node
    (20) node -> . suffix_node
    (11) bullet_list -> . node BULLET bullet_list
    (12) bullet_list -> . node
    (14) range_node -> . node WAVE_DASH node
    (13) num_node -> . num_node THEN num_node
    (16) num_node -> . num_node HYPHEN num_node
    (21) num_node -> . PREFIX NUMBER
    (22) num_node -> . PREFIX NUMBER SUFFIX
    (23) num_node -> . PREFIX NUMBER SUFFIX COMPARATIVE_SUFFIX
    (24) num_node -> . NUMBER SUFFIX
    (25) num_node -> . NUMBER SUFFIX COMPARATIVE_SUFFIX
    (26) num_node -> . NUMBER
    (27) num_node -> . NUMBER COMPARATIVE_SUFFIX
    (28) num_node -> . PREFIX NUMBER COMPARATIVE_SUFFIX
    (29) string_node -> . ID NUMBER
    (30) string_node -> . ID NUMBER SUFFIX
    (31) string_node -> . ID
    (32) string_node -> . ID DOT ID
    (33) string_node -> . FLOOR BULLET FLOOR
    (34) suffix_node -> . L_PAREN SUFFIX R_PAREN

    PREFIX          shift and go to state 10
    NUMBER          shift and go to state 11
    ID              shift and go to state 12
    FLOOR           shift and go to state 13
    L_PAREN         shift and go to state 5

    choiki                         shift and go to state 1
    node_list                      shift and go to state 2
    node                           shift and go to state 3
    bullet_list                    shift and go to state 4
    range_node                     shift and go to state 6
    num_node                       shift and go to state 7
    string_node                    shift and go to state 8
    suffix_node                    shift and go to state 9

state 1

    (0) S' -> choiki .



state 2

    (1) choiki -> node_list .

    $end            reduce using rule 1 (choiki -> node_list .)


state 3

    (5) node_list -> node . COMMA node_list
    (6) node_list -> node .
    (2) node -> node . L_PAREN node_list R_PAREN
    (3) node -> node . L_PAREN node_list EXCLUDE R_PAREN
    (4) node -> node . L_PAREN node_list R_PAREN EXCLUDE
    (9) node -> node . bullet_list
    (10) node -> node . L_PAREN bullet_list R_PAREN
    (15) node -> node . node
    (11) bullet_list -> node . BULLET bullet_list
    (12) bullet_list -> node .
    (14) range_node -> node . WAVE_DASH node
    (11) bullet_list -> . node BULLET bullet_list
    (12) bullet_list -> . node
    (2) node -> . node L_PAREN node_list R_PAREN
    (3) node -> . node L_PAREN node_list EXCLUDE R_PAREN
    (4) node -> . node L_PAREN node_list R_PAREN EXCLUDE
    (9) node -> . node bullet_list
    (10) node -> . node L_PAREN bullet_list R_PAREN
    (15) node -> . node node
    (17) node -> . range_node
    (18) node -> . num_node
    (19) node -> . string_node
    (20) node -> . suffix_node
    (14) range_node -> . node WAVE_DASH node
    (13) num_node -> . num_node THEN num_node
    (16) num_node -> . num_node HYPHEN num_node
    (21) num_node -> . PREFIX NUMBER
    (22) num_node -> . PREFIX NUMBER SUFFIX
    (23) num_node -> . PREFIX NUMBER SUFFIX COMPARATIVE_SUFFIX
    (24) num_node -> . NUMBER SUFFIX
    (25) num_node -> . NUMBER SUFFIX COMPARATIVE_SUFFIX
    (26) num_node -> . NUMBER
    (27) num_node -> . NUMBER COMPARATIVE_SUFFIX
    (28) num_node -> . PREFIX NUMBER COMPARATIVE_SUFFIX
    (29) string_node -> . ID NUMBER
    (30) string_node -> . ID NUMBER SUFFIX
    (31) string_node -> . ID
    (32) string_node -> . ID DOT ID
    (33) string_node -> . FLOOR BULLET FLOOR
    (34) suffix_node -> . L_PAREN SUFFIX R_PAREN

  ! shift/reduce conflict for COMMA resolved as shift
  ! reduce/reduce conflict for $end resolved using rule 6 (node_list -> node .)
  ! reduce/reduce conflict for R_PAREN resolved using rule 6 (node_list -> node .)
  ! reduce/reduce conflict for EXCLUDE resolved using rule 6 (node_list -> node .)
    COMMA           shift and go to state 15
    $end            reduce using rule 6 (node_list -> node .)
    R_PAREN         reduce using rule 6 (node_list -> node .)
    EXCLUDE         reduce using rule 6 (node_list -> node .)
    L_PAREN         shift and go to state 16
    BULLET          shift and go to state 18
    WAVE_DASH       shift and go to state 19
    PREFIX          shift and go to state 10
    NUMBER          shift and go to state 11
    ID              shift and go to state 12
    FLOOR           shift and go to state 13

  ! COMMA           [ reduce using rule 12 (bullet_list -> node .) ]
  ! $end            [ reduce using rule 12 (bullet_list -> node .) ]
  ! R_PAREN         [ reduce using rule 12 (bullet_list -> node .) ]
  ! EXCLUDE         [ reduce using rule 12 (bullet_list -> node .) ]

    node                           shift and go to state 14
    bullet_list                    shift and go to state 17
    range_node                     shift and go to state 6
    num_node                       shift and go to state 7
    string_node                    shift and go to state 8
    suffix_node                    shift and go to state 9

state 4

    (7) node_list -> bullet_list . COMMA node_list
    (8) node_list -> bullet_list .

    COMMA           shift and go to state 20
    $end            reduce using rule 8 (node_list -> bullet_list .)
    R_PAREN         reduce using rule 8 (node_list -> bullet_list .)
    EXCLUDE         reduce using rule 8 (node_list -> bullet_list .)


state 5

    (34) suffix_node -> L_PAREN . SUFFIX R_PAREN

    SUFFIX          shift and go to state 21


state 6

    (17) node -> range_node .

    COMMA           reduce using rule 17 (node -> range_node .)
    L_PAREN         reduce using rule 17 (node -> range_node .)
    BULLET          reduce using rule 17 (node -> range_node .)
    WAVE_DASH       reduce using rule 17 (node -> range_node .)
    PREFIX          reduce using rule 17 (node -> range_node .)
    NUMBER          reduce using rule 17 (node -> range_node .)
    ID              reduce using rule 17 (node -> range_node .)
    FLOOR           reduce using rule 17 (node -> range_node .)
    $end            reduce using rule 17 (node -> range_node .)
    R_PAREN         reduce using rule 17 (node -> range_node .)
    EXCLUDE         reduce using rule 17 (node -> range_node .)


state 7

    (18) node -> num_node .
    (13) num_node -> num_node . THEN num_node
    (16) num_node -> num_node . HYPHEN num_node

    COMMA           reduce using rule 18 (node -> num_node .)
    L_PAREN         reduce using rule 18 (node -> num_node .)
    BULLET          reduce using rule 18 (node -> num_node .)
    WAVE_DASH       reduce using rule 18 (node -> num_node .)
    PREFIX          reduce using rule 18 (node -> num_node .)
    NUMBER          reduce using rule 18 (node -> num_node .)
    ID              reduce using rule 18 (node -> num_node .)
    FLOOR           reduce using rule 18 (node -> num_node .)
    $end            reduce using rule 18 (node -> num_node .)
    R_PAREN         reduce using rule 18 (node -> num_node .)
    EXCLUDE         reduce using rule 18 (node -> num_node .)
    THEN            shift and go to state 22
    HYPHEN          shift and go to state 23


state 8

    (19) node -> string_node .

    COMMA           reduce using rule 19 (node -> string_node .)
    L_PAREN         reduce using rule 19 (node -> string_node .)
    BULLET          reduce using rule 19 (node -> string_node .)
    WAVE_DASH       reduce using rule 19 (node -> string_node .)
    PREFIX          reduce using rule 19 (node -> string_node .)
    NUMBER          reduce using rule 19 (node -> string_node .)
    ID              reduce using rule 19 (node -> string_node .)
    FLOOR           reduce using rule 19 (node -> string_node .)
    $end            reduce using rule 19 (node -> string_node .)
    R_PAREN         reduce using rule 19 (node -> string_node .)
    EXCLUDE         reduce using rule 19 (node -> string_node .)


state 9

    (20) node -> suffix_node .

    COMMA           reduce using rule 20 (node -> suffix_node .)
    L_PAREN         reduce using rule 20 (node -> suffix_node .)
    BULLET          reduce using rule 20 (node -> suffix_node .)
    WAVE_DASH       reduce using rule 20 (node -> suffix_node .)
    PREFIX          reduce using rule 20 (node -> suffix_node .)
    NUMBER          reduce using rule 20 (node -> suffix_node .)
    ID              reduce using rule 20 (node -> suffix_node .)
    FLOOR           reduce using rule 20 (node -> suffix_node .)
    $end            reduce using rule 20 (node -> suffix_node .)
    R_PAREN         reduce using rule 20 (node -> suffix_node .)
    EXCLUDE         reduce using rule 20 (node -> suffix_node .)


state 10

    (21) num_node -> PREFIX . NUMBER
    (22) num_node -> PREFIX . NUMBER SUFFIX
    (23) num_node -> PREFIX . NUMBER SUFFIX COMPARATIVE_SUFFIX
    (28) num_node -> PREFIX . NUMBER COMPARATIVE_SUFFIX

    NUMBER          shift and go to state 24


state 11

    (24) num_node -> NUMBER . SUFFIX
    (25) num_node -> NUMBER . SUFFIX COMPARATIVE_SUFFIX
    (26) num_node -> NUMBER .
    (27) num_node -> NUMBER . COMPARATIVE_SUFFIX

    SUFFIX          shift and go to state 25
    THEN            reduce using rule 26 (num_node -> NUMBER .)
    HYPHEN          reduce using rule 26 (num_node -> NUMBER .)
    COMMA           reduce using rule 26 (num_node -> NUMBER .)
    L_PAREN         reduce using rule 26 (num_node -> NUMBER .)
    BULLET          reduce using rule 26 (num_node -> NUMBER .)
    WAVE_DASH       reduce using rule 26 (num_node -> NUMBER .)
    PREFIX          reduce using rule 26 (num_node -> NUMBER .)
    NUMBER          reduce using rule 26 (num_node -> NUMBER .)
    ID              reduce using rule 26 (num_node -> NUMBER .)
    FLOOR           reduce using rule 26 (num_node -> NUMBER .)
    $end            reduce using rule 26 (num_node -> NUMBER .)
    R_PAREN         reduce using rule 26 (num_node -> NUMBER .)
    EXCLUDE         reduce using rule 26 (num_node -> NUMBER .)
    COMPARATIVE_SUFFIX shift and go to state 26


state 12

    (29) string_node -> ID . NUMBER
    (30) string_node -> ID . NUMBER SUFFIX
    (31) string_node -> ID .
    (32) string_node -> ID . DOT ID

  ! shift/reduce conflict for NUMBER resolved as shift
    NUMBER          shift and go to state 27
    COMMA           reduce using rule 31 (string_node -> ID .)
    L_PAREN         reduce using rule 31 (string_node -> ID .)
    BULLET          reduce using rule 31 (string_node -> ID .)
    WAVE_DASH       reduce using rule 31 (string_node -> ID .)
    PREFIX          reduce using rule 31 (string_node -> ID .)
    ID              reduce using rule 31 (string_node -> ID .)
    FLOOR           reduce using rule 31 (string_node -> ID .)
    $end            reduce using rule 31 (string_node -> ID .)
    R_PAREN         reduce using rule 31 (string_node -> ID .)
    EXCLUDE         reduce using rule 31 (string_node -> ID .)
    DOT             shift and go to state 28

  ! NUMBER          [ reduce using rule 31 (string_node -> ID .) ]


state 13

    (33) string_node -> FLOOR . BULLET FLOOR

    BULLET          shift and go to state 29


state 14

    (15) node -> node node .
    (11) bullet_list -> node . BULLET bullet_list
    (12) bullet_list -> node .
    (2) node -> node . L_PAREN node_list R_PAREN
    (3) node -> node . L_PAREN node_list EXCLUDE R_PAREN
    (4) node -> node . L_PAREN node_list R_PAREN EXCLUDE
    (9) node -> node . bullet_list
    (10) node -> node . L_PAREN bullet_list R_PAREN
    (15) node -> node . node
    (14) range_node -> node . WAVE_DASH node
    (11) bullet_list -> . node BULLET bullet_list
    (12) bullet_list -> . node
    (2) node -> . node L_PAREN node_list R_PAREN
    (3) node -> . node L_PAREN node_list EXCLUDE R_PAREN
    (4) node -> . node L_PAREN node_list R_PAREN EXCLUDE
    (9) node -> . node bullet_list
    (10) node -> . node L_PAREN bullet_list R_PAREN
    (15) node -> . node node
    (17) node -> . range_node
    (18) node -> . num_node
    (19) node -> . string_node
    (20) node -> . suffix_node
    (14) range_node -> . node WAVE_DASH node
    (13) num_node -> . num_node THEN num_node
    (16) num_node -> . num_node HYPHEN num_node
    (21) num_node -> . PREFIX NUMBER
    (22) num_node -> . PREFIX NUMBER SUFFIX
    (23) num_node -> . PREFIX NUMBER SUFFIX COMPARATIVE_SUFFIX
    (24) num_node -> . NUMBER SUFFIX
    (25) num_node -> . NUMBER SUFFIX COMPARATIVE_SUFFIX
    (26) num_node -> . NUMBER
    (27) num_node -> . NUMBER COMPARATIVE_SUFFIX
    (28) num_node -> . PREFIX NUMBER COMPARATIVE_SUFFIX
    (29) string_node -> . ID NUMBER
    (30) string_node -> . ID NUMBER SUFFIX
    (31) string_node -> . ID
    (32) string_node -> . ID DOT ID
    (33) string_node -> . FLOOR BULLET FLOOR
    (34) suffix_node -> . L_PAREN SUFFIX R_PAREN

  ! shift/reduce conflict for BULLET resolved as shift
  ! reduce/reduce conflict for COMMA resolved using rule 12 (bullet_list -> node .)
  ! reduce/reduce conflict for L_PAREN resolved using rule 12 (bullet_list -> node .)
  ! shift/reduce conflict for BULLET resolved as shift
  ! reduce/reduce conflict for WAVE_DASH resolved using rule 12 (bullet_list -> node .)
  ! reduce/reduce conflict for PREFIX resolved using rule 12 (bullet_list -> node .)
  ! reduce/reduce conflict for NUMBER resolved using rule 12 (bullet_list -> node .)
  ! reduce/reduce conflict for ID resolved using rule 12 (bullet_list -> node .)
  ! reduce/reduce conflict for FLOOR resolved using rule 12 (bullet_list -> node .)
  ! reduce/reduce conflict for $end resolved using rule 12 (bullet_list -> node .)
  ! reduce/reduce conflict for R_PAREN resolved using rule 12 (bullet_list -> node .)
  ! reduce/reduce conflict for EXCLUDE resolved using rule 12 (bullet_list -> node .)
  ! shift/reduce conflict for L_PAREN resolved as shift
  ! shift/reduce conflict for WAVE_DASH resolved as shift
  ! shift/reduce conflict for PREFIX resolved as shift
  ! shift/reduce conflict for NUMBER resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for FLOOR resolved as shift
    BULLET          shift and go to state 18
    COMMA           reduce using rule 12 (bullet_list -> node .)
    $end            reduce using rule 12 (bullet_list -> node .)
    R_PAREN         reduce using rule 12 (bullet_list -> node .)
    EXCLUDE         reduce using rule 12 (bullet_list -> node .)
    L_PAREN         shift and go to state 16
    WAVE_DASH       shift and go to state 19
    PREFIX          shift and go to state 10
    NUMBER          shift and go to state 11
    ID              shift and go to state 12
    FLOOR           shift and go to state 13

  ! COMMA           [ reduce using rule 15 (node -> node node .) ]
  ! L_PAREN         [ reduce using rule 15 (node -> node node .) ]
  ! BULLET          [ reduce using rule 15 (node -> node node .) ]
  ! WAVE_DASH       [ reduce using rule 15 (node -> node node .) ]
  ! PREFIX          [ reduce using rule 15 (node -> node node .) ]
  ! NUMBER          [ reduce using rule 15 (node -> node node .) ]
  ! ID              [ reduce using rule 15 (node -> node node .) ]
  ! FLOOR           [ reduce using rule 15 (node -> node node .) ]
  ! $end            [ reduce using rule 15 (node -> node node .) ]
  ! R_PAREN         [ reduce using rule 15 (node -> node node .) ]
  ! EXCLUDE         [ reduce using rule 15 (node -> node node .) ]
  ! L_PAREN         [ reduce using rule 12 (bullet_list -> node .) ]
  ! BULLET          [ reduce using rule 12 (bullet_list -> node .) ]
  ! WAVE_DASH       [ reduce using rule 12 (bullet_list -> node .) ]
  ! PREFIX          [ reduce using rule 12 (bullet_list -> node .) ]
  ! NUMBER          [ reduce using rule 12 (bullet_list -> node .) ]
  ! ID              [ reduce using rule 12 (bullet_list -> node .) ]
  ! FLOOR           [ reduce using rule 12 (bullet_list -> node .) ]

    node                           shift and go to state 14
    bullet_list                    shift and go to state 17
    range_node                     shift and go to state 6
    num_node                       shift and go to state 7
    string_node                    shift and go to state 8
    suffix_node                    shift and go to state 9

state 15

    (5) node_list -> node COMMA . node_list
    (5) node_list -> . node COMMA node_list
    (6) node_list -> . node
    (7) node_list -> . bullet_list COMMA node_list
    (8) node_list -> . bullet_list
    (2) node -> . node L_PAREN node_list R_PAREN
    (3) node -> . node L_PAREN node_list EXCLUDE R_PAREN
    (4) node -> . node L_PAREN node_list R_PAREN EXCLUDE
    (9) node -> . node bullet_list
    (10) node -> . node L_PAREN bullet_list R_PAREN
    (15) node -> . node node
    (17) node -> . range_node
    (18) node -> . num_node
    (19) node -> . string_node
    (20) node -> . suffix_node
    (11) bullet_list -> . node BULLET bullet_list
    (12) bullet_list -> . node
    (14) range_node -> . node WAVE_DASH node
    (13) num_node -> . num_node THEN num_node
    (16) num_node -> . num_node HYPHEN num_node
    (21) num_node -> . PREFIX NUMBER
    (22) num_node -> . PREFIX NUMBER SUFFIX
    (23) num_node -> . PREFIX NUMBER SUFFIX COMPARATIVE_SUFFIX
    (24) num_node -> . NUMBER SUFFIX
    (25) num_node -> . NUMBER SUFFIX COMPARATIVE_SUFFIX
    (26) num_node -> . NUMBER
    (27) num_node -> . NUMBER COMPARATIVE_SUFFIX
    (28) num_node -> . PREFIX NUMBER COMPARATIVE_SUFFIX
    (29) string_node -> . ID NUMBER
    (30) string_node -> . ID NUMBER SUFFIX
    (31) string_node -> . ID
    (32) string_node -> . ID DOT ID
    (33) string_node -> . FLOOR BULLET FLOOR
    (34) suffix_node -> . L_PAREN SUFFIX R_PAREN

    PREFIX          shift and go to state 10
    NUMBER          shift and go to state 11
    ID              shift and go to state 12
    FLOOR           shift and go to state 13
    L_PAREN         shift and go to state 5

    node                           shift and go to state 3
    node_list                      shift and go to state 30
    bullet_list                    shift and go to state 4
    range_node                     shift and go to state 6
    num_node                       shift and go to state 7
    string_node                    shift and go to state 8
    suffix_node                    shift and go to state 9

state 16

    (2) node -> node L_PAREN . node_list R_PAREN
    (3) node -> node L_PAREN . node_list EXCLUDE R_PAREN
    (4) node -> node L_PAREN . node_list R_PAREN EXCLUDE
    (10) node -> node L_PAREN . bullet_list R_PAREN
    (34) suffix_node -> L_PAREN . SUFFIX R_PAREN
    (5) node_list -> . node COMMA node_list
    (6) node_list -> . node
    (7) node_list -> . bullet_list COMMA node_list
    (8) node_list -> . bullet_list
    (11) bullet_list -> . node BULLET bullet_list
    (12) bullet_list -> . node
    (2) node -> . node L_PAREN node_list R_PAREN
    (3) node -> . node L_PAREN node_list EXCLUDE R_PAREN
    (4) node -> . node L_PAREN node_list R_PAREN EXCLUDE
    (9) node -> . node bullet_list
    (10) node -> . node L_PAREN bullet_list R_PAREN
    (15) node -> . node node
    (17) node -> . range_node
    (18) node -> . num_node
    (19) node -> . string_node
    (20) node -> . suffix_node
    (14) range_node -> . node WAVE_DASH node
    (13) num_node -> . num_node THEN num_node
    (16) num_node -> . num_node HYPHEN num_node
    (21) num_node -> . PREFIX NUMBER
    (22) num_node -> . PREFIX NUMBER SUFFIX
    (23) num_node -> . PREFIX NUMBER SUFFIX COMPARATIVE_SUFFIX
    (24) num_node -> . NUMBER SUFFIX
    (25) num_node -> . NUMBER SUFFIX COMPARATIVE_SUFFIX
    (26) num_node -> . NUMBER
    (27) num_node -> . NUMBER COMPARATIVE_SUFFIX
    (28) num_node -> . PREFIX NUMBER COMPARATIVE_SUFFIX
    (29) string_node -> . ID NUMBER
    (30) string_node -> . ID NUMBER SUFFIX
    (31) string_node -> . ID
    (32) string_node -> . ID DOT ID
    (33) string_node -> . FLOOR BULLET FLOOR
    (34) suffix_node -> . L_PAREN SUFFIX R_PAREN

    SUFFIX          shift and go to state 21
    PREFIX          shift and go to state 10
    NUMBER          shift and go to state 11
    ID              shift and go to state 12
    FLOOR           shift and go to state 13
    L_PAREN         shift and go to state 5

    node                           shift and go to state 31
    node_list                      shift and go to state 32
    bullet_list                    shift and go to state 33
    range_node                     shift and go to state 6
    num_node                       shift and go to state 7
    string_node                    shift and go to state 8
    suffix_node                    shift and go to state 9

state 17

    (9) node -> node bullet_list .

    COMMA           reduce using rule 9 (node -> node bullet_list .)
    L_PAREN         reduce using rule 9 (node -> node bullet_list .)
    BULLET          reduce using rule 9 (node -> node bullet_list .)
    WAVE_DASH       reduce using rule 9 (node -> node bullet_list .)
    PREFIX          reduce using rule 9 (node -> node bullet_list .)
    NUMBER          reduce using rule 9 (node -> node bullet_list .)
    ID              reduce using rule 9 (node -> node bullet_list .)
    FLOOR           reduce using rule 9 (node -> node bullet_list .)
    $end            reduce using rule 9 (node -> node bullet_list .)
    R_PAREN         reduce using rule 9 (node -> node bullet_list .)
    EXCLUDE         reduce using rule 9 (node -> node bullet_list .)


state 18

    (11) bullet_list -> node BULLET . bullet_list
    (11) bullet_list -> . node BULLET bullet_list
    (12) bullet_list -> . node
    (2) node -> . node L_PAREN node_list R_PAREN
    (3) node -> . node L_PAREN node_list EXCLUDE R_PAREN
    (4) node -> . node L_PAREN node_list R_PAREN EXCLUDE
    (9) node -> . node bullet_list
    (10) node -> . node L_PAREN bullet_list R_PAREN
    (15) node -> . node node
    (17) node -> . range_node
    (18) node -> . num_node
    (19) node -> . string_node
    (20) node -> . suffix_node
    (14) range_node -> . node WAVE_DASH node
    (13) num_node -> . num_node THEN num_node
    (16) num_node -> . num_node HYPHEN num_node
    (21) num_node -> . PREFIX NUMBER
    (22) num_node -> . PREFIX NUMBER SUFFIX
    (23) num_node -> . PREFIX NUMBER SUFFIX COMPARATIVE_SUFFIX
    (24) num_node -> . NUMBER SUFFIX
    (25) num_node -> . NUMBER SUFFIX COMPARATIVE_SUFFIX
    (26) num_node -> . NUMBER
    (27) num_node -> . NUMBER COMPARATIVE_SUFFIX
    (28) num_node -> . PREFIX NUMBER COMPARATIVE_SUFFIX
    (29) string_node -> . ID NUMBER
    (30) string_node -> . ID NUMBER SUFFIX
    (31) string_node -> . ID
    (32) string_node -> . ID DOT ID
    (33) string_node -> . FLOOR BULLET FLOOR
    (34) suffix_node -> . L_PAREN SUFFIX R_PAREN

    PREFIX          shift and go to state 10
    NUMBER          shift and go to state 11
    ID              shift and go to state 12
    FLOOR           shift and go to state 13
    L_PAREN         shift and go to state 5

    node                           shift and go to state 34
    bullet_list                    shift and go to state 35
    range_node                     shift and go to state 6
    num_node                       shift and go to state 7
    string_node                    shift and go to state 8
    suffix_node                    shift and go to state 9

state 19

    (14) range_node -> node WAVE_DASH . node
    (2) node -> . node L_PAREN node_list R_PAREN
    (3) node -> . node L_PAREN node_list EXCLUDE R_PAREN
    (4) node -> . node L_PAREN node_list R_PAREN EXCLUDE
    (9) node -> . node bullet_list
    (10) node -> . node L_PAREN bullet_list R_PAREN
    (15) node -> . node node
    (17) node -> . range_node
    (18) node -> . num_node
    (19) node -> . string_node
    (20) node -> . suffix_node
    (14) range_node -> . node WAVE_DASH node
    (13) num_node -> . num_node THEN num_node
    (16) num_node -> . num_node HYPHEN num_node
    (21) num_node -> . PREFIX NUMBER
    (22) num_node -> . PREFIX NUMBER SUFFIX
    (23) num_node -> . PREFIX NUMBER SUFFIX COMPARATIVE_SUFFIX
    (24) num_node -> . NUMBER SUFFIX
    (25) num_node -> . NUMBER SUFFIX COMPARATIVE_SUFFIX
    (26) num_node -> . NUMBER
    (27) num_node -> . NUMBER COMPARATIVE_SUFFIX
    (28) num_node -> . PREFIX NUMBER COMPARATIVE_SUFFIX
    (29) string_node -> . ID NUMBER
    (30) string_node -> . ID NUMBER SUFFIX
    (31) string_node -> . ID
    (32) string_node -> . ID DOT ID
    (33) string_node -> . FLOOR BULLET FLOOR
    (34) suffix_node -> . L_PAREN SUFFIX R_PAREN

    PREFIX          shift and go to state 10
    NUMBER          shift and go to state 11
    ID              shift and go to state 12
    FLOOR           shift and go to state 13
    L_PAREN         shift and go to state 5

    node                           shift and go to state 36
    range_node                     shift and go to state 6
    num_node                       shift and go to state 7
    string_node                    shift and go to state 8
    suffix_node                    shift and go to state 9

state 20

    (7) node_list -> bullet_list COMMA . node_list
    (5) node_list -> . node COMMA node_list
    (6) node_list -> . node
    (7) node_list -> . bullet_list COMMA node_list
    (8) node_list -> . bullet_list
    (2) node -> . node L_PAREN node_list R_PAREN
    (3) node -> . node L_PAREN node_list EXCLUDE R_PAREN
    (4) node -> . node L_PAREN node_list R_PAREN EXCLUDE
    (9) node -> . node bullet_list
    (10) node -> . node L_PAREN bullet_list R_PAREN
    (15) node -> . node node
    (17) node -> . range_node
    (18) node -> . num_node
    (19) node -> . string_node
    (20) node -> . suffix_node
    (11) bullet_list -> . node BULLET bullet_list
    (12) bullet_list -> . node
    (14) range_node -> . node WAVE_DASH node
    (13) num_node -> . num_node THEN num_node
    (16) num_node -> . num_node HYPHEN num_node
    (21) num_node -> . PREFIX NUMBER
    (22) num_node -> . PREFIX NUMBER SUFFIX
    (23) num_node -> . PREFIX NUMBER SUFFIX COMPARATIVE_SUFFIX
    (24) num_node -> . NUMBER SUFFIX
    (25) num_node -> . NUMBER SUFFIX COMPARATIVE_SUFFIX
    (26) num_node -> . NUMBER
    (27) num_node -> . NUMBER COMPARATIVE_SUFFIX
    (28) num_node -> . PREFIX NUMBER COMPARATIVE_SUFFIX
    (29) string_node -> . ID NUMBER
    (30) string_node -> . ID NUMBER SUFFIX
    (31) string_node -> . ID
    (32) string_node -> . ID DOT ID
    (33) string_node -> . FLOOR BULLET FLOOR
    (34) suffix_node -> . L_PAREN SUFFIX R_PAREN

    PREFIX          shift and go to state 10
    NUMBER          shift and go to state 11
    ID              shift and go to state 12
    FLOOR           shift and go to state 13
    L_PAREN         shift and go to state 5

    bullet_list                    shift and go to state 4
    node_list                      shift and go to state 37
    node                           shift and go to state 3
    range_node                     shift and go to state 6
    num_node                       shift and go to state 7
    string_node                    shift and go to state 8
    suffix_node                    shift and go to state 9

state 21

    (34) suffix_node -> L_PAREN SUFFIX . R_PAREN

    R_PAREN         shift and go to state 38


state 22

    (13) num_node -> num_node THEN . num_node
    (13) num_node -> . num_node THEN num_node
    (16) num_node -> . num_node HYPHEN num_node
    (21) num_node -> . PREFIX NUMBER
    (22) num_node -> . PREFIX NUMBER SUFFIX
    (23) num_node -> . PREFIX NUMBER SUFFIX COMPARATIVE_SUFFIX
    (24) num_node -> . NUMBER SUFFIX
    (25) num_node -> . NUMBER SUFFIX COMPARATIVE_SUFFIX
    (26) num_node -> . NUMBER
    (27) num_node -> . NUMBER COMPARATIVE_SUFFIX
    (28) num_node -> . PREFIX NUMBER COMPARATIVE_SUFFIX

    PREFIX          shift and go to state 10
    NUMBER          shift and go to state 11

    num_node                       shift and go to state 39

state 23

    (16) num_node -> num_node HYPHEN . num_node
    (13) num_node -> . num_node THEN num_node
    (16) num_node -> . num_node HYPHEN num_node
    (21) num_node -> . PREFIX NUMBER
    (22) num_node -> . PREFIX NUMBER SUFFIX
    (23) num_node -> . PREFIX NUMBER SUFFIX COMPARATIVE_SUFFIX
    (24) num_node -> . NUMBER SUFFIX
    (25) num_node -> . NUMBER SUFFIX COMPARATIVE_SUFFIX
    (26) num_node -> . NUMBER
    (27) num_node -> . NUMBER COMPARATIVE_SUFFIX
    (28) num_node -> . PREFIX NUMBER COMPARATIVE_SUFFIX

    PREFIX          shift and go to state 10
    NUMBER          shift and go to state 11

    num_node                       shift and go to state 40

state 24

    (21) num_node -> PREFIX NUMBER .
    (22) num_node -> PREFIX NUMBER . SUFFIX
    (23) num_node -> PREFIX NUMBER . SUFFIX COMPARATIVE_SUFFIX
    (28) num_node -> PREFIX NUMBER . COMPARATIVE_SUFFIX

    THEN            reduce using rule 21 (num_node -> PREFIX NUMBER .)
    HYPHEN          reduce using rule 21 (num_node -> PREFIX NUMBER .)
    COMMA           reduce using rule 21 (num_node -> PREFIX NUMBER .)
    L_PAREN         reduce using rule 21 (num_node -> PREFIX NUMBER .)
    BULLET          reduce using rule 21 (num_node -> PREFIX NUMBER .)
    WAVE_DASH       reduce using rule 21 (num_node -> PREFIX NUMBER .)
    PREFIX          reduce using rule 21 (num_node -> PREFIX NUMBER .)
    NUMBER          reduce using rule 21 (num_node -> PREFIX NUMBER .)
    ID              reduce using rule 21 (num_node -> PREFIX NUMBER .)
    FLOOR           reduce using rule 21 (num_node -> PREFIX NUMBER .)
    $end            reduce using rule 21 (num_node -> PREFIX NUMBER .)
    R_PAREN         reduce using rule 21 (num_node -> PREFIX NUMBER .)
    EXCLUDE         reduce using rule 21 (num_node -> PREFIX NUMBER .)
    SUFFIX          shift and go to state 41
    COMPARATIVE_SUFFIX shift and go to state 42


state 25

    (24) num_node -> NUMBER SUFFIX .
    (25) num_node -> NUMBER SUFFIX . COMPARATIVE_SUFFIX

    THEN            reduce using rule 24 (num_node -> NUMBER SUFFIX .)
    HYPHEN          reduce using rule 24 (num_node -> NUMBER SUFFIX .)
    COMMA           reduce using rule 24 (num_node -> NUMBER SUFFIX .)
    L_PAREN         reduce using rule 24 (num_node -> NUMBER SUFFIX .)
    BULLET          reduce using rule 24 (num_node -> NUMBER SUFFIX .)
    WAVE_DASH       reduce using rule 24 (num_node -> NUMBER SUFFIX .)
    PREFIX          reduce using rule 24 (num_node -> NUMBER SUFFIX .)
    NUMBER          reduce using rule 24 (num_node -> NUMBER SUFFIX .)
    ID              reduce using rule 24 (num_node -> NUMBER SUFFIX .)
    FLOOR           reduce using rule 24 (num_node -> NUMBER SUFFIX .)
    $end            reduce using rule 24 (num_node -> NUMBER SUFFIX .)
    R_PAREN         reduce using rule 24 (num_node -> NUMBER SUFFIX .)
    EXCLUDE         reduce using rule 24 (num_node -> NUMBER SUFFIX .)
    COMPARATIVE_SUFFIX shift and go to state 43


state 26

    (27) num_node -> NUMBER COMPARATIVE_SUFFIX .

    THEN            reduce using rule 27 (num_node -> NUMBER COMPARATIVE_SUFFIX .)
    HYPHEN          reduce using rule 27 (num_node -> NUMBER COMPARATIVE_SUFFIX .)
    COMMA           reduce using rule 27 (num_node -> NUMBER COMPARATIVE_SUFFIX .)
    L_PAREN         reduce using rule 27 (num_node -> NUMBER COMPARATIVE_SUFFIX .)
    BULLET          reduce using rule 27 (num_node -> NUMBER COMPARATIVE_SUFFIX .)
    WAVE_DASH       reduce using rule 27 (num_node -> NUMBER COMPARATIVE_SUFFIX .)
    PREFIX          reduce using rule 27 (num_node -> NUMBER COMPARATIVE_SUFFIX .)
    NUMBER          reduce using rule 27 (num_node -> NUMBER COMPARATIVE_SUFFIX .)
    ID              reduce using rule 27 (num_node -> NUMBER COMPARATIVE_SUFFIX .)
    FLOOR           reduce using rule 27 (num_node -> NUMBER COMPARATIVE_SUFFIX .)
    $end            reduce using rule 27 (num_node -> NUMBER COMPARATIVE_SUFFIX .)
    R_PAREN         reduce using rule 27 (num_node -> NUMBER COMPARATIVE_SUFFIX .)
    EXCLUDE         reduce using rule 27 (num_node -> NUMBER COMPARATIVE_SUFFIX .)


state 27

    (29) string_node -> ID NUMBER .
    (30) string_node -> ID NUMBER . SUFFIX

    COMMA           reduce using rule 29 (string_node -> ID NUMBER .)
    L_PAREN         reduce using rule 29 (string_node -> ID NUMBER .)
    BULLET          reduce using rule 29 (string_node -> ID NUMBER .)
    WAVE_DASH       reduce using rule 29 (string_node -> ID NUMBER .)
    PREFIX          reduce using rule 29 (string_node -> ID NUMBER .)
    NUMBER          reduce using rule 29 (string_node -> ID NUMBER .)
    ID              reduce using rule 29 (string_node -> ID NUMBER .)
    FLOOR           reduce using rule 29 (string_node -> ID NUMBER .)
    $end            reduce using rule 29 (string_node -> ID NUMBER .)
    R_PAREN         reduce using rule 29 (string_node -> ID NUMBER .)
    EXCLUDE         reduce using rule 29 (string_node -> ID NUMBER .)
    SUFFIX          shift and go to state 44


state 28

    (32) string_node -> ID DOT . ID

    ID              shift and go to state 45


state 29

    (33) string_node -> FLOOR BULLET . FLOOR

    FLOOR           shift and go to state 46


state 30

    (5) node_list -> node COMMA node_list .

    $end            reduce using rule 5 (node_list -> node COMMA node_list .)
    R_PAREN         reduce using rule 5 (node_list -> node COMMA node_list .)
    EXCLUDE         reduce using rule 5 (node_list -> node COMMA node_list .)


state 31

    (5) node_list -> node . COMMA node_list
    (6) node_list -> node .
    (11) bullet_list -> node . BULLET bullet_list
    (12) bullet_list -> node .
    (2) node -> node . L_PAREN node_list R_PAREN
    (3) node -> node . L_PAREN node_list EXCLUDE R_PAREN
    (4) node -> node . L_PAREN node_list R_PAREN EXCLUDE
    (9) node -> node . bullet_list
    (10) node -> node . L_PAREN bullet_list R_PAREN
    (15) node -> node . node
    (14) range_node -> node . WAVE_DASH node
    (11) bullet_list -> . node BULLET bullet_list
    (12) bullet_list -> . node
    (2) node -> . node L_PAREN node_list R_PAREN
    (3) node -> . node L_PAREN node_list EXCLUDE R_PAREN
    (4) node -> . node L_PAREN node_list R_PAREN EXCLUDE
    (9) node -> . node bullet_list
    (10) node -> . node L_PAREN bullet_list R_PAREN
    (15) node -> . node node
    (17) node -> . range_node
    (18) node -> . num_node
    (19) node -> . string_node
    (20) node -> . suffix_node
    (14) range_node -> . node WAVE_DASH node
    (13) num_node -> . num_node THEN num_node
    (16) num_node -> . num_node HYPHEN num_node
    (21) num_node -> . PREFIX NUMBER
    (22) num_node -> . PREFIX NUMBER SUFFIX
    (23) num_node -> . PREFIX NUMBER SUFFIX COMPARATIVE_SUFFIX
    (24) num_node -> . NUMBER SUFFIX
    (25) num_node -> . NUMBER SUFFIX COMPARATIVE_SUFFIX
    (26) num_node -> . NUMBER
    (27) num_node -> . NUMBER COMPARATIVE_SUFFIX
    (28) num_node -> . PREFIX NUMBER COMPARATIVE_SUFFIX
    (29) string_node -> . ID NUMBER
    (30) string_node -> . ID NUMBER SUFFIX
    (31) string_node -> . ID
    (32) string_node -> . ID DOT ID
    (33) string_node -> . FLOOR BULLET FLOOR
    (34) suffix_node -> . L_PAREN SUFFIX R_PAREN

  ! reduce/reduce conflict for R_PAREN resolved using rule 6 (node_list -> node .)
  ! shift/reduce conflict for COMMA resolved as shift
  ! reduce/reduce conflict for EXCLUDE resolved using rule 6 (node_list -> node .)
    COMMA           shift and go to state 15
    R_PAREN         reduce using rule 6 (node_list -> node .)
    EXCLUDE         reduce using rule 6 (node_list -> node .)
    BULLET          shift and go to state 18
    L_PAREN         shift and go to state 16
    WAVE_DASH       shift and go to state 19
    PREFIX          shift and go to state 10
    NUMBER          shift and go to state 11
    ID              shift and go to state 12
    FLOOR           shift and go to state 13

  ! R_PAREN         [ reduce using rule 12 (bullet_list -> node .) ]
  ! COMMA           [ reduce using rule 12 (bullet_list -> node .) ]
  ! EXCLUDE         [ reduce using rule 12 (bullet_list -> node .) ]

    node                           shift and go to state 14
    bullet_list                    shift and go to state 17
    range_node                     shift and go to state 6
    num_node                       shift and go to state 7
    string_node                    shift and go to state 8
    suffix_node                    shift and go to state 9

state 32

    (2) node -> node L_PAREN node_list . R_PAREN
    (3) node -> node L_PAREN node_list . EXCLUDE R_PAREN
    (4) node -> node L_PAREN node_list . R_PAREN EXCLUDE

    R_PAREN         shift and go to state 47
    EXCLUDE         shift and go to state 48


state 33

    (10) node -> node L_PAREN bullet_list . R_PAREN
    (7) node_list -> bullet_list . COMMA node_list
    (8) node_list -> bullet_list .

  ! shift/reduce conflict for R_PAREN resolved as shift
    R_PAREN         shift and go to state 49
    COMMA           shift and go to state 20
    EXCLUDE         reduce using rule 8 (node_list -> bullet_list .)

  ! R_PAREN         [ reduce using rule 8 (node_list -> bullet_list .) ]


state 34

    (11) bullet_list -> node . BULLET bullet_list
    (12) bullet_list -> node .
    (2) node -> node . L_PAREN node_list R_PAREN
    (3) node -> node . L_PAREN node_list EXCLUDE R_PAREN
    (4) node -> node . L_PAREN node_list R_PAREN EXCLUDE
    (9) node -> node . bullet_list
    (10) node -> node . L_PAREN bullet_list R_PAREN
    (15) node -> node . node
    (14) range_node -> node . WAVE_DASH node
    (11) bullet_list -> . node BULLET bullet_list
    (12) bullet_list -> . node
    (2) node -> . node L_PAREN node_list R_PAREN
    (3) node -> . node L_PAREN node_list EXCLUDE R_PAREN
    (4) node -> . node L_PAREN node_list R_PAREN EXCLUDE
    (9) node -> . node bullet_list
    (10) node -> . node L_PAREN bullet_list R_PAREN
    (15) node -> . node node
    (17) node -> . range_node
    (18) node -> . num_node
    (19) node -> . string_node
    (20) node -> . suffix_node
    (14) range_node -> . node WAVE_DASH node
    (13) num_node -> . num_node THEN num_node
    (16) num_node -> . num_node HYPHEN num_node
    (21) num_node -> . PREFIX NUMBER
    (22) num_node -> . PREFIX NUMBER SUFFIX
    (23) num_node -> . PREFIX NUMBER SUFFIX COMPARATIVE_SUFFIX
    (24) num_node -> . NUMBER SUFFIX
    (25) num_node -> . NUMBER SUFFIX COMPARATIVE_SUFFIX
    (26) num_node -> . NUMBER
    (27) num_node -> . NUMBER COMPARATIVE_SUFFIX
    (28) num_node -> . PREFIX NUMBER COMPARATIVE_SUFFIX
    (29) string_node -> . ID NUMBER
    (30) string_node -> . ID NUMBER SUFFIX
    (31) string_node -> . ID
    (32) string_node -> . ID DOT ID
    (33) string_node -> . FLOOR BULLET FLOOR
    (34) suffix_node -> . L_PAREN SUFFIX R_PAREN

  ! shift/reduce conflict for BULLET resolved as shift
  ! shift/reduce conflict for L_PAREN resolved as shift
  ! shift/reduce conflict for WAVE_DASH resolved as shift
  ! shift/reduce conflict for PREFIX resolved as shift
  ! shift/reduce conflict for NUMBER resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for FLOOR resolved as shift
    BULLET          shift and go to state 18
    COMMA           reduce using rule 12 (bullet_list -> node .)
    $end            reduce using rule 12 (bullet_list -> node .)
    R_PAREN         reduce using rule 12 (bullet_list -> node .)
    EXCLUDE         reduce using rule 12 (bullet_list -> node .)
    L_PAREN         shift and go to state 16
    WAVE_DASH       shift and go to state 19
    PREFIX          shift and go to state 10
    NUMBER          shift and go to state 11
    ID              shift and go to state 12
    FLOOR           shift and go to state 13

  ! L_PAREN         [ reduce using rule 12 (bullet_list -> node .) ]
  ! BULLET          [ reduce using rule 12 (bullet_list -> node .) ]
  ! WAVE_DASH       [ reduce using rule 12 (bullet_list -> node .) ]
  ! PREFIX          [ reduce using rule 12 (bullet_list -> node .) ]
  ! NUMBER          [ reduce using rule 12 (bullet_list -> node .) ]
  ! ID              [ reduce using rule 12 (bullet_list -> node .) ]
  ! FLOOR           [ reduce using rule 12 (bullet_list -> node .) ]

    node                           shift and go to state 14
    bullet_list                    shift and go to state 17
    range_node                     shift and go to state 6
    num_node                       shift and go to state 7
    string_node                    shift and go to state 8
    suffix_node                    shift and go to state 9

state 35

    (11) bullet_list -> node BULLET bullet_list .

    COMMA           reduce using rule 11 (bullet_list -> node BULLET bullet_list .)
    $end            reduce using rule 11 (bullet_list -> node BULLET bullet_list .)
    L_PAREN         reduce using rule 11 (bullet_list -> node BULLET bullet_list .)
    BULLET          reduce using rule 11 (bullet_list -> node BULLET bullet_list .)
    WAVE_DASH       reduce using rule 11 (bullet_list -> node BULLET bullet_list .)
    PREFIX          reduce using rule 11 (bullet_list -> node BULLET bullet_list .)
    NUMBER          reduce using rule 11 (bullet_list -> node BULLET bullet_list .)
    ID              reduce using rule 11 (bullet_list -> node BULLET bullet_list .)
    FLOOR           reduce using rule 11 (bullet_list -> node BULLET bullet_list .)
    R_PAREN         reduce using rule 11 (bullet_list -> node BULLET bullet_list .)
    EXCLUDE         reduce using rule 11 (bullet_list -> node BULLET bullet_list .)


state 36

    (14) range_node -> node WAVE_DASH node .
    (2) node -> node . L_PAREN node_list R_PAREN
    (3) node -> node . L_PAREN node_list EXCLUDE R_PAREN
    (4) node -> node . L_PAREN node_list R_PAREN EXCLUDE
    (9) node -> node . bullet_list
    (10) node -> node . L_PAREN bullet_list R_PAREN
    (15) node -> node . node
    (14) range_node -> node . WAVE_DASH node
    (11) bullet_list -> . node BULLET bullet_list
    (12) bullet_list -> . node
    (2) node -> . node L_PAREN node_list R_PAREN
    (3) node -> . node L_PAREN node_list EXCLUDE R_PAREN
    (4) node -> . node L_PAREN node_list R_PAREN EXCLUDE
    (9) node -> . node bullet_list
    (10) node -> . node L_PAREN bullet_list R_PAREN
    (15) node -> . node node
    (17) node -> . range_node
    (18) node -> . num_node
    (19) node -> . string_node
    (20) node -> . suffix_node
    (14) range_node -> . node WAVE_DASH node
    (13) num_node -> . num_node THEN num_node
    (16) num_node -> . num_node HYPHEN num_node
    (21) num_node -> . PREFIX NUMBER
    (22) num_node -> . PREFIX NUMBER SUFFIX
    (23) num_node -> . PREFIX NUMBER SUFFIX COMPARATIVE_SUFFIX
    (24) num_node -> . NUMBER SUFFIX
    (25) num_node -> . NUMBER SUFFIX COMPARATIVE_SUFFIX
    (26) num_node -> . NUMBER
    (27) num_node -> . NUMBER COMPARATIVE_SUFFIX
    (28) num_node -> . PREFIX NUMBER COMPARATIVE_SUFFIX
    (29) string_node -> . ID NUMBER
    (30) string_node -> . ID NUMBER SUFFIX
    (31) string_node -> . ID
    (32) string_node -> . ID DOT ID
    (33) string_node -> . FLOOR BULLET FLOOR
    (34) suffix_node -> . L_PAREN SUFFIX R_PAREN

  ! shift/reduce conflict for L_PAREN resolved as shift
  ! shift/reduce conflict for WAVE_DASH resolved as shift
  ! shift/reduce conflict for PREFIX resolved as shift
  ! shift/reduce conflict for NUMBER resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for FLOOR resolved as shift
    COMMA           reduce using rule 14 (range_node -> node WAVE_DASH node .)
    BULLET          reduce using rule 14 (range_node -> node WAVE_DASH node .)
    $end            reduce using rule 14 (range_node -> node WAVE_DASH node .)
    R_PAREN         reduce using rule 14 (range_node -> node WAVE_DASH node .)
    EXCLUDE         reduce using rule 14 (range_node -> node WAVE_DASH node .)
    L_PAREN         shift and go to state 16
    WAVE_DASH       shift and go to state 19
    PREFIX          shift and go to state 10
    NUMBER          shift and go to state 11
    ID              shift and go to state 12
    FLOOR           shift and go to state 13

  ! L_PAREN         [ reduce using rule 14 (range_node -> node WAVE_DASH node .) ]
  ! WAVE_DASH       [ reduce using rule 14 (range_node -> node WAVE_DASH node .) ]
  ! PREFIX          [ reduce using rule 14 (range_node -> node WAVE_DASH node .) ]
  ! NUMBER          [ reduce using rule 14 (range_node -> node WAVE_DASH node .) ]
  ! ID              [ reduce using rule 14 (range_node -> node WAVE_DASH node .) ]
  ! FLOOR           [ reduce using rule 14 (range_node -> node WAVE_DASH node .) ]

    node                           shift and go to state 14
    bullet_list                    shift and go to state 17
    range_node                     shift and go to state 6
    num_node                       shift and go to state 7
    string_node                    shift and go to state 8
    suffix_node                    shift and go to state 9

state 37

    (7) node_list -> bullet_list COMMA node_list .

    $end            reduce using rule 7 (node_list -> bullet_list COMMA node_list .)
    R_PAREN         reduce using rule 7 (node_list -> bullet_list COMMA node_list .)
    EXCLUDE         reduce using rule 7 (node_list -> bullet_list COMMA node_list .)


state 38

    (34) suffix_node -> L_PAREN SUFFIX R_PAREN .

    COMMA           reduce using rule 34 (suffix_node -> L_PAREN SUFFIX R_PAREN .)
    L_PAREN         reduce using rule 34 (suffix_node -> L_PAREN SUFFIX R_PAREN .)
    BULLET          reduce using rule 34 (suffix_node -> L_PAREN SUFFIX R_PAREN .)
    WAVE_DASH       reduce using rule 34 (suffix_node -> L_PAREN SUFFIX R_PAREN .)
    PREFIX          reduce using rule 34 (suffix_node -> L_PAREN SUFFIX R_PAREN .)
    NUMBER          reduce using rule 34 (suffix_node -> L_PAREN SUFFIX R_PAREN .)
    ID              reduce using rule 34 (suffix_node -> L_PAREN SUFFIX R_PAREN .)
    FLOOR           reduce using rule 34 (suffix_node -> L_PAREN SUFFIX R_PAREN .)
    $end            reduce using rule 34 (suffix_node -> L_PAREN SUFFIX R_PAREN .)
    R_PAREN         reduce using rule 34 (suffix_node -> L_PAREN SUFFIX R_PAREN .)
    EXCLUDE         reduce using rule 34 (suffix_node -> L_PAREN SUFFIX R_PAREN .)


state 39

    (13) num_node -> num_node THEN num_node .
    (13) num_node -> num_node . THEN num_node
    (16) num_node -> num_node . HYPHEN num_node

  ! shift/reduce conflict for THEN resolved as shift
  ! shift/reduce conflict for HYPHEN resolved as shift
    COMMA           reduce using rule 13 (num_node -> num_node THEN num_node .)
    L_PAREN         reduce using rule 13 (num_node -> num_node THEN num_node .)
    BULLET          reduce using rule 13 (num_node -> num_node THEN num_node .)
    WAVE_DASH       reduce using rule 13 (num_node -> num_node THEN num_node .)
    PREFIX          reduce using rule 13 (num_node -> num_node THEN num_node .)
    NUMBER          reduce using rule 13 (num_node -> num_node THEN num_node .)
    ID              reduce using rule 13 (num_node -> num_node THEN num_node .)
    FLOOR           reduce using rule 13 (num_node -> num_node THEN num_node .)
    $end            reduce using rule 13 (num_node -> num_node THEN num_node .)
    R_PAREN         reduce using rule 13 (num_node -> num_node THEN num_node .)
    EXCLUDE         reduce using rule 13 (num_node -> num_node THEN num_node .)
    THEN            shift and go to state 22
    HYPHEN          shift and go to state 23

  ! THEN            [ reduce using rule 13 (num_node -> num_node THEN num_node .) ]
  ! HYPHEN          [ reduce using rule 13 (num_node -> num_node THEN num_node .) ]


state 40

    (16) num_node -> num_node HYPHEN num_node .
    (13) num_node -> num_node . THEN num_node
    (16) num_node -> num_node . HYPHEN num_node

  ! shift/reduce conflict for THEN resolved as shift
  ! shift/reduce conflict for HYPHEN resolved as shift
    COMMA           reduce using rule 16 (num_node -> num_node HYPHEN num_node .)
    L_PAREN         reduce using rule 16 (num_node -> num_node HYPHEN num_node .)
    BULLET          reduce using rule 16 (num_node -> num_node HYPHEN num_node .)
    WAVE_DASH       reduce using rule 16 (num_node -> num_node HYPHEN num_node .)
    PREFIX          reduce using rule 16 (num_node -> num_node HYPHEN num_node .)
    NUMBER          reduce using rule 16 (num_node -> num_node HYPHEN num_node .)
    ID              reduce using rule 16 (num_node -> num_node HYPHEN num_node .)
    FLOOR           reduce using rule 16 (num_node -> num_node HYPHEN num_node .)
    $end            reduce using rule 16 (num_node -> num_node HYPHEN num_node .)
    R_PAREN         reduce using rule 16 (num_node -> num_node HYPHEN num_node .)
    EXCLUDE         reduce using rule 16 (num_node -> num_node HYPHEN num_node .)
    THEN            shift and go to state 22
    HYPHEN          shift and go to state 23

  ! THEN            [ reduce using rule 16 (num_node -> num_node HYPHEN num_node .) ]
  ! HYPHEN          [ reduce using rule 16 (num_node -> num_node HYPHEN num_node .) ]


state 41

    (22) num_node -> PREFIX NUMBER SUFFIX .
    (23) num_node -> PREFIX NUMBER SUFFIX . COMPARATIVE_SUFFIX

    THEN            reduce using rule 22 (num_node -> PREFIX NUMBER SUFFIX .)
    HYPHEN          reduce using rule 22 (num_node -> PREFIX NUMBER SUFFIX .)
    COMMA           reduce using rule 22 (num_node -> PREFIX NUMBER SUFFIX .)
    L_PAREN         reduce using rule 22 (num_node -> PREFIX NUMBER SUFFIX .)
    BULLET          reduce using rule 22 (num_node -> PREFIX NUMBER SUFFIX .)
    WAVE_DASH       reduce using rule 22 (num_node -> PREFIX NUMBER SUFFIX .)
    PREFIX          reduce using rule 22 (num_node -> PREFIX NUMBER SUFFIX .)
    NUMBER          reduce using rule 22 (num_node -> PREFIX NUMBER SUFFIX .)
    ID              reduce using rule 22 (num_node -> PREFIX NUMBER SUFFIX .)
    FLOOR           reduce using rule 22 (num_node -> PREFIX NUMBER SUFFIX .)
    $end            reduce using rule 22 (num_node -> PREFIX NUMBER SUFFIX .)
    R_PAREN         reduce using rule 22 (num_node -> PREFIX NUMBER SUFFIX .)
    EXCLUDE         reduce using rule 22 (num_node -> PREFIX NUMBER SUFFIX .)
    COMPARATIVE_SUFFIX shift and go to state 50


state 42

    (28) num_node -> PREFIX NUMBER COMPARATIVE_SUFFIX .

    THEN            reduce using rule 28 (num_node -> PREFIX NUMBER COMPARATIVE_SUFFIX .)
    HYPHEN          reduce using rule 28 (num_node -> PREFIX NUMBER COMPARATIVE_SUFFIX .)
    COMMA           reduce using rule 28 (num_node -> PREFIX NUMBER COMPARATIVE_SUFFIX .)
    L_PAREN         reduce using rule 28 (num_node -> PREFIX NUMBER COMPARATIVE_SUFFIX .)
    BULLET          reduce using rule 28 (num_node -> PREFIX NUMBER COMPARATIVE_SUFFIX .)
    WAVE_DASH       reduce using rule 28 (num_node -> PREFIX NUMBER COMPARATIVE_SUFFIX .)
    PREFIX          reduce using rule 28 (num_node -> PREFIX NUMBER COMPARATIVE_SUFFIX .)
    NUMBER          reduce using rule 28 (num_node -> PREFIX NUMBER COMPARATIVE_SUFFIX .)
    ID              reduce using rule 28 (num_node -> PREFIX NUMBER COMPARATIVE_SUFFIX .)
    FLOOR           reduce using rule 28 (num_node -> PREFIX NUMBER COMPARATIVE_SUFFIX .)
    $end            reduce using rule 28 (num_node -> PREFIX NUMBER COMPARATIVE_SUFFIX .)
    R_PAREN         reduce using rule 28 (num_node -> PREFIX NUMBER COMPARATIVE_SUFFIX .)
    EXCLUDE         reduce using rule 28 (num_node -> PREFIX NUMBER COMPARATIVE_SUFFIX .)


state 43

    (25) num_node -> NUMBER SUFFIX COMPARATIVE_SUFFIX .

    THEN            reduce using rule 25 (num_node -> NUMBER SUFFIX COMPARATIVE_SUFFIX .)
    HYPHEN          reduce using rule 25 (num_node -> NUMBER SUFFIX COMPARATIVE_SUFFIX .)
    COMMA           reduce using rule 25 (num_node -> NUMBER SUFFIX COMPARATIVE_SUFFIX .)
    L_PAREN         reduce using rule 25 (num_node -> NUMBER SUFFIX COMPARATIVE_SUFFIX .)
    BULLET          reduce using rule 25 (num_node -> NUMBER SUFFIX COMPARATIVE_SUFFIX .)
    WAVE_DASH       reduce using rule 25 (num_node -> NUMBER SUFFIX COMPARATIVE_SUFFIX .)
    PREFIX          reduce using rule 25 (num_node -> NUMBER SUFFIX COMPARATIVE_SUFFIX .)
    NUMBER          reduce using rule 25 (num_node -> NUMBER SUFFIX COMPARATIVE_SUFFIX .)
    ID              reduce using rule 25 (num_node -> NUMBER SUFFIX COMPARATIVE_SUFFIX .)
    FLOOR           reduce using rule 25 (num_node -> NUMBER SUFFIX COMPARATIVE_SUFFIX .)
    $end            reduce using rule 25 (num_node -> NUMBER SUFFIX COMPARATIVE_SUFFIX .)
    R_PAREN         reduce using rule 25 (num_node -> NUMBER SUFFIX COMPARATIVE_SUFFIX .)
    EXCLUDE         reduce using rule 25 (num_node -> NUMBER SUFFIX COMPARATIVE_SUFFIX .)


state 44

    (30) string_node -> ID NUMBER SUFFIX .

    COMMA           reduce using rule 30 (string_node -> ID NUMBER SUFFIX .)
    L_PAREN         reduce using rule 30 (string_node -> ID NUMBER SUFFIX .)
    BULLET          reduce using rule 30 (string_node -> ID NUMBER SUFFIX .)
    WAVE_DASH       reduce using rule 30 (string_node -> ID NUMBER SUFFIX .)
    PREFIX          reduce using rule 30 (string_node -> ID NUMBER SUFFIX .)
    NUMBER          reduce using rule 30 (string_node -> ID NUMBER SUFFIX .)
    ID              reduce using rule 30 (string_node -> ID NUMBER SUFFIX .)
    FLOOR           reduce using rule 30 (string_node -> ID NUMBER SUFFIX .)
    $end            reduce using rule 30 (string_node -> ID NUMBER SUFFIX .)
    R_PAREN         reduce using rule 30 (string_node -> ID NUMBER SUFFIX .)
    EXCLUDE         reduce using rule 30 (string_node -> ID NUMBER SUFFIX .)


state 45

    (32) string_node -> ID DOT ID .

    COMMA           reduce using rule 32 (string_node -> ID DOT ID .)
    L_PAREN         reduce using rule 32 (string_node -> ID DOT ID .)
    BULLET          reduce using rule 32 (string_node -> ID DOT ID .)
    WAVE_DASH       reduce using rule 32 (string_node -> ID DOT ID .)
    PREFIX          reduce using rule 32 (string_node -> ID DOT ID .)
    NUMBER          reduce using rule 32 (string_node -> ID DOT ID .)
    ID              reduce using rule 32 (string_node -> ID DOT ID .)
    FLOOR           reduce using rule 32 (string_node -> ID DOT ID .)
    $end            reduce using rule 32 (string_node -> ID DOT ID .)
    R_PAREN         reduce using rule 32 (string_node -> ID DOT ID .)
    EXCLUDE         reduce using rule 32 (string_node -> ID DOT ID .)


state 46

    (33) string_node -> FLOOR BULLET FLOOR .

    COMMA           reduce using rule 33 (string_node -> FLOOR BULLET FLOOR .)
    L_PAREN         reduce using rule 33 (string_node -> FLOOR BULLET FLOOR .)
    BULLET          reduce using rule 33 (string_node -> FLOOR BULLET FLOOR .)
    WAVE_DASH       reduce using rule 33 (string_node -> FLOOR BULLET FLOOR .)
    PREFIX          reduce using rule 33 (string_node -> FLOOR BULLET FLOOR .)
    NUMBER          reduce using rule 33 (string_node -> FLOOR BULLET FLOOR .)
    ID              reduce using rule 33 (string_node -> FLOOR BULLET FLOOR .)
    FLOOR           reduce using rule 33 (string_node -> FLOOR BULLET FLOOR .)
    $end            reduce using rule 33 (string_node -> FLOOR BULLET FLOOR .)
    R_PAREN         reduce using rule 33 (string_node -> FLOOR BULLET FLOOR .)
    EXCLUDE         reduce using rule 33 (string_node -> FLOOR BULLET FLOOR .)


state 47

    (2) node -> node L_PAREN node_list R_PAREN .
    (4) node -> node L_PAREN node_list R_PAREN . EXCLUDE

  ! shift/reduce conflict for EXCLUDE resolved as shift
    COMMA           reduce using rule 2 (node -> node L_PAREN node_list R_PAREN .)
    L_PAREN         reduce using rule 2 (node -> node L_PAREN node_list R_PAREN .)
    BULLET          reduce using rule 2 (node -> node L_PAREN node_list R_PAREN .)
    WAVE_DASH       reduce using rule 2 (node -> node L_PAREN node_list R_PAREN .)
    PREFIX          reduce using rule 2 (node -> node L_PAREN node_list R_PAREN .)
    NUMBER          reduce using rule 2 (node -> node L_PAREN node_list R_PAREN .)
    ID              reduce using rule 2 (node -> node L_PAREN node_list R_PAREN .)
    FLOOR           reduce using rule 2 (node -> node L_PAREN node_list R_PAREN .)
    $end            reduce using rule 2 (node -> node L_PAREN node_list R_PAREN .)
    R_PAREN         reduce using rule 2 (node -> node L_PAREN node_list R_PAREN .)
    EXCLUDE         shift and go to state 51

  ! EXCLUDE         [ reduce using rule 2 (node -> node L_PAREN node_list R_PAREN .) ]


state 48

    (3) node -> node L_PAREN node_list EXCLUDE . R_PAREN

    R_PAREN         shift and go to state 52


state 49

    (10) node -> node L_PAREN bullet_list R_PAREN .

    COMMA           reduce using rule 10 (node -> node L_PAREN bullet_list R_PAREN .)
    L_PAREN         reduce using rule 10 (node -> node L_PAREN bullet_list R_PAREN .)
    BULLET          reduce using rule 10 (node -> node L_PAREN bullet_list R_PAREN .)
    WAVE_DASH       reduce using rule 10 (node -> node L_PAREN bullet_list R_PAREN .)
    PREFIX          reduce using rule 10 (node -> node L_PAREN bullet_list R_PAREN .)
    NUMBER          reduce using rule 10 (node -> node L_PAREN bullet_list R_PAREN .)
    ID              reduce using rule 10 (node -> node L_PAREN bullet_list R_PAREN .)
    FLOOR           reduce using rule 10 (node -> node L_PAREN bullet_list R_PAREN .)
    $end            reduce using rule 10 (node -> node L_PAREN bullet_list R_PAREN .)
    R_PAREN         reduce using rule 10 (node -> node L_PAREN bullet_list R_PAREN .)
    EXCLUDE         reduce using rule 10 (node -> node L_PAREN bullet_list R_PAREN .)


state 50

    (23) num_node -> PREFIX NUMBER SUFFIX COMPARATIVE_SUFFIX .

    THEN            reduce using rule 23 (num_node -> PREFIX NUMBER SUFFIX COMPARATIVE_SUFFIX .)
    HYPHEN          reduce using rule 23 (num_node -> PREFIX NUMBER SUFFIX COMPARATIVE_SUFFIX .)
    COMMA           reduce using rule 23 (num_node -> PREFIX NUMBER SUFFIX COMPARATIVE_SUFFIX .)
    L_PAREN         reduce using rule 23 (num_node -> PREFIX NUMBER SUFFIX COMPARATIVE_SUFFIX .)
    BULLET          reduce using rule 23 (num_node -> PREFIX NUMBER SUFFIX COMPARATIVE_SUFFIX .)
    WAVE_DASH       reduce using rule 23 (num_node -> PREFIX NUMBER SUFFIX COMPARATIVE_SUFFIX .)
    PREFIX          reduce using rule 23 (num_node -> PREFIX NUMBER SUFFIX COMPARATIVE_SUFFIX .)
    NUMBER          reduce using rule 23 (num_node -> PREFIX NUMBER SUFFIX COMPARATIVE_SUFFIX .)
    ID              reduce using rule 23 (num_node -> PREFIX NUMBER SUFFIX COMPARATIVE_SUFFIX .)
    FLOOR           reduce using rule 23 (num_node -> PREFIX NUMBER SUFFIX COMPARATIVE_SUFFIX .)
    $end            reduce using rule 23 (num_node -> PREFIX NUMBER SUFFIX COMPARATIVE_SUFFIX .)
    R_PAREN         reduce using rule 23 (num_node -> PREFIX NUMBER SUFFIX COMPARATIVE_SUFFIX .)
    EXCLUDE         reduce using rule 23 (num_node -> PREFIX NUMBER SUFFIX COMPARATIVE_SUFFIX .)


state 51

    (4) node -> node L_PAREN node_list R_PAREN EXCLUDE .

    COMMA           reduce using rule 4 (node -> node L_PAREN node_list R_PAREN EXCLUDE .)
    L_PAREN         reduce using rule 4 (node -> node L_PAREN node_list R_PAREN EXCLUDE .)
    BULLET          reduce using rule 4 (node -> node L_PAREN node_list R_PAREN EXCLUDE .)
    WAVE_DASH       reduce using rule 4 (node -> node L_PAREN node_list R_PAREN EXCLUDE .)
    PREFIX          reduce using rule 4 (node -> node L_PAREN node_list R_PAREN EXCLUDE .)
    NUMBER          reduce using rule 4 (node -> node L_PAREN node_list R_PAREN EXCLUDE .)
    ID              reduce using rule 4 (node -> node L_PAREN node_list R_PAREN EXCLUDE .)
    FLOOR           reduce using rule 4 (node -> node L_PAREN node_list R_PAREN EXCLUDE .)
    $end            reduce using rule 4 (node -> node L_PAREN node_list R_PAREN EXCLUDE .)
    R_PAREN         reduce using rule 4 (node -> node L_PAREN node_list R_PAREN EXCLUDE .)
    EXCLUDE         reduce using rule 4 (node -> node L_PAREN node_list R_PAREN EXCLUDE .)


state 52

    (3) node -> node L_PAREN node_list EXCLUDE R_PAREN .

    COMMA           reduce using rule 3 (node -> node L_PAREN node_list EXCLUDE R_PAREN .)
    L_PAREN         reduce using rule 3 (node -> node L_PAREN node_list EXCLUDE R_PAREN .)
    BULLET          reduce using rule 3 (node -> node L_PAREN node_list EXCLUDE R_PAREN .)
    WAVE_DASH       reduce using rule 3 (node -> node L_PAREN node_list EXCLUDE R_PAREN .)
    PREFIX          reduce using rule 3 (node -> node L_PAREN node_list EXCLUDE R_PAREN .)
    NUMBER          reduce using rule 3 (node -> node L_PAREN node_list EXCLUDE R_PAREN .)
    ID              reduce using rule 3 (node -> node L_PAREN node_list EXCLUDE R_PAREN .)
    FLOOR           reduce using rule 3 (node -> node L_PAREN node_list EXCLUDE R_PAREN .)
    $end            reduce using rule 3 (node -> node L_PAREN node_list EXCLUDE R_PAREN .)
    R_PAREN         reduce using rule 3 (node -> node L_PAREN node_list EXCLUDE R_PAREN .)
    EXCLUDE         reduce using rule 3 (node -> node L_PAREN node_list EXCLUDE R_PAREN .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for COMMA in state 3 resolved as shift
WARNING: shift/reduce conflict for NUMBER in state 12 resolved as shift
WARNING: shift/reduce conflict for BULLET in state 14 resolved as shift
WARNING: shift/reduce conflict for BULLET in state 14 resolved as shift
WARNING: shift/reduce conflict for L_PAREN in state 14 resolved as shift
WARNING: shift/reduce conflict for WAVE_DASH in state 14 resolved as shift
WARNING: shift/reduce conflict for PREFIX in state 14 resolved as shift
WARNING: shift/reduce conflict for NUMBER in state 14 resolved as shift
WARNING: shift/reduce conflict for ID in state 14 resolved as shift
WARNING: shift/reduce conflict for FLOOR in state 14 resolved as shift
WARNING: shift/reduce conflict for COMMA in state 31 resolved as shift
WARNING: shift/reduce conflict for R_PAREN in state 33 resolved as shift
WARNING: shift/reduce conflict for BULLET in state 34 resolved as shift
WARNING: shift/reduce conflict for L_PAREN in state 34 resolved as shift
WARNING: shift/reduce conflict for WAVE_DASH in state 34 resolved as shift
WARNING: shift/reduce conflict for PREFIX in state 34 resolved as shift
WARNING: shift/reduce conflict for NUMBER in state 34 resolved as shift
WARNING: shift/reduce conflict for ID in state 34 resolved as shift
WARNING: shift/reduce conflict for FLOOR in state 34 resolved as shift
WARNING: shift/reduce conflict for L_PAREN in state 36 resolved as shift
WARNING: shift/reduce conflict for WAVE_DASH in state 36 resolved as shift
WARNING: shift/reduce conflict for PREFIX in state 36 resolved as shift
WARNING: shift/reduce conflict for NUMBER in state 36 resolved as shift
WARNING: shift/reduce conflict for ID in state 36 resolved as shift
WARNING: shift/reduce conflict for FLOOR in state 36 resolved as shift
WARNING: shift/reduce conflict for THEN in state 39 resolved as shift
WARNING: shift/reduce conflict for HYPHEN in state 39 resolved as shift
WARNING: shift/reduce conflict for THEN in state 40 resolved as shift
WARNING: shift/reduce conflict for HYPHEN in state 40 resolved as shift
WARNING: shift/reduce conflict for EXCLUDE in state 47 resolved as shift
WARNING: reduce/reduce conflict in state 3 resolved using rule (node_list -> node)
WARNING: rejected rule (bullet_list -> node) in state 3
WARNING: reduce/reduce conflict in state 14 resolved using rule (bullet_list -> node)
WARNING: rejected rule (node -> node node) in state 14
WARNING: reduce/reduce conflict in state 31 resolved using rule (node_list -> node)
WARNING: rejected rule (bullet_list -> node) in state 31
WARNING: Rule (node -> node node) is never reduced
