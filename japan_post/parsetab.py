
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'BULLET COMMA COMPARATIVE_SUFFIX DOT EXCLUDE FLOOR HYPHEN ID L_PAREN NUMBER PREFIX R_PAREN SUFFIX THEN WAVE_DASH\n    choiki : node_list\n    \n    node : node L_PAREN node_list R_PAREN\n    \n    node : node L_PAREN node_list EXCLUDE R_PAREN\n    \n    node : node L_PAREN node_list R_PAREN EXCLUDE\n    \n    node_list : node COMMA node_list\n            | node\n    \n    node : node WAVE_DASH\n    \n    node_list : bullet_list COMMA node_list\n            | bullet_list\n    \n    node : node bullet_list\n    \n    node : node L_PAREN bullet_list R_PAREN\n    \n    bullet_list : node BULLET bullet_list\n                | node\n    \n    num_node : num_node THEN num_node\n    \n    range_node : node WAVE_DASH node\n    \n    node : node node\n    \n    num_node : num_node HYPHEN num_node\n    \n    string_node : string_node HYPHEN num_node\n    \n    node : range_node\n     | num_node\n     | string_node\n     | suffix_node\n    \n    num_node : PREFIX NUMBER\n            | PREFIX NUMBER SUFFIX\n            | PREFIX NUMBER SUFFIX COMPARATIVE_SUFFIX\n    \n    num_node : NUMBER SUFFIX\n            |  NUMBER SUFFIX COMPARATIVE_SUFFIX\n    \n    num_node : NUMBER\n            | NUMBER COMPARATIVE_SUFFIX\n            | PREFIX NUMBER COMPARATIVE_SUFFIX\n    \n    string_node : ID NUMBER\n                | ID NUMBER SUFFIX\n    \n    string_node : ID\n    \n    string_node : string_node DOT ID\n    \n    string_node : FLOOR BULLET FLOOR\n    \n    suffix_node : SUFFIX\n    '
    
_lr_action_items = {'PREFIX':([0,3,5,6,7,8,10,11,12,14,15,16,17,18,19,20,21,22,23,25,26,27,28,31,34,35,36,38,39,40,41,42,43,44,45,46,47,49,50,51,52,],[9,9,-19,-20,-21,-22,-28,-36,-33,9,9,9,9,-10,9,9,9,9,9,-23,-26,-29,-31,9,9,9,-12,-14,-17,-18,-34,-24,-30,-27,-32,-35,-2,-11,-25,-4,-3,]),'NUMBER':([0,3,5,6,7,8,9,10,11,12,14,15,16,17,18,19,20,21,22,23,25,26,27,28,31,34,35,36,38,39,40,41,42,43,44,45,46,47,49,50,51,52,],[10,10,-19,-20,-21,-22,25,-28,-36,28,10,10,10,10,-10,10,10,10,10,10,-23,-26,-29,-31,10,10,10,-12,-14,-17,-18,-34,-24,-30,-27,-32,-35,-2,-11,-25,-4,-3,]),'ID':([0,3,5,6,7,8,10,11,12,14,15,16,17,18,19,20,24,25,26,27,28,31,34,35,36,38,39,40,41,42,43,44,45,46,47,49,50,51,52,],[12,12,-19,-20,-21,-22,-28,-36,-33,12,12,12,12,-10,12,12,41,-23,-26,-29,-31,12,12,12,-12,-14,-17,-18,-34,-24,-30,-27,-32,-35,-2,-11,-25,-4,-3,]),'FLOOR':([0,3,5,6,7,8,10,11,12,14,15,16,17,18,19,20,25,26,27,28,29,31,34,35,36,38,39,40,41,42,43,44,45,46,47,49,50,51,52,],[13,13,-19,-20,-21,-22,-28,-36,-33,13,13,13,13,-10,13,13,-23,-26,-29,-31,46,13,13,13,-12,-14,-17,-18,-34,-24,-30,-27,-32,-35,-2,-11,-25,-4,-3,]),'SUFFIX':([0,3,5,6,7,8,10,11,12,14,15,16,17,18,19,20,25,26,27,28,31,34,35,36,38,39,40,41,42,43,44,45,46,47,49,50,51,52,],[11,11,-19,-20,-21,-22,26,-36,-33,11,11,11,11,-10,11,11,42,-26,-29,45,11,11,11,-12,-14,-17,-18,-34,-24,-30,-27,-32,-35,-2,-11,-25,-4,-3,]),'$end':([1,2,3,4,5,6,7,8,10,11,12,14,17,18,25,26,27,28,30,34,35,36,37,38,39,40,41,42,43,44,45,46,47,49,50,51,52,],[0,-1,-6,-9,-19,-20,-21,-22,-28,-36,-33,-13,-7,-10,-23,-26,-29,-31,-5,-15,-13,-12,-8,-14,-17,-18,-34,-24,-30,-27,-32,-35,-2,-11,-25,-4,-3,]),'COMMA':([3,4,5,6,7,8,10,11,12,14,17,18,25,26,27,28,31,33,34,35,36,38,39,40,41,42,43,44,45,46,47,49,50,51,52,],[15,20,-19,-20,-21,-22,-28,-36,-33,-13,-7,-10,-23,-26,-29,-31,15,20,-15,-13,-12,-14,-17,-18,-34,-24,-30,-27,-32,-35,-2,-11,-25,-4,-3,]),'R_PAREN':([3,4,5,6,7,8,10,11,12,14,17,18,25,26,27,28,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,],[-6,-9,-19,-20,-21,-22,-28,-36,-33,-13,-7,-10,-23,-26,-29,-31,-5,-6,47,49,-15,-13,-12,-8,-14,-17,-18,-34,-24,-30,-27,-32,-35,-2,52,-11,-25,-4,-3,]),'EXCLUDE':([3,4,5,6,7,8,10,11,12,14,17,18,25,26,27,28,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,49,50,51,52,],[-6,-9,-19,-20,-21,-22,-28,-36,-33,-13,-7,-10,-23,-26,-29,-31,-5,-6,48,-9,-15,-13,-12,-8,-14,-17,-18,-34,-24,-30,-27,-32,-35,51,-11,-25,-4,-3,]),'L_PAREN':([3,5,6,7,8,10,11,12,14,17,18,25,26,27,28,31,34,35,36,38,39,40,41,42,43,44,45,46,47,49,50,51,52,],[16,-19,-20,-21,-22,-28,-36,-33,16,-7,-10,-23,-26,-29,-31,16,16,16,-12,-14,-17,-18,-34,-24,-30,-27,-32,-35,-2,-11,-25,-4,-3,]),'WAVE_DASH':([3,5,6,7,8,10,11,12,14,17,18,25,26,27,28,31,34,35,36,38,39,40,41,42,43,44,45,46,47,49,50,51,52,],[17,-19,-20,-21,-22,-28,-36,-33,17,-7,-10,-23,-26,-29,-31,17,17,17,-12,-14,-17,-18,-34,-24,-30,-27,-32,-35,-2,-11,-25,-4,-3,]),'BULLET':([3,5,6,7,8,10,11,12,13,14,17,18,25,26,27,28,31,34,35,36,38,39,40,41,42,43,44,45,46,47,49,50,51,52,],[19,-19,-20,-21,-22,-28,-36,-33,29,19,-7,-10,-23,-26,-29,-31,19,-15,19,-12,-14,-17,-18,-34,-24,-30,-27,-32,-35,-2,-11,-25,-4,-3,]),'THEN':([6,10,25,26,27,38,39,40,42,43,44,50,],[21,-28,-23,-26,-29,21,21,21,-24,-30,-27,-25,]),'HYPHEN':([6,7,10,12,25,26,27,28,38,39,40,41,42,43,44,45,46,50,],[22,23,-28,-33,-23,-26,-29,-31,22,22,22,-34,-24,-30,-27,-32,-35,-25,]),'DOT':([7,10,12,25,26,27,28,38,39,40,41,42,43,44,45,46,50,],[24,-28,-33,-23,-26,-29,-31,-14,-17,-18,-34,-24,-30,-27,-32,-35,-25,]),'COMPARATIVE_SUFFIX':([10,25,26,42,],[27,43,44,50,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'choiki':([0,],[1,]),'node_list':([0,15,16,20,],[2,30,32,37,]),'node':([0,3,14,15,16,17,19,20,31,34,35,],[3,14,14,3,31,34,35,3,14,14,14,]),'bullet_list':([0,3,14,15,16,19,20,31,34,35,],[4,18,18,4,33,36,4,18,18,18,]),'range_node':([0,3,14,15,16,17,19,20,31,34,35,],[5,5,5,5,5,5,5,5,5,5,5,]),'num_node':([0,3,14,15,16,17,19,20,21,22,23,31,34,35,],[6,6,6,6,6,6,6,6,38,39,40,6,6,6,]),'string_node':([0,3,14,15,16,17,19,20,31,34,35,],[7,7,7,7,7,7,7,7,7,7,7,]),'suffix_node':([0,3,14,15,16,17,19,20,31,34,35,],[8,8,8,8,8,8,8,8,8,8,8,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> choiki","S'",1,None,None,None),
  ('choiki -> node_list','choiki',1,'p_choiki','ken_all_choiki_yacc.py',12),
  ('node -> node L_PAREN node_list R_PAREN','node',4,'p_node_list_children','ken_all_choiki_yacc.py',21),
  ('node -> node L_PAREN node_list EXCLUDE R_PAREN','node',5,'p_exlude_node','ken_all_choiki_yacc.py',31),
  ('node -> node L_PAREN node_list R_PAREN EXCLUDE','node',5,'p_exlude_node2','ken_all_choiki_yacc.py',43),
  ('node_list -> node COMMA node_list','node_list',3,'p_node_list','ken_all_choiki_yacc.py',55),
  ('node_list -> node','node_list',1,'p_node_list','ken_all_choiki_yacc.py',56),
  ('node -> node WAVE_DASH','node',2,'p_only_wave_dash','ken_all_choiki_yacc.py',75),
  ('node_list -> bullet_list COMMA node_list','node_list',3,'p_bullet_list_in_node_list','ken_all_choiki_yacc.py',84),
  ('node_list -> bullet_list','node_list',1,'p_bullet_list_in_node_list','ken_all_choiki_yacc.py',85),
  ('node -> node bullet_list','node',2,'p_bullet_list_children','ken_all_choiki_yacc.py',96),
  ('node -> node L_PAREN bullet_list R_PAREN','node',4,'p_paren_bullet_list','ken_all_choiki_yacc.py',106),
  ('bullet_list -> node BULLET bullet_list','bullet_list',3,'p_bullet_list','ken_all_choiki_yacc.py',116),
  ('bullet_list -> node','bullet_list',1,'p_bullet_list','ken_all_choiki_yacc.py',117),
  ('num_node -> num_node THEN num_node','num_node',3,'p_then','ken_all_choiki_yacc.py',132),
  ('range_node -> node WAVE_DASH node','range_node',3,'p_range_node','ken_all_choiki_yacc.py',143),
  ('node -> node node','node',2,'p_node_succ','ken_all_choiki_yacc.py',192),
  ('num_node -> num_node HYPHEN num_node','num_node',3,'p_num_node_hyphen','ken_all_choiki_yacc.py',200),
  ('string_node -> string_node HYPHEN num_node','string_node',3,'p_string_node_hyphen','ken_all_choiki_yacc.py',210),
  ('node -> range_node','node',1,'p_node','ken_all_choiki_yacc.py',222),
  ('node -> num_node','node',1,'p_node','ken_all_choiki_yacc.py',223),
  ('node -> string_node','node',1,'p_node','ken_all_choiki_yacc.py',224),
  ('node -> suffix_node','node',1,'p_node','ken_all_choiki_yacc.py',225),
  ('num_node -> PREFIX NUMBER','num_node',2,'p_num_node_prefix','ken_all_choiki_yacc.py',232),
  ('num_node -> PREFIX NUMBER SUFFIX','num_node',3,'p_num_node_prefix','ken_all_choiki_yacc.py',233),
  ('num_node -> PREFIX NUMBER SUFFIX COMPARATIVE_SUFFIX','num_node',4,'p_num_node_prefix','ken_all_choiki_yacc.py',234),
  ('num_node -> NUMBER SUFFIX','num_node',2,'p_num_node_suffix','ken_all_choiki_yacc.py',246),
  ('num_node -> NUMBER SUFFIX COMPARATIVE_SUFFIX','num_node',3,'p_num_node_suffix','ken_all_choiki_yacc.py',247),
  ('num_node -> NUMBER','num_node',1,'p_num_node','ken_all_choiki_yacc.py',257),
  ('num_node -> NUMBER COMPARATIVE_SUFFIX','num_node',2,'p_num_node','ken_all_choiki_yacc.py',258),
  ('num_node -> PREFIX NUMBER COMPARATIVE_SUFFIX','num_node',3,'p_num_node','ken_all_choiki_yacc.py',259),
  ('string_node -> ID NUMBER','string_node',2,'p_string_and_number_node','ken_all_choiki_yacc.py',271),
  ('string_node -> ID NUMBER SUFFIX','string_node',3,'p_string_and_number_node','ken_all_choiki_yacc.py',272),
  ('string_node -> ID','string_node',1,'p_string_node','ken_all_choiki_yacc.py',284),
  ('string_node -> string_node DOT ID','string_node',3,'p_dot_concat_string','ken_all_choiki_yacc.py',291),
  ('string_node -> FLOOR BULLET FLOOR','string_node',3,'p_floow_string','ken_all_choiki_yacc.py',299),
  ('suffix_node -> SUFFIX','suffix_node',1,'p_only_suffix_node','ken_all_choiki_yacc.py',306),
]
