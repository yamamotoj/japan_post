
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'COMMA COMPARATIVE_SUFFIX DOT EXCLUDE FLOOR HYPHEN ID L_PAREN NUMBER PREFIX R_PAREN SUFFIX WAVE_DASH\n    choiki : node\n    \n    node : node L_PAREN node_list R_PAREN\n    \n    node : node L_PAREN node_list EXCLUDE R_PAREN\n    \n    node : node L_PAREN node_list R_PAREN EXCLUDE\n    \n    node_list : node COMMA node_list\n            | node\n    \n    range_node : node WAVE_DASH node\n    \n    node : node node\n    \n    num_node : NUMBER HYPHEN NUMBER\n    \n    node : range_node\n     | num_node\n     | string_node\n    \n    num_node : PREFIX num_node\n    \n    num_node : num_node SUFFIX\n    \n    num_node : num_node COMPARATIVE_SUFFIX\n    \n    num_node : NUMBER\n    \n    string_node : ID\n    \n    string_node : ID DOT ID\n    \n    string_node : FLOOR COMMA FLOOR\n    '
    
_lr_action_items = {'NUMBER':([0,2,3,4,5,6,7,8,10,11,12,13,14,15,16,19,21,22,23,24,25,26,29,30,],[6,6,-10,-11,-12,-16,6,-17,6,6,6,-14,-15,22,-13,6,6,-9,-18,-19,6,-2,-4,-3,]),'PREFIX':([0,2,3,4,5,6,7,8,10,11,12,13,14,16,19,21,22,23,24,25,26,29,30,],[7,7,-10,-11,-12,-16,7,-17,7,7,7,-14,-15,-13,7,7,-9,-18,-19,7,-2,-4,-3,]),'ID':([0,2,3,4,5,6,8,10,11,12,13,14,16,17,19,21,22,23,24,25,26,29,30,],[8,8,-10,-11,-12,-16,-17,8,8,8,-14,-15,-13,23,8,8,-9,-18,-19,8,-2,-4,-3,]),'FLOOR':([0,2,3,4,5,6,8,10,11,12,13,14,16,18,19,21,22,23,24,25,26,29,30,],[9,9,-10,-11,-12,-16,-17,9,9,9,-14,-15,-13,24,9,9,-9,-18,-19,9,-2,-4,-3,]),'$end':([1,2,3,4,5,6,8,10,13,14,16,21,22,23,24,26,29,30,],[0,-1,-10,-11,-12,-16,-17,-8,-14,-15,-13,-7,-9,-18,-19,-2,-4,-3,]),'L_PAREN':([2,3,4,5,6,8,10,13,14,16,19,21,22,23,24,26,29,30,],[11,-10,-11,-12,-16,-17,11,-14,-15,-13,11,11,-9,-18,-19,-2,-4,-3,]),'WAVE_DASH':([2,3,4,5,6,8,10,13,14,16,19,21,22,23,24,26,29,30,],[12,-10,-11,-12,-16,-17,12,-14,-15,-13,12,12,-9,-18,-19,-2,-4,-3,]),'COMMA':([3,4,5,6,8,9,10,13,14,16,19,21,22,23,24,26,29,30,],[-10,-11,-12,-16,-17,18,-8,-14,-15,-13,25,-7,-9,-18,-19,-2,-4,-3,]),'R_PAREN':([3,4,5,6,8,10,13,14,16,19,20,21,22,23,24,26,27,28,29,30,],[-10,-11,-12,-16,-17,-8,-14,-15,-13,-6,26,-7,-9,-18,-19,-2,30,-5,-4,-3,]),'EXCLUDE':([3,4,5,6,8,10,13,14,16,19,20,21,22,23,24,26,28,29,30,],[-10,-11,-12,-16,-17,-8,-14,-15,-13,-6,27,-7,-9,-18,-19,29,-5,-4,-3,]),'SUFFIX':([4,6,13,14,16,22,],[13,-16,-14,-15,13,-9,]),'COMPARATIVE_SUFFIX':([4,6,13,14,16,22,],[14,-16,-14,-15,14,-9,]),'HYPHEN':([6,],[15,]),'DOT':([8,],[17,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'choiki':([0,],[1,]),'node':([0,2,10,11,12,19,21,25,],[2,10,10,19,21,10,10,19,]),'range_node':([0,2,10,11,12,19,21,25,],[3,3,3,3,3,3,3,3,]),'num_node':([0,2,7,10,11,12,19,21,25,],[4,4,16,4,4,4,4,4,4,]),'string_node':([0,2,10,11,12,19,21,25,],[5,5,5,5,5,5,5,5,]),'node_list':([11,25,],[20,28,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> choiki","S'",1,None,None,None),
  ('choiki -> node','choiki',1,'p_choiki','ken_all_choiki_yacc.py',11),
  ('node -> node L_PAREN node_list R_PAREN','node',4,'p_node_list_children','ken_all_choiki_yacc.py',18),
  ('node -> node L_PAREN node_list EXCLUDE R_PAREN','node',5,'p_exlude_node','ken_all_choiki_yacc.py',28),
  ('node -> node L_PAREN node_list R_PAREN EXCLUDE','node',5,'p_exlude_node2','ken_all_choiki_yacc.py',40),
  ('node_list -> node COMMA node_list','node_list',3,'p_node_list','ken_all_choiki_yacc.py',52),
  ('node_list -> node','node_list',1,'p_node_list','ken_all_choiki_yacc.py',53),
  ('range_node -> node WAVE_DASH node','range_node',3,'p_range_node','ken_all_choiki_yacc.py',64),
  ('node -> node node','node',2,'p_node_succ','ken_all_choiki_yacc.py',94),
  ('num_node -> NUMBER HYPHEN NUMBER','num_node',3,'p_node_hyphen','ken_all_choiki_yacc.py',102),
  ('node -> range_node','node',1,'p_node','ken_all_choiki_yacc.py',110),
  ('node -> num_node','node',1,'p_node','ken_all_choiki_yacc.py',111),
  ('node -> string_node','node',1,'p_node','ken_all_choiki_yacc.py',112),
  ('num_node -> PREFIX num_node','num_node',2,'p_num_node_prefix','ken_all_choiki_yacc.py',119),
  ('num_node -> num_node SUFFIX','num_node',2,'p_num_node_suffix','ken_all_choiki_yacc.py',127),
  ('num_node -> num_node COMPARATIVE_SUFFIX','num_node',2,'p_num_node_comparative_suffix','ken_all_choiki_yacc.py',135),
  ('num_node -> NUMBER','num_node',1,'p_num_node','ken_all_choiki_yacc.py',143),
  ('string_node -> ID','string_node',1,'p_string_node','ken_all_choiki_yacc.py',150),
  ('string_node -> ID DOT ID','string_node',3,'p_dot_concat_string','ken_all_choiki_yacc.py',157),
  ('string_node -> FLOOR COMMA FLOOR','string_node',3,'p_floow_string','ken_all_choiki_yacc.py',164),
]
